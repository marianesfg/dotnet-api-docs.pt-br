<Type Name="DateTimeFormatInfo" FullName="System.Globalization.DateTimeFormatInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f7444dcbcb4fe45b5c5328da64aa39961c484f9" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53291399" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateTimeFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.DateTimeFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DateTimeFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeFormatInfo sealed : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type DateTimeFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece informações específicas da cultura sobre o formato dos valores de data e hora.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As propriedades do <xref:System.Globalization.DateTimeFormatInfo> classe contêm informações específicas da cultura para formatação ou análise de valores de data e hora como o seguinte:  
  
-   Os padrões usados para formatar valores de data.  
  
-   Os padrões usados para formatar valores de tempo.  
  
-   Os nomes dos dias da semana.  
  
-   Os nomes dos meses do ano.  
  
-   A.M. e horas. Designadores usados em valores de tempo.  
  
-   O calendário no qual as datas são expressos.  
  
 Nesta seção:  
  
-   [Criando uma instância de um objeto DateTimeFormatInfo](#instantiating)  
  
    -   [Para a cultura invariável](#instantiating_Invariant)  
  
    -   [Para uma cultura específica](#instantiating_Specific)  
  
    -   [Para uma cultura neutra](#instantiating_neutral)  
  
    -   [Para a cultura atual](#instantiating_Current)  
  
-   [DateTimeFormatInfo e dados dinâmicos](#dynamic)  
  
-   [Formatar datas e horas](#Formatting_dates_times)  
  
-   [Cadeias de caracteres de formato e propriedades DateTimeFormatInfo](#properties)  
  
-   [Modificando propriedades DateTimeFormatInfo](#Modifying)  
  
<a name="instantiating"></a>   
## <a name="instantiating-a-datetimeformatinfo-object"></a>Criando uma instância de um objeto DateTimeFormatInfo  
 Um <xref:System.Globalization.DateTimeFormatInfo> objeto pode representar as convenções de formatação da cultura invariável, uma cultura específica, uma cultura neutra ou a cultura atual. Esta seção discute como criar uma instância de cada tipo de <xref:System.Globalization.DateTimeFormatInfo> objeto.  
  
<a name="instantiating_Invariant"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-invariant-culture"></a>Criando uma instância de um objeto DateTimeFormatInfo para a cultura invariável  
 A cultura invariável representa uma cultura insensível. Ele se baseia no idioma inglês, mas não em qualquer falante de inglês país/região específico. Embora os dados de culturas específicas podem ser dinâmicos e podem ser alterado para refletir as novas convenções culturais ou as preferências do usuário, não alteram os dados da cultura invariável. Você pode instanciar um <xref:System.Globalization.DateTimeFormatInfo> objeto que representa as convenções de formatação da cultura invariável das seguintes maneiras:  
  
-   Recuperando o valor da <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> propriedade. Retornado <xref:System.Globalization.DateTimeFormatInfo> objeto é somente leitura.  
  
-   Chamando o Next sem parâmetros <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> construtor. Retornado <xref:System.Globalization.DateTimeFormatInfo> objeto é leitura/gravação.  
  
-   Recuperando o valor da <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propriedade do <xref:System.Globalization.CultureInfo> objeto que é retornado pelo <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> propriedade. Retornado <xref:System.Globalization.DateTimeFormatInfo> objeto é somente leitura.  
  
 O exemplo a seguir usa cada um desses métodos para instanciar um <xref:System.Globalization.DateTimeFormatInfo> objeto que representa a cultura invariável. Em seguida, ele indica se o objeto é somente leitura.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#1)]  
  
<a name="instantiating_Specific"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-specific-culture"></a>Criando uma instância de um objeto DateTimeFormatInfo para uma cultura específica  
 Uma cultura específica representa uma linguagem que é falada em um país/região específico. Por exemplo, en-US é uma cultura específica que representa o idioma inglês falado nos Estados Unidos e en-CA é uma cultura específica que representa o idioma inglês falado no Canadá. Você pode instanciar um <xref:System.Globalization.DateTimeFormatInfo> objeto que representa as convenções de formatação de uma cultura específica das seguintes maneiras:  
  
-   Chamando o <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> método e recuperar o valor retornado <xref:System.Globalization.CultureInfo> do objeto <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriedade. Retornado <xref:System.Globalization.DateTimeFormatInfo> objeto é somente leitura.  
  
-   Passando estático <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> método uma <xref:System.Globalization.CultureInfo> objeto que representa a cultura cuja <xref:System.Globalization.DateTimeFormatInfo> objeto que deseja recuperar. Retornado <xref:System.Globalization.DateTimeFormatInfo> objeto é leitura/gravação.  
  
-   Chamando estático <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> método e recuperar o valor retornado <xref:System.Globalization.CultureInfo> do objeto <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriedade. Retornado <xref:System.Globalization.DateTimeFormatInfo> objeto é leitura/gravação.  
  
-   Chamando o <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> da classe de construtor e recuperando o valor retornado <xref:System.Globalization.CultureInfo> do objeto <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriedade. Retornado <xref:System.Globalization.DateTimeFormatInfo> objeto é leitura/gravação.  
  
 O exemplo a seguir ilustra cada uma das seguintes maneiras para instanciar um <xref:System.Globalization.DateTimeFormatInfo> de objeto e indica se o objeto resultante é somente leitura.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#3)]  
  
<a name="instantiating_neutral"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-neutral-culture"></a>Criando uma instância de um objeto DateTimeFormatInfo para uma cultura neutra  
 Uma cultura neutra representa uma cultura ou idioma que é independente de um país/região; Geralmente, é o pai de um ou mais culturas específicas. Por exemplo, Fr é uma cultura neutra para o idioma francês e o pai da cultura fr-FR. Você pode criar uma instância de um <xref:System.Globalization.DateTimeFormatInfo> objeto que representa as convenções de formatação de uma cultura neutra da mesma maneira que você cria um <xref:System.Globalization.DateTimeFormatInfo> objeto que representa as convenções de formatação de uma cultura específica. Além disso, você pode recuperar uma cultura neutra <xref:System.Globalization.DateTimeFormatInfo> objeto recuperando uma cultura neutra de uma cultura específica <xref:System.Globalization.CultureInfo.Parent%2A?displayProperty=nameWithType> propriedade e recuperando as <xref:System.Globalization.DateTimeFormatInfo> objeto retornado pelo seu <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriedade. A menos que a cultura pai representa a cultura invariável retornada <xref:System.Globalization.DateTimeFormatInfo> objeto é leitura/gravação. O exemplo a seguir ilustra essas formas de instanciar um <xref:System.Globalization.DateTimeFormatInfo> objeto que representa uma cultura neutra.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#2)]  
  
> [!NOTE]
>  Nas versões do .NET Framework 1.0 por meio [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], tentar recuperar um <xref:System.Globalization.DateTimeFormatInfo> objeto que reflete as convenções de formatação de uma cultura neutra lança um <xref:System.NotSupportedException> exceção.  
  
 No entanto, uma cultura neutra não tem informações de formatação específicas da cultura, porque ele é independente de um país/região específico. Em vez de preencher a <xref:System.Globalization.DateTimeFormatInfo> do objeto com valores genéricos, o .NET Framework retorna um <xref:System.Globalization.DateTimeFormatInfo> objeto que reflete as convenções de formatação de uma versão específica de cultura que é um filho de cultura neutra. Por exemplo, o <xref:System.Globalization.DateTimeFormatInfo> do objeto para a cultura neutra en reflete as convenções de formatação da cultura en-US e o <xref:System.Globalization.DateTimeFormatInfo> do objeto para a cultura fr reflete as convenções de formatação da cultura fr-FR.  
  
 Você pode usar código semelhante ao seguinte para determinar as convenções de formatação da cultura quais específico representa uma cultura neutra. O exemplo usa a reflexão para comparar o <xref:System.Globalization.DateTimeFormatInfo> propriedades de uma cultura neutra com as propriedades de uma cultura filho específicos. Considera os dois calendários para serem equivalentes se eles são do mesmo tipo de calendário e, para o calendário gregoriano calendários, se seus <xref:System.Globalization.GregorianCalendar.CalendarType%2A?displayProperty=nameWithType> propriedades têm valores idênticos.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate6c.vb#6)]  
  
<a name="instantiating_Current"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-current-culture"></a>Criando uma instância de um objeto DateTimeFormatInfo para a cultura atual  
 Você pode instanciar um <xref:System.Globalization.DateTimeFormatInfo> objeto que representa as convenções de formatação da cultura atual das seguintes maneiras:  
  
-   Recuperando o valor da <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> propriedade. Retornado <xref:System.Globalization.DateTimeFormatInfo> objeto é somente leitura.  
  
-   Recuperando o valor da <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propriedade do <xref:System.Globalization.CultureInfo> objeto que é retornado pelo <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propriedade. Retornado <xref:System.Globalization.DateTimeFormatInfo> objeto é somente leitura.  
  
-   Chamando o <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> método com um <xref:System.Globalization.CultureInfo> objeto que representa a cultura atual. Retornado <xref:System.Globalization.DateTimeFormatInfo> objeto é somente leitura.  
  
 O exemplo a seguir usa cada um desses métodos para instanciar um <xref:System.Globalization.DateTimeFormatInfo> objeto que representa as convenções de formatação da cultura atual. Em seguida, ele indica se o objeto é somente leitura.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create2.cs#4)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create2.vb#4)]  
  
 Você pode criar um gravável <xref:System.Globalization.DateTimeFormatInfo> objeto que representa as convenções da cultura do thread atual em uma das seguintes maneiras:  
  
-   Recuperando uma <xref:System.Globalization.DateTimeFormatInfo> do objeto em qualquer uma das três maneiras anteriores e chamar o <xref:System.Globalization.DateTimeFormatInfo.Clone%2A> método em retornado <xref:System.Globalization.DateTimeFormatInfo> objeto. Isso cria uma cópia do original <xref:System.Globalization.DateTimeFormatInfo> do objeto, exceto que sua <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> é de propriedade `false`.  
  
-   Chamando o <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> método para criar um <xref:System.Globalization.CultureInfo> que representa a cultura atual do objeto e, em seguida, usando seu <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriedade para recuperar o <xref:System.Globalization.DateTimeFormatInfo> objeto.  
  
 O exemplo a seguir ilustra cada forma de criar uma instância de uma leitura/gravação <xref:System.Globalization.DateTimeFormatInfo> do objeto e exibe o valor da sua <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> propriedade.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate2.cs#7)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate2.vb#7)]  
  
 No Windows, o usuário pode substituir alguns da <xref:System.Globalization.DateTimeFormatInfo> valores de propriedade usados na formatação e análise de operações por meio de **região e idioma** aplicativo no painel de controle. Por exemplo, um usuário cuja cultura é inglês (Estados Unidos) pode optar por exibir longa os valores de tempo usando um relógio de 24 horas (no formato hh: mm ss) em vez do relógio de 12 horas padrão (no formato h:mm: ss tt). O <xref:System.Globalization.DateTimeFormatInfo> objetos recuperados das maneiras discutidos anteriormente refletem essas substituições do usuário. Se isso for indesejável, você pode criar uma <xref:System.Globalization.NumberFormatInfo> objeto que não reflita usuário substitui (e também é leitura/gravação, em vez de somente leitura) chamando o <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> construtor e fornecendo um valor de `false` para o `useUserOverride` argumento. O exemplo a seguir ilustra isso para um sistema cuja cultura atual seja inglês (Estados Unidos) e cujo padrão de muito tempo foi alterado do padrão de h:mm: ss tt para hh.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate3.cs#8)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate3.vb#8)]  
  
<a name="dynamic"></a>   
## <a name="datetimeformatinfo-and-dynamic-data"></a>DateTimeFormatInfo e dados dinâmicos  
 Os dados específicos de cultura para formatação de valores de data e hora fornecidas pelo <xref:System.Globalization.DateTimeFormatInfo> classe é dinâmico, assim como os dados culturais fornecidos pelo <xref:System.Globalization.CultureInfo> classe. Você não deve fazer suposições sobre a estabilidade dos valores para <xref:System.Globalization.DateTimeFormatInfo> objetos que estão associados com determinado <xref:System.Globalization.CultureInfo> objetos. Somente os dados fornecidos por cultura invariável e seus respectivos <xref:System.Globalization.DateTimeFormatInfo> objeto esteja estável. Outros dados podem ser alterados entre as sessões do aplicativo ou até mesmo durante a execução do seu aplicativo. Há quatro principais fontes de alteração:  
  
-   Atualizações do sistema. Alterar as preferências culturais, como o calendário preferencial ou habitual formatos de data e hora ao longo do tempo. Quando isso acontece, a atualização do Windows inclui alterações para o <xref:System.Globalization.DateTimeFormatInfo> valor da propriedade para uma determinada cultura.  
  
-   Culturas de substituição. O <xref:System.Globalization.CultureAndRegionInfoBuilder> classe pode ser usada para substituir os dados de uma cultura existente.  
  
-   Alterações em cascata para valores de propriedade. Um número de propriedades relacionadas à cultura pode ser alterado em tempo de execução, o que, por sua vez, faz com que <xref:System.Globalization.DateTimeFormatInfo> dados para alterar. Por exemplo, a cultura atual pode ser alterada programaticamente ou por meio de ação do usuário. Quando isso acontece, o <xref:System.Globalization.DateTimeFormatInfo> objeto retornado pelo <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> propriedade muda para um objeto associado com a cultura atual. Da mesma forma, calendário de uma cultura pode ser alterado, que pode resultar em alterações várias <xref:System.Globalization.DateTimeFormatInfo> valores de propriedade.  
  
-   Preferências do usuário. Os usuários do seu aplicativo podem optar por substituir alguns dos valores associados com a cultura atual do sistema por meio das opções regionais e de idioma no painel de controle. Por exemplo, os usuários podem optar por exibir a data em um formato diferente. Se o <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> estiver definida como `true`, as propriedades do <xref:System.Globalization.DateTimeFormatInfo> objeto também é recuperado das configurações de usuário. Se as configurações do usuário são incompatíveis com a cultura associada com o <xref:System.Globalization.CultureInfo> objeto (por exemplo, se o calendário selecionado não é um dos calendários indicados pelo <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> propriedade), os resultados dos métodos e os valores das propriedades são indefinidos.  
  
 Para minimizar a possibilidade de dados inconsistentes, todas as propriedades de usuário substituível de uma <xref:System.Globalization.DateTimeFormatInfo> objeto são inicializadas quando o objeto é criado. Ainda há uma possibilidade de inconsistência, porque a criação do objeto nem o processo de substituição do usuário seja atômico e os valores relevantes podem ser alterados durante a criação do objeto. No entanto, essa situação deve ser extremamente rara.  
  
 Você pode controlar se as substituições do usuário são refletidas no <xref:System.Globalization.DateTimeFormatInfo> objetos que representam a mesma cultura que a cultura do sistema. A tabela a seguir lista as maneiras em que um <xref:System.Globalization.DateTimeFormatInfo> objeto podem ser recuperado e indica se o objeto resultante reflete substituições do usuário.  
  
|Origem do objeto CultureInfo e DateTimeFormatInfo|Reflete as substituições do usuário|  
|---------------------------------------------------------|-----------------------------|  
|Propriedade `CultureInfo.CurrentCulture.DateTimeFormat`|Sim|  
|Propriedade <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>|Sim|  
|Método <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>|Sim|  
|Método <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType>|Não|  
|Construtor <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType>|Sim|  
|Construtor <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>|Depende do valor de `useUserOverride` parâmetro|  
  
 A menos que haja um motivo convincente para fazer o contrário, você deve respeitar substituições do usuário quando você usa o <xref:System.Globalization.DateTimeFormatInfo> objeto em aplicativos de cliente para formatar e analisar a entrada do usuário ou para exibir dados. Para aplicativos de servidor ou aplicativos autônomos, você não deve. No entanto, se você estiver usando o <xref:System.Globalization.DateTimeFormatInfo> objeto explicitamente ou implicitamente para persistir dados de data e hora no formato de cadeia de caracteres, você deve usar um <xref:System.Globalization.DateTimeFormatInfo> objeto que reflete as convenções de formatação da cultura invariável, ou você deve especificar um cadeia de caracteres que podem ser usados independentemente da cultura de formato de data e hora personalizado.  
  
<a name="Formatting_dates_times"></a>   
## <a name="formatting-dates-and-times"></a>Formatando datas e horas  
 Um <xref:System.Globalization.DateTimeFormatInfo> objeto é usado implicitamente ou explicitamente em todos os data e hora que operações de formatação. Isso inclui chamadas para os seguintes métodos:  
  
-   Todos os data e hora, formatação de métodos, como <xref:System.DateTime.ToString?displayProperty=nameWithType> e <xref:System.DateTimeOffset.ToString%28System.String%29?displayProperty=nameWithType>.  
  
-   O método, que é de formatação de composição principais <xref:System.String.Format%2A?displayProperty=nameWithType>.  
  
-   Outra métodos, de formatação, como de composição <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> e <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Todos os data e hora fazer operações de formatação usam de uma <xref:System.IFormatProvider> implementação. O <xref:System.IFormatProvider> interface inclui um único método, <xref:System.IFormatProvider.GetFormat%28System.Type%29?displayProperty=nameWithType>. Esse método de retorno de chamada é passado um <xref:System.Type> objeto que representa o tipo necessário para fornecer informações de formatação. O método retorna uma instância desse tipo ou `null` se ele não pode fornecer uma instância do tipo. O .NET Framework inclui dois <xref:System.IFormatProvider> implementações para formatar datas e horas:  
  
-   O <xref:System.Globalization.CultureInfo> classe, que representa uma cultura específica (ou um idioma específico em um país/região específico). Em uma data e hora, formatação de operação, o <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> método retorna o <xref:System.Globalization.DateTimeFormatInfo> objeto associado ao seu <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriedade.  
  
-   O <xref:System.Globalization.DateTimeFormatInfo> classe, que fornece informações sobre as convenções de formatação de sua cultura associada. O <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A?displayProperty=nameWithType> método retorna uma instância de si mesmo.  
  
 Se um <xref:System.IFormatProvider> implementação não é fornecida para um método de formatação explicitamente, o <xref:System.Globalization.CultureInfo> objeto retornado pelo <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propriedade que representa a cultura do thread atual será usada.  
  
 O exemplo a seguir ilustra o relacionamento entre o <xref:System.IFormatProvider> interface e o <xref:System.Globalization.DateTimeFormatInfo> classe em operações de formatação. Ele define um personalizado <xref:System.IFormatProvider> implementação cuja <xref:System.IFormatProvider.GetFormat%2A> método exibe o tipo do objeto solicitada pela operação de formatação. Se ele está solicitando uma <xref:System.Globalization.DateTimeFormatInfo> do objeto, o método fornece a <xref:System.Globalization.DateTimeFormatInfo> objeto para a cultura do thread atual. Como a saída do exemplo mostra, o <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> solicitações de método uma <xref:System.Globalization.DateTimeFormatInfo> objeto para fornecer informações de formatação, enquanto que o <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> solicitações de método <xref:System.Globalization.NumberFormatInfo> e <xref:System.Globalization.DateTimeFormatInfo> objetos, bem como um <xref:System.ICustomFormatter> implementação.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/formatprovider1.cs#9)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/formatprovider1.vb#9)]  
  
<a name="properties"></a>   
## <a name="format-strings-and-datetimeformatinfo-properties"></a>Cadeias de caracteres de formato e propriedades DateTimeFormatInfo  
 O <xref:System.Globalization.DateTimeFormatInfo> objeto inclui três tipos de propriedades que são usadas na formatação de operações com valores de data e hora:  
  
-   Propriedades relacionadas ao calendário. Propriedades, como <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, e <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, são associados com o calendário usado pela cultura, que é definido pelo <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriedade. Essas propriedades são usadas para data por extenso e formatos de hora.  
  
-   Propriedades que produzem uma cadeia de caracteres de resultado com os padrões definidos. O <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, e <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> propriedades contêm cadeias de caracteres de formato personalizado que geram cadeias de caracteres de resultado definidas por padrões internacionais. Essas propriedades são somente leitura e não podem ser modificadas.  
  
-   Propriedades que definem as cadeias de caracteres de resultado sensíveis à cultura. Algumas propriedades, tais como <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> e <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, conter [cadeias de caracteres de formato personalizado](~/docs/standard/base-types/custom-date-and-time-format-strings.md) que especificam o formato da cadeia de caracteres de resultado. Outros, como <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>, <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, e <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, definir símbolos de cultura ou subcadeias de caracteres que podem ser incluídas em uma cadeia de caracteres de resultado.  
  
 O [cadeias de caracteres de formato de data e hora padrão](~/docs/standard/base-types/standard-date-and-time-format-strings.md), como "d", "D", "f" e "F", são aliases que correspondem a determinado <xref:System.Globalization.DateTimeFormatInfo> propriedades do padrão de formato. A maioria dos [cadeias de caracteres de formato de data e hora personalizado](~/docs/standard/base-types/custom-date-and-time-format-strings.md) relacionadas a cadeias de caracteres ou subcadeias de caracteres que uma operação de formatação insere no fluxo de resultado. A tabela a seguir lista a data padrão e personalizada e especificadores de formato de hora e seus respectivos <xref:System.Globalization.DateTimeFormatInfo> propriedades. Para obter detalhes sobre como usar esses especificadores de formato, consulte [padrão de data e cadeias de caracteres de formato de hora](~/docs/standard/base-types/standard-date-and-time-format-strings.md) e [Data personalizada e cadeias de caracteres de formato de hora](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Observe que cada cadeia de caracteres de formato padrão corresponde a um <xref:System.Globalization.DateTimeFormatInfo> propriedade cujo valor é uma data personalizada e a cadeia de caracteres de formato de hora. Os especificadores individuais nessa cadeia de caracteres de formato personalizado, por sua vez correspondem aos outros <xref:System.Globalization.DateTimeFormatInfo> propriedades. A tabela lista apenas o <xref:System.Globalization.DateTimeFormatInfo> propriedades para o qual as cadeias de caracteres de formato padrão são aliases e faz não as propriedades de lista que podem ser acessadas por cadeias de caracteres de formato personalizado atribuídas a essas propriedades de um alias. Além disso, a tabela lista apenas os especificadores de formato personalizado que correspondem aos <xref:System.Globalization.DateTimeFormatInfo> propriedades.  
  
|Especificador de formato|Propriedades associadas|  
|----------------------|---------------------------|  
|"d" (; cadeia de caracteres de formato padrão de data abreviada)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, para definir o formato geral da cadeia de caracteres de resultado.|  
|"D" (data por extenso; cadeia de caracteres de formato padrão)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, para definir o formato geral da cadeia de caracteres de resultado.|  
|"f" (total de data / curto tempo; padrão cadeia de caracteres de formato)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, para definir o formato do componente Data da cadeia de caracteres resultante.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, para definir o formato do componente time da cadeia de caracteres de resultado.|  
|"F" (total de data / longa tempo; a cadeia de caracteres de formato padrão)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, para definir o formato do componente Data da cadeia de caracteres resultante.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, para definir o formato do componente time da cadeia de caracteres de resultado.|  
|"g" (geral de data / hora abreviada; cadeia de caracteres de formato padrão)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, para definir o formato do componente Data da cadeia de caracteres resultante.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, para definir o formato do componente time da cadeia de caracteres de resultado.|  
|"G" (geral de data / longo tempo; padrão cadeia de caracteres de formato)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, para definir o formato do componente Data da cadeia de caracteres resultante.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, para definir o formato do componente time da cadeia de caracteres de resultado.|  
|"M", "m" (dia/mês; cadeia de caracteres de formato padrão)|<xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>, para definir o formato geral da cadeia de caracteres de resultado.|  
|"O", "o" (ida e volta de data/hora; cadeia de caracteres de formato padrão)|nenhuma.|  
|"R", "r" (RFC1123; cadeia de caracteres de formato padrão)|<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, para definir uma cadeia de caracteres de resultado que está em conformidade com o padrão RFC 1123. A propriedade é somente leitura.|  
|"s" (data/hora classificável; cadeia de caracteres de formato padrão)|<xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, para definir uma cadeia de caracteres de resultado que está em conformidade com o padrão ISO 8601. A propriedade é somente leitura.|  
|"t" (curto período de tempo; cadeia de caracteres de formato padrão)|<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, para definir o formato geral da cadeia de caracteres de resultado.|  
|"T" (muito tempo; cadeia de caracteres de formato padrão)|<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, para definir o formato geral da cadeia de caracteres de resultado.|  
|"u" (universal data/hora classificável; cadeia de caracteres de formato padrão)|<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>, para definir uma cadeia de caracteres de resultado que está em conformidade com o padrão ISO 8601 para o tempo universal coordenado. A propriedade é somente leitura.|  
|"U" (data/hora universal completa; cadeia de caracteres de formato padrão)|<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, para definir o formato geral da cadeia de caracteres de resultado.|  
|"Y", "y" (ano mês; cadeia de caracteres de formato padrão)|<xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>, para definir o formato geral da cadeia de caracteres de resultado.|  
|"ddd" (especificador de formato personalizado)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, para incluir o nome abreviado do dia da semana na cadeia de caracteres de resultado.|  
|"g", "gg" (especificador de formato personalizado)|Chamadas a <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> método para inserir o nome da era na cadeia de caracteres de resultado.|  
|"MMM" (especificador de formato personalizado)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, para incluir o nome abreviado do mês na cadeia de caracteres de resultado.|  
|"MMMM" (especificador de formato personalizado)|<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> ou <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>, para incluir o nome completo do mês na cadeia de caracteres resultante.|  
|"t" (especificador de formato personalizado)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> ou <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, para incluir o primeiro caractere do designador AM/PM na cadeia de caracteres resultante.|  
|"tt" (especificador de formato personalizado)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> ou <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, para incluir o designador AM/PM completo na cadeia de caracteres resultante.|  
|":" (especificador de formato personalizado)|<xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, para incluir o separador de hora na cadeia de caracteres de resultado.|  
|"/" (especificador de formato personalizado)|<xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, para incluir o separador de data na cadeia de caracteres de resultado.|  
  
<a name="Modifying"></a>   
## <a name="modifying-datetimeformatinfo-properties"></a>Modificando propriedades DateTimeFormatInfo  
 Você pode alterar a cadeia de caracteres de resultado produzida por cadeias de caracteres de formato de data e hora, modificando as propriedades associadas de um gravável <xref:System.Globalization.DateTimeFormatInfo> objeto. Para determinar se um <xref:System.Globalization.DateTimeFormatInfo> objeto é gravável, use o <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> propriedade. Para personalizar um <xref:System.Globalization.DateTimeFormatInfo> objeto desta forma:  
  
1.  Criar uma cópia de leitura/gravação de um <xref:System.Globalization.DateTimeFormatInfo> objeto cujas convenções de formatação que você deseja modificar. (Consulte a [instanciar um objeto DateTimeFormatInfo](#instantiating) seção.)  
  
2.  Modifique a propriedade ou propriedades que são usadas para produzir a cadeia de caracteres de resultado desejado. (Para obter informações sobre o uso de métodos como a formatação <xref:System.Globalization.DateTimeFormatInfo> propriedades para definir as cadeias de caracteres de resultado, consulte a seção anterior, [Formatar cadeias de caracteres e propriedades DateTimeFormatInfo](#properties).)  
  
3.  Usar o custom <xref:System.Globalization.DateTimeFormatInfo> do objeto que você criou como o <xref:System.IFormatProvider> argumento em chamadas para métodos de formatação.  
  
 Há duas outras maneiras de alterar o formato de uma cadeia de caracteres de resultado:  
  
-   Você pode usar o <xref:System.Globalization.CultureAndRegionInfoBuilder> classe para definir uma cultura personalizada (uma cultura que tem um nome exclusivo e que complementa existente culturas) ou uma cultura substituta (aquele que é usado em vez de uma cultura específica). Você pode salvar e acessar essa cultura por meio de programação, como você faria com qualquer <xref:System.Globalization.CultureInfo> objeto compatível com o .NET Framework.  
  
-   Se a cadeia de caracteres de resultado não é sensível à cultura e não segue um formato predefinido, você pode usar um personalizado de data e a cadeia de caracteres de formato de hora. Por exemplo, se você estiver serializando dados de data e hora no formato YYYYMMDDHHmmss, você pode gerar a cadeia de caracteres de resultado, passando a cadeia de caracteres de formato personalizado para o <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> método e você pode converter a cadeia de caracteres de resultado para um <xref:System.DateTime> valor chamando o <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> método.  
  
### <a name="changing-the-short-date-pattern"></a>Alterando o padrão de data abreviada  
 O exemplo a seguir altera o formato de uma cadeia de caracteres de resultado produzida pela cadeia de caracteres de formato padrão (data abreviada) "d". Ele altera associado <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> propriedade para o en-US ou cultura do inglês (Estados Unidos) do seu padrão de "M/aaaa" para "yyyy'-" MM"-"dd"e usa a cadeia de caracteres de formato padrão"d"para exibir a data antes e depois o <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> é de propriedade alterado.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example1.cs#10)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example1.vb#10)]  
  
### <a name="changing-the-date-separator-character"></a>Alterando o caractere separador de data  
 O exemplo a seguir altera o caractere separador de data em um <xref:System.Globalization.DateTimeFormatInfo> objeto que representa as convenções de formatação da cultura fr-FR. O exemplo usa a cadeia de caracteres de formato padrão "g" para exibir a data antes e depois o <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> propriedade é alterada.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example3.cs#12)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example3.vb#12)]  
  
### <a name="changing-day-name-abbreviations-and-the-long-date-pattern"></a>Alterando abreviações do nome do dia e o padrão de data longa  
 Em alguns casos, o padrão de data por extenso, que normalmente exibe o dia inteiro e o nome do mês, juntamente com o número do dia do mês e ano, pode ser muito longo. O exemplo a seguir reduz o padrão de data por extenso para a cultura en-US retornar uma abreviação do nome do dia de dois caracteres ou de um caractere seguido do número de dias, a abreviação do nome do mês e ano. Ele faz isso por meio da atribuição abreviações de nomes de dia mais curtas para o <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> matriz e, em seguida, modificando a cadeia de caracteres de formato personalizado atribuída para o <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriedade. Isso afeta as cadeias de caracteres de formato padrão "f" e cadeias de caracteres de resultado retornadas pelo "D".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example2.cs#13)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example2.vb#13)]  
  
 Normalmente, a alteração para o <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriedade também afeta o <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> propriedade, que por sua vez, define a cadeia de caracteres de resultado retornada pela cadeia de caracteres de formato padrão "F". Para preservar o original completa padrão de data e hora, o exemplo reatribui a cadeia de caracteres de formato personalizado original atribuída para o <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> propriedade após o <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriedade é modificada.  
  
### <a name="changing-from-a-12-hour-clock-to-a-24-hour-clock"></a>Alterando de um relógio de 12 horas para um relógio de 24 horas  
 Para muitas culturas do .NET Framework, o tempo é expresso usando um relógio de 12 horas e um designador AM/PM. O exemplo a seguir define uma `ReplaceWith24HourClock` método que substitui qualquer formato de hora que usa um relógio de 12 horas com um formato que usa um relógio de 24 horas.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example5.cs#14)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example5.vb#14)]  
  
 O exemplo usa uma expressão regular para modificar a cadeia de caracteres de formato. O padrão de expressão regular `@"^(?<openAMPM>\s*t+\s*)? (?(openAMPM) h+(?<nonHours>[^ht]+)$ | \s*h+(?<nonHours>[^ht]+)\s*t+)` é definido da seguinte maneira:  
  
|Padrão|Descrição|  
|-------------|-----------------|  
|`^`|Começar a correspondência no início da cadeia de caracteres.|  
|`(?<openAMPM>\s*t+\s*)?`|Ocorrência de correspondência de zero ou um de espaço em branco zero ou mais caracteres, seguida pela letra "t", um ou mais vezes, seguido por zero ou mais caracteres de espaço em branco. Esse grupo de captura é denominado `openAMPM`.|  
|`(?(openAMPM) h+(?<nonHours>[^ht]+)$`|Se o `openAMPM` grupo tem uma correspondência, corresponda a letra "h" uma ou mais vezes, seguido por um ou mais caracteres que não são "h" nem "t". A correspondência termina no final da cadeia de caracteres. Todos os caracteres capturados depois "h" é incluída em um grupo de captura chamado `nonHours`.|  
|`&#124; \s*h+(?<nonHours>[^ht]+)\s*t+)`|Se o `openAMPM` grupo não tiver uma correspondência, corresponda a letra "h" uma ou mais vezes, seguidos por um ou mais caracteres que não são "h" nem "t", seguido por zero ou mais caracteres de espaço em branco. Por fim, corresponde a uma ou mais ocorrências da letra "t". Todos os caracteres capturados após "h" e antes que os espaços em branco e "t" são incluídos em um grupo de captura chamado `nonHours`.|  
  
 O `nonHours` grupo de captura contém o minuto e, possivelmente, o segundo componente de data personalizada e cadeia de caracteres de formato de hora, juntamente com quaisquer símbolos de separador de hora. O padrão de substituição `HH${nonHours}` precede a subcadeia de caracteres "HH" para esses elementos.  
  
### <a name="displaying-and-changing-the-era-in-a-date"></a>Exibindo e alterando a era uma data  
 O exemplo a seguir adiciona o especificador de formato personalizado "g" para o <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriedade de um objeto que representa as convenções de formatação da cultura en-US. Essa adição afeta as seguintes três cadeias de formato padrão:  
  
-   A cadeia de formato padrão "D" (data por extenso), que mapeia diretamente para o <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriedade.  
  
-   "f" (total de data / curto tempo) cadeia de caracteres de formato padrão, que produz uma cadeia de caracteres de resultado que concatena as subcadeias de caracteres produzidas pelo <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> e <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> propriedades.  
  
-   "F" (total de data / hora longa) cadeia de caracteres de formato padrão, que mapeia diretamente para o <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> propriedade. Porque nós não tiver definido esse valor de propriedade explicitamente, ela é gerada dinamicamente por meio da concatenação de <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> e <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> propriedades.  
  
 O exemplo também mostra como alterar o nome era para uma cultura cujo calendário tem uma única era. Nesse caso, a cultura en-US usa o calendário gregoriano, o que é representado por um <xref:System.Globalization.GregorianCalendar> objeto. O <xref:System.Globalization.GregorianCalendar> classe dá suporte a uma única era, ela nomeia D.C. (Anno Domini). O exemplo altera o nome era para C.E. (Era comum), substituindo o especificador de formato personalizado "g" na cadeia de caracteres de formato atribuído para o <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> propriedade com uma cadeia de caracteres literal. O uso de uma cadeia de caracteres literal é necessário, como o nome era normalmente é retornado pelo <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> método de dados particulares em tabelas de cultura fornecidas pelo .NET Framework ou o sistema operacional Windows.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example4.cs#11)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example4.vb#11)]  
  
## <a name="parsing-date-and-time-strings"></a>Mantendo cadeias de caracteres de data e hora  
 Análise envolve a conversão a representação de cadeia de caracteres de uma data e hora em um <xref:System.DateTime> ou <xref:System.DateTimeOffset> valor. Ambos os tipos incluem o `Parse`, `TryParse`, `ParseExact`, e `TryParseExact` métodos para dar suporte a operações de análise. O `Parse` e `TryParse` métodos convertem uma cadeia de caracteres que pode ter uma variedade de formatos, enquanto `ParseExact` e `TryParseExact` exigem que a cadeia de caracteres tenham um formato definido ou formatos. Se a operação de análise falhar, `Parse` e `ParseExact` lançar uma exceção, enquanto `TryParse` e `TryParseExact` retornar `false`.  
  
 Os métodos de análise implicitamente ou explicitamente, use um <xref:System.Globalization.DateTimeStyles> valor de enumeração para determinar quais elementos de estilo (como espaço em branco à esquerda, à direita ou interno) pode estar presente na cadeia de caracteres a ser analisada e como interpretar a cadeia de caracteres analisada ou ausentes elementos. Se você não fornecer um <xref:System.Globalization.DateTimeStyles> valor quando você chama o `Parse` ou `TryParse` método, o padrão é <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>, que é um estilo composto que inclui o <xref:System.Globalization.DateTimeStyles.AllowLeadingWhite?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeStyles.AllowTrailingWhite?displayProperty=nameWithType>, e <xref:System.Globalization.DateTimeStyles.AllowInnerWhite?displayProperty=nameWithType> sinalizadores. Para o `ParseExact` e `TryParseExact` métodos, o padrão é <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>; a cadeia de caracteres de entrada deve corresponder exatamente a uma determinada data e hora de cadeia de caracteres de formato personalizado.  
  
 Os métodos de análise também implícita ou explicitamente, use um <xref:System.Globalization.DateTimeFormatInfo> objeto que define os símbolos específicos e os padrões que pode ocorrer na cadeia de caracteres a ser analisada. Se você não fornecer um <xref:System.Globalization.DateTimeFormatInfo> objeto, o <xref:System.Globalization.DateTimeFormatInfo> do objeto para a cultura do thread atual será usada por padrão. Para obter mais informações sobre como analisar cadeias de caracteres de data e hora, consulte os métodos de análise individuais, como <xref:System.DateTime.Parse%2A?displayProperty=nameWithType>, <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%2A?displayProperty=nameWithType>, e <xref:System.DateTimeOffset.TryParseExact%2A?displayProperty=nameWithType>.  
  
 O exemplo a seguir ilustra a natureza sensível à cultura de cadeias de caracteres de hora e data de análise. Ele tenta analisar as duas cadeias de caracteres de data usando as convenções do en-US, en-GB, fr-FR e culturas fi-FI. A data em que é interpretada como 8/18/2014 em en-US cultura lança um <xref:System.FormatException> exceção outros três culturas porque 18 é interpretado como o número do mês. 2/1/2015 é analisado como o segundo dia do primeiro mês na cultura en-US, mas como o primeiro dia do mês segundo nas culturas restantes.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parsing1.cs#15)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parsing1.vb#15)]  
  
 Cadeias de caracteres de data e hora são normalmente analisadas por dois motivos:  
  
-   Para converter a entrada do usuário em um valor de data e hora.  
  
-   Para um valor de data e hora; de ida e volta ou seja, para desserializar um valor de data e hora em que foi serializado anteriormente como uma cadeia de caracteres.  
  
 As seções a seguir discutem essas duas operações mais detalhadamente.  
  
### <a name="parsing-user-strings"></a>Analisando cadeias de caracteres do usuário  
 Quando você analisa cadeias de caracteres de data e hora da entrada do usuário, você sempre deve instanciar um <xref:System.Globalization.DateTimeFormatInfo> objeto que reflete as configurações culturais do usuário, incluindo todas as personalizações que o usuário pode ter feito. Caso contrário, o objeto de data e hora pode ter valores incorretos. Para obter informações sobre como criar uma instância de um <xref:System.Globalization.DateTimeFormatInfo> objeto que reflete as personalizações culturais do usuário, consulte a [DateTimeFormatInfo e dados dinâmicos](#dynamic) seção.  
  
 O exemplo a seguir ilustra a diferença entre uma operação de análise que reflete as configurações culturais do usuário e que não faz isso. Nesse caso, a cultura padrão do sistema é en-US, mas o usuário usou o painel de controle **região e idioma** para alterar o padrão de data abreviada do seu padrão de "M/aaaa" para "AA/MM/dd". Quando o usuário insere uma cadeia de caracteres que reflete as configurações de usuário e a cadeia de caracteres é analisada por um <xref:System.Globalization.DateTimeFormatInfo> objeto que também reflete as configurações do usuário (substituições), a operação de análise retorna um resultado correto. No entanto, quando a cadeia de caracteres é analisada por um <xref:System.Globalization.DateTimeFormatInfo> objeto que reflete as configurações culturais en-US padrão, o método de análise lança um <xref:System.FormatException> exceção porque ele interpreta 14 como o número do mês, não os dois últimos dígitos do ano.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parse2.cs#16)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parse2.vb#16)]  
  
### <a name="serializing-and-deserializing-date-and-time-data"></a>Serializando e desserializando dados de data e hora  
 Serializado ida e volta; espera dados de data e hora ou seja, todos os serializado e desserializados valores devem ser idênticos. Se um valor de data e hora representa um único ponto no tempo, o valor desserializado deve representar o mesmo ponto no tempo, independentemente da cultura ou do fuso horário do sistema no qual ele foi restaurado. A data de ida e volta e dados de tempo com êxito, você deve usar as convenções da cultura invariável, que é retornado pelo <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> propriedade, para gerar e analisar os dados. As operações de formatação e análise nunca devem refletir as convenções da cultura padrão. Se você usar as configurações culturais do padrão, a portabilidade dos dados é estritamente limitada. ele pode ser desserializado com êxito somente em um thread cujas configurações culturais específicas são idênticas do thread no qual ele foi serializado. Em alguns casos, isso significa que os dados não é possível até mesmo ser com êxito serializados e desserializados no mesmo sistema.  
  
 Se o componente de tempo de um valor de data e hora é significativo, ele deve também ser convertido para UTC e serializado usando o "o" ou "r" [cadeia de caracteres de formato padrão](~/docs/standard/base-types/standard-date-and-time-format-strings.md). Os dados de tempo, em seguida, podem ser restaurados ao chamar um método de análise e passando a cadeia de caracteres de formato apropriado junto com a cultura invariável como o `provider` argumento.  
  
 O exemplo a seguir ilustra o processo de ciclo completo de um valor de data e hora. Ele serializa uma data e hora em um sistema que observa dos EUA Hora do Pacífico e cuja cultura atual é en-US.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize1.cs#17)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize1.vb#17)]  
  
 Ele desserializa os dados em um sistema no fuso horário Bruxelas, Copenhague, Madri e Paris e cuja cultura atual é fr-FR. A data restaurada é posterior à data original, que reflete o ajuste de fuso horário de oito horas atrás do UTC para uma hora à frente do UTC nove horas. A data original e a data restaurada representam o mesmo ponto no tempo.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize2.cs#18)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize2.vb#18)]  
  
   
  
## Examples  
 O exemplo a seguir usa a reflexão para obter as propriedades do <xref:System.Globalization.DateTimeFormatInfo> objeto para a cultura do inglês (Estados Unidos). Ele exibe o valor dessas propriedades que contêm cadeias de caracteres de formato personalizado e utiliza essas cadeias de caracteres para exibir datas formatadas.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/format1.cs#5)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/format1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância gravável da classe <see cref="T:System.Globalization.DateTimeFormatInfo" /> que é independente da cultura (invariável).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor cria um <xref:System.Globalization.DateTimeFormatInfo> objeto que representa as informações de data e hora da cultura invariável. Para criar uma <xref:System.Globalization.DateTimeFormatInfo> do objeto para uma cultura específica, crie um <xref:System.Globalization.CultureInfo> do objeto para aquela cultura e recuperar o <xref:System.Globalization.DateTimeFormatInfo> objeto retornado por seu <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriedade.  
  
 As propriedades do <xref:System.Globalization.DateTimeFormatInfo> objeto criado por esse construtor pode ser modificado. No entanto, você não pode modificar o <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriedade, como a cultura invariável dá suporte a apenas uma versão localizada do calendário gregoriano. Para criar uma <xref:System.Globalization.DateTimeFormatInfo> objeto que usa um calendário específico, você deve criar uma instância de um <xref:System.Globalization.CultureInfo> objeto que dá suporte a calendário e atribuir o calendário a ser a <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriedade do <xref:System.Globalization.DateTimeFormatInfo> objeto retornado pelo <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriedade .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedDayNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz unidimensional do tipo <see cref="T:System.String" /> que contém os nomes abreviados específicos da cultura dos dias da semana.</summary>
        <value>Uma matriz unidimensional do tipo <see cref="T:System.String" /> que contém os nomes abreviados específicos de cultura dos dias da semana. A matriz de <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> contém "dom", "seg", "ter", "qua", "qui", "sex" e "sáb".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se definir essa propriedade, a matriz deve ser unidimensional e deve ter exatamente sete elementos. O primeiro elemento (o elemento no índice zero) representa o primeiro dia da semana do calendário definido pelo <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriedade.  
  
 Se uma cadeia de caracteres de formato personalizado inclui o especificador de formato "ddd", o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> ou <xref:System.DateTimeOffset.ToString%2A> método inclui o membro apropriado do <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> matriz no lugar de "ddd" na cadeia de caracteres de resultado.  
  
 Essa propriedade é afetada se o valor da <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> as alterações de propriedade. Se selecionado <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> não não os nomes de dias abreviado de suporte, a matriz contém os nomes de dia inteiro.  
  
   
  
## Examples  
 O exemplo a seguir cria uma leitura/gravação <xref:System.Globalization.CultureInfo> abreviado de objeto que representa a cultura do inglês (Estados Unidos) e atribui nomes de dias para sua <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> propriedade. Ele usa o especificador de formato "ddd" em uma para exibir a representação de cadeia de caracteres de datas para uma semana a partir de 28 de maio de 2014.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/cs/abbreviateddaynames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/vb/abbreviateddaynames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">A propriedade está sendo definida como uma matriz multidimensional ou cujo tamanho não é exatamente 7.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz de cadeia de caracteres de nomes de meses abreviados associada ao objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual.</summary>
        <value>Uma matriz de nomes de meses abreviados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em alguns idiomas, um nome de mês que seja parte de uma data é exibida no caso de genitive. Por exemplo, uma data no ru-RU ou cultura russo (Rússia) consiste o número de dias e o nome do mês genitive, como 1 Января (1º de janeiro). Para essas culturas, se uma cadeia de caracteres de formato personalizado inclui o especificador de formato "MMM", o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> ou <xref:System.DateTimeOffset.ToString%2A> método inclui o membro apropriado do <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> matriz no lugar de "MMM" na cadeia de caracteres de resultado.  
  
 Em uma operação definida, a matriz deve ser unidimensional com exatamente 13 elementos, pois <xref:System.Globalization.Calendar> objetos acomodar calendários com 13 meses. Para os calendários que têm 12 meses, o décimo terceiro elemento deve ser <xref:System.String.Empty?displayProperty=nameWithType>. O primeiro elemento (o elemento no índice zero) representa o primeiro mês do ano definido pelo <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriedade.  
  
 Se você definir a <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> propriedade, você também deve definir o <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir cria uma leitura/gravação <xref:System.Globalization.CultureInfo> abreviado de objeto que representa a cultura do inglês (Estados Unidos) e atribui nomes de mês genitive para seus <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> e <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> propriedades. Em seguida, ele exibe a representação de cadeia de caracteres de datas que incluem o nome de mês abreviados de cada mês no calendário da cultura com suporte.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Em uma operação de conjuntos, a matriz é multidimensional ou tem tamanho que não é exatamente 13.</exception>
        <exception cref="T:System.ArgumentNullException">Em uma operação de conjuntos, a matriz ou um dos elementos da matriz é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Em uma operação de conjuntos, o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual é somente leitura.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz unidimensional de cadeia de caracteres que contém os nomes dos meses abreviados, específicos da cultura.</summary>
        <value>Obtém ou define uma matriz unidimensional de cadeia de caracteres com 13 elementos que contêm os nomes dos meses abreviados, específicos da cultura. Para os calendários de 12 meses, o 13º elemento da matriz é uma cadeia de caracteres vazia. A matriz de <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> contém "Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez" e "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se você definir essa propriedade, a matriz deve ser unidimensional com elementos exatamente 13. <xref:System.Globalization.Calendar> objetos acomodam calendários com 13 meses. O primeiro elemento (o elemento no índice zero) representa o primeiro mês do ano definido pelo <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriedade.  
  
 Se você definir a <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> propriedade, você também deve definir o <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> propriedade. O <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> e <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> propriedades são usadas para formatar datas usando as seguintes cadeias de caracteres de formato:  
  
-   Um padrão de data e hora de cadeia de caracteres de formato que um personalizado de aliases Formatar cadeia de caracteres que inclui "MMM" especificador de formato.  
  
-   Especificador de formato de uma data personalizada e a cadeia de caracteres de formato de hora que inclui "MMM".  
  
 Essa propriedade é afetada se o valor da <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> as alterações de propriedade. Se selecionado <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> não não os nomes de mês abreviado de suporte, a matriz contém os nomes de mês completo.  
  
   
  
## Examples  
 O exemplo a seguir cria uma leitura/gravação <xref:System.Globalization.CultureInfo> abreviado de objeto que representa a cultura do inglês (Estados Unidos) e atribui nomes de mês genitive para seus <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> e <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> propriedades. Em seguida, ele exibe a representação de cadeia de caracteres de datas que incluem o nome abreviado de cada mês no calendário da cultura com suporte.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">A propriedade está sendo definida como uma matriz multidimensional ou que tem um tamanho que não é exatamente 13.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      </Docs>
    </Member>
    <Member MemberName="AMDesignator">
      <MemberSignature Language="C#" Value="public string AMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property AMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o designador de cadeia de caracteres de horas que são "ante meridiem" (antes do meio-dia).</summary>
        <value>O designador de cadeia de caracteres para horas que são ante meridiem. O padrão de <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> é "AM".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> propriedade é usada para todas as horas de 0:00:00 (meia-noite) a 11:59:59.999.  
  
 Se uma cadeia de caracteres de formato personalizado inclui o especificador de formato "tt" e a hora está antes do meio-dia, o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> ou <xref:System.DateTimeOffset.ToString%2A> método inclui o valor da <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> propriedade no lugar de "tt" na cadeia de caracteres de resultado. Se a cadeia de caracteres de formato personalizado inclui o especificador de formato personalizado "t", somente o primeiro caractere do <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> valor da propriedade está incluído. Você deve usar "tt" para os idiomas para os quais ele é necessário para manter a distinção entre AM e horas. Um exemplo é o japonês, no qual o A.M. e horas. os designadores diferem no segundo caractere em vez do primeiro caractere.  
  
 Para as culturas que não usam um A.M. Designador, essa propriedade retorna uma cadeia de caracteres vazia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar Calendar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); void set(System::Globalization::Calendar ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar with get, set" Usage="System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o calendário a ser usado para a cultura atual.</summary>
        <value>O calendário a ser usar para a cultura atual. O padrão para <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> é um objeto <see cref="T:System.Globalization.GregorianCalendar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriedade aceita somente os calendários que são válidos para a cultura que está associada com o <xref:System.Globalization.DateTimeFormatInfo> objeto. O <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> propriedade especifica os calendários que podem ser usados por uma determinada cultura, e o <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> propriedade especifica o calendário padrão para a cultura.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

Alterar o valor dessa propriedade afeta as seguintes propriedades: <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>, <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>, <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> , e <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>.  
  
 Por exemplo, se a cultura do thread atual é o japonês, essa propriedade aceita <xref:System.Globalization.JapaneseCalendar>, <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, ou <xref:System.Globalization.GregorianCalendarTypes.USEnglish> <xref:System.Globalization.GregorianCalendar>. Quando o <xref:System.Globalization.JapaneseCalendar> for usado, a data por extenso padrão é especificador "gg y '\x5e74 estou' \x6708 tinha '\x65e5'". Quando o <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, é usado, a data por extenso padrão especificador é "aaaa '\x5e74 estou' \x6708 tinha '\x65e5'".  
  
   
  
## Examples  
 O exemplo a seguir define uma `ChangeCalendar` método que altera o calendário atual de uma cultura em um calendário especificado, a menos que ele já é o calendário atual ou se ele não é suportado pela cultura. O código que chama o método instancia um <xref:System.Globalization.CultureInfo> objeto que representa a cultura árabe (Egito) e tenta primeiro alterar seu calendário para o calendário japonês. Porque não há suporte para o calendário japonês, o método faz não altere o calendário da cultura. No entanto, porque a um calendário al-Qura é um membro do <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> coleção, o método for bem-sucedido torná-lo o calendário atual a cultura ar-EG.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/cs/CalendarTest1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/vb/CalendarTest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">A propriedade está sendo definida para um objeto <see cref="T:System.Globalization.Calendar" /> que não é válido para a cultura atual.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="CalendarWeekRule">
      <MemberSignature Language="C#" Value="public System.Globalization.CalendarWeekRule CalendarWeekRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarWeekRule CalendarWeekRule" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarWeekRule As CalendarWeekRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CalendarWeekRule CalendarWeekRule { System::Globalization::CalendarWeekRule get(); void set(System::Globalization::CalendarWeekRule value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarWeekRule : System.Globalization.CalendarWeekRule with get, set" Usage="System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarWeekRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica qual regra é usada para determinar a primeira semana do ano.</summary>
        <value>Um valor que determina a primeira semana do ano. O padrão para <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> é <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é afetada se o valor da <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> as alterações de propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">A propriedade está sendo definida com um valor que não é um valor <see cref="T:System.Globalization.CalendarWeekRule" /> válido.</exception>
        <exception cref="T:System.InvalidOperationException">Em uma operação de conjuntos, o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual é somente leitura.</exception>
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="dateTimeFormatInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma cópia superficial do <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Um novo objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> copiado do <see cref="T:System.Globalization.DateTimeFormatInfo" /> original.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O clone é gravável, mesmo que o original <xref:System.Globalization.DateTimeFormatInfo> objeto é somente leitura. Portanto, as propriedades do clone podem ser modificadas com os padrões definidos pelo usuário.  
  
 Uma cópia superficial de um objeto é uma cópia do objeto apenas. Se o objeto contiver referências a outros objetos, a cópia superficial não cria cópias dos objetos referenciados. Ele se refere aos objetos originais em vez disso. Em contraste, uma cópia em profundidade de um objeto cria uma cópia do objeto e uma cópia de tudo direta ou indiretamente referenciado por esse objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ CurrentInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> somente leitura que formata valores com base na cultura atual.</summary>
        <value>Um objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> somente leitura com base no objeto <see cref="T:System.Globalization.CultureInfo" /> para o thread atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo> objeto retornado pelo <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> propriedade reflete substituições do usuário.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> propriedade para recuperar um <xref:System.Globalization.DateTimeFormatInfo> objeto que representa as convenções de formatação da cultura atual, que nesse caso é a cultura en-US. Ele exibe a cadeia de caracteres de formato e a cadeia de caracteres de resultado para seis propriedades de formatação.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/cs/CurrentInfo1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/vb/CurrentInfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="DateSeparator">
      <MemberSignature Language="C#" Value="public string DateSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DateSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DateSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DateSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Define a cadeia de caracteres que separa a os componentes de uma data, ou seja, o ano, mês e dia.</summary>
        <value>A cadeia de caracteres que separa a os componentes de uma data, ou seja, o ano, mês e dia. O padrão para <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> é "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se uma cadeia de caracteres de formato personalizado inclui o especificador de formato "/", o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> método exibe o valor de <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> no lugar de "/" na cadeia de caracteres de resultado.  
  
 O <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> propriedade define a cadeia de caracteres que substitui o separador de data ("/" especificador de formato de data e hora personalizado) em uma cadeia de caracteres de resultado em uma operação de formatação. Ele também define a cadeia de caracteres de separador de data em uma operação de análise.  
  
   
  
## Examples  
 O exemplo a seguir instancia um <xref:System.Globalization.CultureInfo> objeto para a cultura en-US, altera seu separador de data para "-" e exibe uma data usando o "d", "G" e cadeias de caracteres de formato padrão "g".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/cs/dateseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/vb/dateseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora personalizado</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora padrão</related>
      </Docs>
    </Member>
    <Member MemberName="DayNames">
      <MemberSignature Language="C#" Value="public string[] DayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property DayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ DayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz unidimensional de cadeia de caracteres que contém os nomes dos dias da semana completos específicos da cultura.</summary>
        <value>Uma matriz unidimensional de cadeia de caracteres que contém os nomes dos dias da semana abreviados específicos da cultura. A matriz para <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> contém "domingo", "segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira" e "sábado".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se definir essa propriedade, a matriz deve ser unidimensional e deve ter exatamente sete elementos. O primeiro elemento (o elemento no índice zero) representa o primeiro dia da semana do calendário definido pelo <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriedade.  
  
 Se uma cadeia de caracteres de formato personalizado inclui o especificador de formato "dddd", o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> método inclui o valor de apropriado <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> membro no lugar de "dddd" na cadeia de caracteres de resultado.  
  
 Essa propriedade é afetada se o valor da <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> as alterações de propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">A propriedade está sendo definida como uma matriz multidimensional ou cujo tamanho não é exatamente 7.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o primeiro dia da semana.</summary>
        <value>Um valor de enumeração que representa o primeiro dia da semana. O padrão para <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> é <see cref="F:System.DayOfWeek.Sunday" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é afetada se o valor da <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> as alterações de propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">A propriedade está sendo definida com um valor que não é um valor <see cref="T:System.DayOfWeek" /> válido.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="FullDateTimePattern">
      <MemberSignature Language="C#" Value="public string FullDateTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FullDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullDateTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullDateTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres de formato personalizado para um valor temporal longo e valor de data longo.</summary>
        <value>A cadeia de caracteres de formato personalizado para um valor de data e hora completas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A cadeia de caracteres de formato padrão "F" é um alias para o <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> propriedade. Em outras palavras, a cadeia de caracteres de formato personalizado atribuída a essa propriedade define o formato da cadeia de caracteres de resultado para a cadeia de caracteres de formato padrão "F". Para obter mais informações, consulte [padrão de data e cadeias de caracteres de formato de hora](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  
  
 O valor da <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> propriedade é gerada dinamicamente por meio da concatenação de <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> e <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> propriedades separadas por um espaço. Essa atribuição dinâmica ocorre nas seguintes condições:  
  
-   Se o valor da propriedade é recuperado antes de ele tiver sido definido explicitamente.  
  
-   Quando o valor da <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> as alterações de propriedade.  
  
-   Quando o valor da <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> as alterações de propriedade.  
  
 Essa propriedade é afetada se o valor da <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> as alterações de propriedade.  
  
   
  
## Examples  
 O exemplo a seguir exibe o valor de <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> para algumas culturas.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CPP/dtfi_fulldatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CS/dtfi_fulldatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/VB/dtfi_fulldatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora padrão</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora personalizado</related>
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedDayName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">Um valor <see cref="T:System.DayOfWeek" />.</param>
        <summary>Retorna o nome abreviado, específico da cultura, do dia da semana especificado com base na cultura associada ao objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual.</summary>
        <returns>O nome abreviado do dia da semana específico da cultura, representado pelo <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para o padrão invariável <xref:System.Globalization.DateTimeFormatInfo> do objeto, este método retorna uma cadeia de caracteres da <xref:System.Globalization.GregorianCalendar>:  
  
|`dayofweek`|Valor de Retorno|  
|-----------------|------------------|  
|Domingo|"Sun"|  
|Segunda-feira|"Segunda-feira"|  
|Terça-feira|"Terça-feira"|  
|Quarta-feira|"Qua"|  
|Quinta-feira|"Quinta-feira"|  
|Sexta-feira|"Sex"|  
|Sábado|"Sab"|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" /> não é um valor <see cref="T:System.DayOfWeek" /> válido.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedEraName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">O inteiro que representa a era.</param>
        <summary>Retorna a cadeia de caracteres que contém o nome abreviado da era especificada, se houver uma abreviação.</summary>
        <returns>Uma cadeia de caracteres que contém o nome abreviado da era especificada, se houver uma abreviação.  
  
- ou - 
Uma cadeia de caracteres que contém o nome completo da era, se não existir uma abreviação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O nome era é o nome de que um calendário usa para se referir a um período de tempo reformulado de um ponto fixo ou um evento. Por exemplo, "D.C." ou "C.E." é a era atual no calendário gregoriano.  
  
 Os valores válidos para `era` estão listados na <xref:System.Globalization.Calendar.Eras%2A> derivado de propriedade da classe apropriada de <xref:System.Globalization.Calendar>. Por exemplo: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> exibe uma lista de eras com suporte por esta implementação.  
  
 No <xref:System.Globalization.JapaneseCalendar> de classe, a era abreviada do nome é o primeiro caractere do nome completo era. Esse caractere é a abreviação do alfabeto latino não diferencia maiusculas de caractere único ou a abreviação de Kanji de caractere único.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era" /> não representa uma era válida no calendário especificado na propriedade <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />.</exception>
        <block subset="none" type="usage"><para>Se <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> é o <see cref="T:System.Globalization.TaiwanCalendar" /> , mas o <see cref="P:System.Threading.Thread.CurrentCulture" /> não é "zh-TW", em seguida, <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, e <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> retornar uma cadeia de caracteres vazia ("").</para></block>
        <altmember cref="T:System.Globalization.JapaneseCalendar" />
        <altmember cref="T:System.Globalization.TaiwanCalendar" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedMonthName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Um inteiro de 1 a 13 que representa o nome do mês a ser recuperado.</param>
        <summary>Retorna o nome abreviado da cultura específica do mês especificado com base na cultura associada ao objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual.</summary>
        <returns>O nome do mês abreviado específico de cultura representado pelo <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para o padrão invariável <xref:System.Globalization.DateTimeFormatInfo> do objeto, este método retorna uma cadeia de caracteres da <xref:System.Globalization.GregorianCalendar> objeto.  
  
|`month`|Valor de Retorno|  
|-------------|------------------|  
|1|"Jan"|  
|2|"Fev"|  
|3|"Mar"|  
|4|"Apr"|  
|5|"Maio"|  
|6|"Jun"|  
|7|"Jul"|  
|8|"Aug"|  
|9|"Set"|  
|10|"Out"|  
|11|"Nov"|  
|12|"Dec"|  
|13|""|  
  
 <xref:System.Globalization.Calendar> objetos podem acomodar calendários com 13 meses. Para os calendários de 12 meses, a cadeia de caracteres vazia é sempre retornada como o nome do mês 13.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" /> é menor que 1 ou maior que 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllDateTimePatterns">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna os padrões padrão nos quais os valores de data e hora podem ser formatados.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns();" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : unit -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna todos os padrões padrão nos quais os valores de data e hora podem ser formatados.</summary>
        <returns>Uma matriz que contém os padrões padrão nos quais os valores de data e hora podem ser formatados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método retorna uma matriz que contém todas as cadeias de caracteres de formato personalizado que correspondem às cadeias de caracteres de formato padrão. Ver [padrão de data e cadeias de caracteres de formato de hora](~/docs/standard/base-types/standard-date-and-time-format-strings.md) para obter uma lista das cadeias de caracteres de formato padrão.  
  
 Você pode usar as cadeias de caracteres de formato personalizado na matriz retornada pelo <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> método nas operações de formatação. No entanto, se você fizer isso, a representação de cadeia de caracteres de um valor de data e hora retornado em que a operação de formatação não pode sempre ser analisada com êxito, o `Parse` e `TryParse` métodos. Portanto, você não pode presumir que as cadeias de caracteres de formato personalizado retornada pelo <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> método pode ser usado para valores de hora e data de ida e volta. O exemplo a seguir ilustra esse problema. Ele recupera uma <xref:System.Globalization.DateTimeFormatInfo> objeto que contém informações de formatação para a cultura Itália (italiano). Ele passa a matriz retornada por cada cadeia de caracteres de formato personalizado de <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns> método para o <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> método para criar a representação de cadeia de caracteres de data e hora. Neste exemplo, em seguida, tenta analisar esse valor chamando o <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> método. Como mostra a saída do exemplo, algumas das cadeias de caracteres de formato personalizado não produzem uma data e hora ou com êxito valor ida e volta.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex1.vb#1)]  
  
 Para analisar a representação de cadeia de caracteres de data e hora em que pode ser expressos em um número de formatos personalizados predefinidos, chame um dos seguintes métodos:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 As cadeias de caracteres de formato personalizado na matriz retornada pela <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> método depende do calendário atual da cultura para o qual o <xref:System.Globalization.DateTimeFormatInfo> objeto fornece informações de formatação. Se o calendário for alterado, a matriz retornada por esse método também será alterado.  
  
   
  
## Examples  
 O exemplo a seguir exibe a data e cadeias de caracteres de formato de hora para a cultura invariável, bem como a cadeia de caracteres de resultado é produzida quando que a cadeia de caracteres de formato é usada para formatar uma data específica.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsinv.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsinv.vb#3)]  
  
 O exemplo cria um <xref:System.Globalization.DateTimeFormatInfo> objeto que representa a cultura invariável, chamando o <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> construtor. Ele também pode recuperar um <xref:System.Globalization.DateTimeFormatInfo> que representa a cultura invariável do <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns(char format);" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : char -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="format">Uma cadeia de caracteres de formato padrão.</param>
        <summary>Retorna todos os padrões nos quais os valores temporais podem ser formatados usando a cadeia de caracteres de formato padrão especificada.</summary>
        <returns>Uma matriz contendo os padrões padrão nos quais os valores temporais podem ser formatados usando a cadeia de caracteres de formato especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método retorna uma matriz que contém as cadeias de caracteres de formato personalizado que correspondem a uma cadeia de caracteres de formato padrão específico. Ver [padrão de data e cadeias de caracteres de formato de hora](~/docs/standard/base-types/standard-date-and-time-format-strings.md) para obter uma lista das cadeias de caracteres de formato padrão.  
  
 Você pode usar as cadeias de caracteres de formato personalizado na matriz retornada pelo <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> método nas operações de formatação. No entanto, se você fizer isso, a representação de cadeia de caracteres de um valor de data e hora retornado em que a operação de formatação não pode sempre ser analisada com êxito, o `Parse` e `TryParse` métodos. Portanto, você não pode presumir que as cadeias de caracteres de formato personalizado retornada pelo <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> método pode ser usado para valores de hora e data de ida e volta. O exemplo a seguir ilustra esse problema. Ele recupera uma <xref:System.Globalization.DateTimeFormatInfo> objeto que contém informações de formatação para a cultura Rússia (Russo). Ele chama o <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%28System.Char%29> método para cada cadeia de caracteres de formato padrão e, em seguida, passa cada personalizado formatar a cadeia de caracteres na matriz retornada para o <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> método para criar a representação de cadeia de caracteres de data e hora. Neste exemplo, em seguida, tenta analisar esse valor chamando o <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> método. Como mostra a saída do exemplo, algumas das cadeias de caracteres de formato personalizado não produzem uma data e hora ou com êxito valor ida e volta.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex2.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex2.vb#2)]  
  
 Para analisar a representação de cadeia de caracteres de data e hora em que pode ser expressos em um número de formatos personalizados predefinidos, chame um dos seguintes métodos:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 As cadeias de caracteres de formato personalizado na matriz retornada pela <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> método depende do calendário atual da cultura para o qual o <xref:System.Globalization.DateTimeFormatInfo> objeto fornece informações de formatação. Se o calendário for alterado, a matriz retornada por esse método também será alterado.  
  
   
  
## Examples  
 O exemplo a seguir exibe os padrões de data e hora para o calendário atual.  
  
 [!code-cpp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="format" /> não é uma cadeia de caracteres de formato padrão válida.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayName">
      <MemberSignature Language="C#" Value="public string GetDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">Um valor <see cref="T:System.DayOfWeek" />.</param>
        <summary>Retorna o nome completo, específico da cultura, do dia da semana especificado com base na cultura associada ao objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual.</summary>
        <returns>O nome completo do dia da semana específico da cultura, representado pelo <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para o padrão invariável <xref:System.Globalization.DateTimeFormatInfo> do objeto, este método retorna uma cadeia de caracteres da <xref:System.Globalization.GregorianCalendar> objeto.  
  
|`dayofweek`|Valor de Retorno|  
|-----------------|------------------|  
|Domingo|"Domingo"|  
|Segunda-feira|"Segunda-feira"|  
|Terça-feira|"Terça-feira"|  
|Quarta-feira|"Quarta-feira"|  
|Quinta-feira|"Thursday"|  
|Sexta-feira|"Sexta-feira"|  
|Sábado|"Sábado"|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" /> não é um valor <see cref="T:System.DayOfWeek" /> válido.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public int GetEra (string eraName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEra(string eraName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEra (eraName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEra(System::String ^ eraName);" />
      <MemberSignature Language="F#" Value="member this.GetEra : string -&gt; int" Usage="dateTimeFormatInfo.GetEra eraName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eraName">A cadeia de caracteres que contém o nome da era.</param>
        <summary>Retorna o inteiro que representa a era especificada.</summary>
        <returns>O inteiro que representa a era, se <paramref name="eraName" /> for válido, caso contrário, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O nome era é o nome de que um calendário usa para se referir a um período de tempo reformulado de um ponto fixo ou um evento. Por exemplo, "D.C." ou "C.E." é a era atual no calendário gregoriano.  
  
 A comparação com `eraName` diferencia maiusculas de minúsculas, por exemplo, "D.C." é equivalente a "d.c.".  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> ignora a pontuação em nomes de eras abreviado, somente se o <xref:System.Globalization.GregorianCalendar> está selecionado no <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> e a cultura usa "D.C." como o nome era, ou seja, "D.C." é equivalente a "AD".  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> compara `eraName` com o nome completo era retornado por <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> e com o nome abreviado era retornado por <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A>.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

## Examples  
 O exemplo a seguir mostra que <xref:System.Globalization.DateTimeFormatInfo> ignora a pontuação no nome da era, somente se o calendário é o calendário gregoriano e a cultura usa o nome era "D.C.".  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="eraName" /> é <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="GetEraName">
      <MemberSignature Language="C#" Value="public string GetEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">O inteiro que representa a era.</param>
        <summary>Retorna a cadeia de caracteres que contém o nome da era especificado.</summary>
        <returns>Uma cadeia de caracteres que contém o nome da era.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O nome era é o nome de que um calendário usa para se referir a um período de tempo reformulado de um ponto fixo ou um evento. Por exemplo, "D.C." ou "C.E." é a era atual no calendário gregoriano.  
  
 Os valores válidos para `era` estão listados na <xref:System.Globalization.Calendar.Eras%2A> derivado de propriedade da classe apropriada de <xref:System.Globalization.Calendar>. Por exemplo: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> exibe uma lista de eras com suporte por esta implementação.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era" /> não representa uma era válida no calendário especificado na propriedade <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />.</exception>
        <block subset="none" type="usage"><para>Se o calendário é representado por <see cref="T:System.Globalization.TaiwanCalendar" /> , mas o <see cref="P:System.Threading.Thread.CurrentCulture" /> não é "zh-TW", em seguida, <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, e <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> retornar uma cadeia de caracteres vazia ("").</para></block>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="dateTimeFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">O tipo do serviço de formatação necessário.</param>
        <summary>Retorna um objeto do tipo especificado que fornece um serviço de formatação de data e hora.</summary>
        <returns>O objeto atual se <paramref name="formatType" /> for igual ao tipo do <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual; caso contrário, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `Format(String, IFormatProvider)` suportado pelos tipos de dados base do método invocar esse método quando atual <xref:System.Globalization.DateTimeFormatInfo> objeto é passado como o <xref:System.IFormatProvider> parâmetro. Esse método implementa <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo GetInstance (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo GetInstance(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (provider As IFormatProvider) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ GetInstance(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.GetInstance provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">O <see cref="T:System.IFormatProvider" /> que obtém o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
- ou - 
 <see langword="null" /> para obter <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />.</param>
        <summary>Retorna o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> associado ao <see cref="T:System.IFormatProvider" /> especificado.</summary>
        <returns>Um objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> associado a <see cref="T:System.IFormatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método usa o <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> método de `formatProvider` usando uma <xref:System.Globalization.DateTimeFormatInfo> do objeto como o `Type` parâmetro. Se `formatProvider` está `null` ou se <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> retorna `null`, esse método retornará <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>.  
  
 Seu aplicativo pode obter um <xref:System.Globalization.DateTimeFormatInfo> objeto para uma cultura específica usando um dos seguintes métodos:  
  
-   A propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> .  
  
-   O <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> método, onde `provider` é um <xref:System.Globalization.CultureInfo> objeto.  
  
 Um <xref:System.Globalization.DateTimeFormatInfo> objeto pode ser criado apenas para a cultura invariável ou para culturas específicas, e não para culturas neutras.  
  
 Para obter mais informações sobre a cultura invariável, culturas específicas e culturas neutras, consulte o <xref:System.Globalization.CultureInfo> descrição de classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthName">
      <MemberSignature Language="C#" Value="public string GetMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Um inteiro de 1 a 13 que representa o nome do mês a ser recuperado.</param>
        <summary>Retorna o nome completo da cultura específica do mês especificado com base na cultura associada ao objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual.</summary>
        <returns>O nome completo do mês específico de cultura representado pelo <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para o padrão invariável <xref:System.Globalization.DateTimeFormatInfo> do objeto, este método retorna uma cadeia de caracteres da <xref:System.Globalization.GregorianCalendar> objeto.  
  
|`month`|Valor de Retorno|  
|-------------|------------------|  
|1|"Janeiro"|  
|2|"Fevereiro"|  
|3|"Março"|  
|4|"Abril"|  
|5|"Maio"|  
|6|"Junho"|  
|7|"Julho"|  
|8|"Agosto"|  
|9|"Setembro"|  
|10|"Outubro"|  
|11|"Novembro"|  
|12|"Dezembro"|  
|13|""|  
  
 <xref:System.Globalization.Calendar> objetos podem acomodar calendários com 13 meses. Para os calendários de 12 meses, a cadeia de caracteres vazia é sempre retornada como o nome do mês 13.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" /> é menor que 1 ou maior que 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      </Docs>
    </Member>
    <Member MemberName="GetShortestDayName">
      <MemberSignature Language="C#" Value="public string GetShortestDayName (DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetShortestDayName(valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetShortestDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetShortestDayName(DayOfWeek dayOfWeek);" />
      <MemberSignature Language="F#" Value="member this.GetShortestDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetShortestDayName dayOfWeek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayOfWeek">Um dos valores de <see cref="T:System.DayOfWeek" />.</param>
        <summary>Obtém o nome abreviado do dia mais curto de um dia especificado da semana associado ao objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual.</summary>
        <returns>O nome abreviado da semana que corresponde ao parâmetro <paramref name="dayOfWeek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra vários métodos e propriedades que especificam a data e padrões de formato de hora, nome do calendário nativo e mês abreviado e completo e nomes de dias.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayOfWeek" /> não é um valor na enumeração de <see cref="T:System.DayOfWeek" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ InvariantInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> padrão somente leitura que é independente da cultura (invariável).</summary>
        <value>Um objeto somente leitura que é independente de cultura (invariável).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade não é alterado, independentemente da cultura atual. Por isso, a cultura invariável <xref:System.Globalization.DateTimeFormatInfo> objeto pode ser usado para produzir resultados consistentes e independente de cultura em análise e formatação de operações em dados de vários culturais. Por exemplo, se os dados de data e hora de várias culturas deve ser mantido no formulário de cadeia de caracteres, ele pode ser formatado usando o <xref:System.Globalization.DateTimeFormatInfo> objeto da cultura invariável e salvo. Ele pode então ser analisado usando a cultura invariável <xref:System.Globalization.DateTimeFormatInfo> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</summary>
        <value><see langword="true" /> se o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> for somente leitura; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="LongDatePattern">
      <MemberSignature Language="C#" Value="public string LongDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres de formato personalizado para um valor de data longa.</summary>
        <value>A cadeia de caracteres de formato personalizado para um valor de data longa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriedade define o formato específicas da cultura de cadeias de caracteres de data que são retornados por chamadas para o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> e <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> métodos e pelo formato de composição cadeias de caracteres que são fornecidos a cadeia de caracteres de formato padrão "D". O exemplo a seguir ilustra as relações entre o seguinte: a cadeia de caracteres de formato padrão "D", cadeia de caracteres retornada por de formato personalizado de <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriedade e a representação específicas da cultura de uma data.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern1.vb#2)]  
  
 Ver [personalizado de data e cadeias de caracteres de formato de hora](~/docs/standard/base-types/custom-date-and-time-format-strings.md) para especificadores de formato individuais que podem ser combinadas para construir cadeias de caracteres de formato personalizado, como "dddd, dd MMMM aaaa".  
  
 O separador de data deve ser definido no padrão de data por extenso para uma cadeia de caracteres exata em vez de usar o espaço reservado separador de data. Por exemplo, para obter o padrão de MM-DD-AAAA, defina o padrão de data por extenso de "MM-DD-AAAA".  
  
 O valor dessa propriedade poderá ser alterado se o calendário usado por uma cultura mudar. Por exemplo, o exemplo a seguir mostra como o <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriedade de um <xref:System.Globalization.CultureInfo> objeto que representa a cultura árabe (Síria) é alterado quando o <xref:System.Globalization.Calendar> objeto usado pelas alterações de cultura.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern2.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern2.vb#3)]  
  
   
  
## Examples  
 O exemplo a seguir exibe o valor da <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriedade para algumas culturas.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CPP/dtfi_longdatepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/dtfi_longdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/dtfi_longdatepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora padrão</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora personalizado</related>
      </Docs>
    </Member>
    <Member MemberName="LongTimePattern">
      <MemberSignature Language="C#" Value="public string LongTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres de formato personalizado para um valor temporal extenso.</summary>
        <value>O padrão de formato para um valor temporal extenso.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> propriedade define o formato específicas da cultura de cadeias de caracteres de data que são retornados por chamadas para o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> e <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> métodos e pelo formato de composição cadeias de caracteres que são fornecidos a cadeia de caracteres de formato padrão "T".  
  
 É recomendável que você defina o separador de hora no padrão de muito tempo para uma cadeia de caracteres exata em vez de usar o espaço reservado separador de hora. Por exemplo, para obter o padrão h-mm-ss, defina o padrão de data por extenso de "h-mm-ss".  
  
   
  
## Examples  
 O exemplo a seguir exibe o valor de <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> para algumas culturas.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CPP/dtfi_longtimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CS/dtfi_longtimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/VB/dtfi_longtimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora padrão</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora personalizado</related>
      </Docs>
    </Member>
    <Member MemberName="MonthDayPattern">
      <MemberSignature Language="C#" Value="public string MonthDayPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MonthDayPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthDayPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MonthDayPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthDayPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres de formato personalizado para um valor de mês e de dia.</summary>
        <value>A cadeia de caracteres de formato personalizado para um valor de mês e dia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> propriedade define o formato específicas da cultura de cadeias de caracteres de data que são retornados por chamadas para o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> e <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> métodos e pelo formato de composição cadeias de caracteres que são fornecidos a cadeias de caracteres de formato padrão "M" e "m".  
  
 Essa propriedade é afetada se o valor da <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> as alterações de propriedade.  
  
 É recomendável que você defina o separador de data no padrão de mês e dia para uma cadeia de caracteres exata em vez de usar o espaço reservado separador de data. Por exemplo, para obter o padrão de MM-DD, defina o padrão de mês e dia de "MM-DD".  
  
   
  
## Examples  
 O exemplo a seguir exibe o valor de <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> para algumas culturas.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CPP/dtfi_monthdaypattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CS/dtfi_monthdaypattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/VB/dtfi_monthdaypattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora padrão</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora personalizado</related>
      </Docs>
    </Member>
    <Member MemberName="MonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] MonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz de cadeia de caracteres de nomes de meses associada ao objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual.</summary>
        <value>Uma matriz de cadeia de caracteres de nomes de meses.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em alguns idiomas, um nome de mês que seja parte de uma data é exibida no caso de genitive. Por exemplo, uma data no russo (Rússia) ou "ru-RU", cultura consiste o número de dias e o nome do mês genitive, como 1 Января.  
  
 Quando essa propriedade é definida, a matriz deve ser unidimensional e deve ter exatamente 13 elementos. <xref:System.Globalization.Calendar> objetos acomodam calendários com 13 meses. O primeiro elemento (o elemento no índice zero) representa o primeiro mês do ano definido pelo <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriedade. Se você definir a <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> propriedade, você também deve definir o <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir demonstra vários métodos e propriedades que especificam a data e padrões de formato de hora, nome do calendário nativo e mês abreviado e completo e nomes de dias.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Em uma operação de conjuntos, a matriz é multidimensional ou tem tamanho que não é exatamente 13.</exception>
        <exception cref="T:System.ArgumentNullException">Em uma operação de conjuntos, a matriz ou um de seus elementos é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Em uma operação de conjuntos, o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual é somente leitura.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="MonthNames">
      <MemberSignature Language="C#" Value="public string[] MonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz unidimensional de tipo <see cref="T:System.String" /> que contém os nomes dos dias da semana completos específicos da cultura.</summary>
        <value>Uma matriz unidimensional de tipo <see cref="T:System.String" /> que contém os nomes dos dias da semana completos específicos da cultura. Para os calendários de 12 meses, o 13º elemento da matriz é uma cadeia de caracteres vazia. A matriz para <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> contém "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" e "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando essa propriedade é definida, a matriz deve ser unidimensional e deve ter exatamente 13 elementos. <xref:System.Globalization.Calendar> objetos acomodam calendários com 13 meses. O primeiro elemento (o elemento no índice zero) representa o primeiro mês do ano definido pelo <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriedade.  
  
 Se você definir a <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> propriedade, você também deve definir o <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> propriedade.  
  
 Se o padrão personalizado inclui o padrão de formato "MMMM" <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> exibe o valor de <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> no lugar de "MMMM" no padrão de formato.  
  
 Essa propriedade é afetada se o valor da <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> as alterações de propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">A propriedade está sendo definida como uma matriz multidimensional ou que tem um tamanho que não é exatamente 13.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NativeCalendarName">
      <MemberSignature Language="C#" Value="public string NativeCalendarName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeCalendarName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeCalendarName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeCalendarName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeCalendarName : string" Usage="System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome nativo do calendário associado ao objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual.</summary>
        <value>O nome nativo do calendário usado na cultura associada ao atual <see cref="T:System.Globalization.DateTimeFormatInfo" /> objeto se esse nome está disponível, ou a cadeia de caracteres vazia ("") se o nome do calendário nativo não está disponível.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra vários métodos e propriedades que especificam a data e padrões de formato de hora, nome do calendário nativo e mês abreviado e completo e nomes de dias.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Se <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> é o <see cref="T:System.Globalization.TaiwanCalendar" /> , mas o <see cref="P:System.Threading.Thread.CurrentCulture" /> não é "zh-TW", em seguida, <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, e <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> retornar uma cadeia de caracteres vazia ("").</para></block>
      </Docs>
    </Member>
    <Member MemberName="PMDesignator">
      <MemberSignature Language="C#" Value="public string PMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property PMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o designador de cadeia de caracteres de horas que são "post meridiem" (depois do meio-dia).</summary>
        <value>O designador de cadeia de caracteres de horas que são "post meridiem" (depois do meio-dia). O padrão de <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> é "PM".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> propriedade é usada para todas as horas de 12:00:00 (meio-dia) para 23:59:59.999.  
  
 Se o padrão personalizado inclui o padrão de formato "tt" e a hora for após o meio-dia, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> exibe o valor de <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> no lugar de "tt" no padrão de formato. Se o padrão personalizado inclui o padrão de formato "t", somente o primeiro caractere da <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> é exibida. Seu aplicativo deve usar "tt" para os idiomas para os quais ele é necessário para manter a distinção entre AM e PM. Um exemplo é o idioma japonês, no qual os designadores AM e PM diferem no segundo caractere e não no primeiro.  
  
 Para as culturas que não usam um designador PM, essa propriedade retorna uma cadeia de caracteres vazia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo ReadOnly (System.Globalization.DateTimeFormatInfo dtfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo ReadOnly(class System.Globalization.DateTimeFormatInfo dtfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (dtfi As DateTimeFormatInfo) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ ReadOnly(System::Globalization::DateTimeFormatInfo ^ dtfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.DateTimeFormatInfo -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.ReadOnly dtfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtfi" Type="System.Globalization.DateTimeFormatInfo" />
      </Parameters>
      <Docs>
        <param name="dtfi">O objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> a ser encapsulado.</param>
        <summary>Retorna um wrapper <see cref="T:System.Globalization.DateTimeFormatInfo" /> de somente leitura.</summary>
        <returns>Um wrapper <see cref="T:System.Globalization.DateTimeFormatInfo" /> somente leitura.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse wrapper impede que todas as modificações `dtfi`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dtfi" /> é <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="RFC1123Pattern">
      <MemberSignature Language="C#" Value="public string RFC1123Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RFC1123Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RFC1123Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RFC1123Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RFC1123Pattern : string" Usage="System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a cadeia de caracteres de formato personalizado para um valor temporal baseado na especificação RFC (Request for Comments) 1123 da IETF (Internet Engineering Task Force).</summary>
        <value>A cadeia de caracteres de formato personalizado para um valor temporal baseado na especificação IETF RFC 1123.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> propriedade define o formato específicas da cultura de cadeias de caracteres de data que são retornados por chamadas para o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> e <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> métodos e pelo formato de composição cadeias de caracteres que são fornecidos a cadeias de caracteres de formato padrão "R" e "r".  
  
 O padrão RFC1123 reflete um padrão definido e a propriedade é somente leitura. Portanto, ele é sempre o mesmo, independentemente da cultura. A cadeia de caracteres de formato personalizado é "ddd, dd MMM aaaa HH':'mm':'ss 'GMT' ".  
  
   
  
## Examples  
 O exemplo a seguir exibe o valor de RFC1123Pattern para algumas culturas.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CPP/dtfi_rfc1123pattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CS/dtfi_rfc1123pattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/VB/dtfi_rfc1123pattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora padrão</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora personalizado</related>
      </Docs>
    </Member>
    <Member MemberName="SetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public void SetAllDateTimePatterns (string[] patterns, char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllDateTimePatterns(string[] patterns, char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllDateTimePatterns (patterns As String(), format As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllDateTimePatterns(cli::array &lt;System::String ^&gt; ^ patterns, char format);" />
      <MemberSignature Language="F#" Value="member this.SetAllDateTimePatterns : string[] * char -&gt; unit" Usage="dateTimeFormatInfo.SetAllDateTimePatterns (patterns, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patterns" Type="System.String[]" />
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="patterns">Uma matriz de cadeias de caracteres de formato personalizado.</param>
        <param name="format">A cadeia de caracteres de formato padrão associada às cadeias de caracteres de formato personalizado especificadas no parâmetro <paramref name="patterns" />.</param>
        <summary>Define as cadeias de caracteres de formato de data e hora personalizado que correspondem a uma cadeia de caracteres de formato padrão especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> método define as cadeias de caracteres de formato personalizado que correspondem a uma determinada data e hora de cadeia de caracteres de formato padrão. Se uma chamada para uma data e hora que inclui o método de formatação padrão de data e cadeia de caracteres de formato de tempo especificado por `format`, o método usa o primeiro elemento no `patterns` matriz para definir o formato da cadeia de caracteres resultante.  
  
> [!WARNING]
>  O `Parse` e `TryParse` métodos não totalmente iterar todas as cadeias de caracteres em `patterns` ao analisar a representação de cadeia de caracteres de data e hora. Se você precisar de uma cadeia de caracteres de data e hora com formatos específicos em uma operação de análise, você deve passar a matriz de formatos válidos para o <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>, ou <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType> método.  
  
 Você pode definir as cadeias de caracteres de formato personalizado que correspondem de "d", "D", "t", "T" e "y" ou "Y" padrão de data e cadeias de caracteres de formato de hora. Se o valor de `format` é qualquer outra cadeia de formato padrão, o <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> método lança um <xref:System.ArgumentException>.  
  
 Se seu personalizado de data e cadeias de caracteres de formato de hora incluem separadores de data, você deve especificar explicitamente um separador de data em vez de usar o método de formatação ou análise que substitui o especificador de formato personalizado "/" com um separador de data específica. Por exemplo, para obter o padrão de MM-DD-AAAA, use o padrão "MM-DD-AAAA".  
  
   
  
## Examples  
 O exemplo a seguir instancia um <xref:System.Globalization.CultureInfo> do objeto que representa o "en-US" (Inglês - Estados Unidos) de cultura e usa-o para analisar uma matriz de cadeias de caracteres de data e hora usando a cadeia de caracteres de formato padrão "Y". Ele usa o <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> método para associar uma nova cadeia de caracteres de formato personalizado com a cadeia de caracteres de formato padrão "Y" e, em seguida, tenta analisar a matriz de cadeias de caracteres de data e hora. Saída do exemplo demonstra que a nova cadeia de caracteres de formato personalizado é usada em análise e operações de formatação.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/cs/setalldatetimepatterns.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/vb/setalldatetimepatterns.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="patterns" /> é <see langword="null" /> ou uma matriz de comprimento zero.  
  
- ou - 
 <paramref name="format" /> não é uma cadeia de caracteres de formato padrão válida ou é uma cadeia de caracteres de formato padrão cujos padrões não podem ser definidos.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="patterns" /> tem um elemento de matriz cujo valor é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Esse objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <altmember cref="Overload:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora padrão</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora personalizado</related>
      </Docs>
    </Member>
    <Member MemberName="ShortDatePattern">
      <MemberSignature Language="C#" Value="public string ShortDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres de formato personalizado para um valor de data abreviada.</summary>
        <value>A cadeia de caracteres de formato personalizado para um valor de data abreviada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> propriedade define o formato específicas da cultura de cadeias de caracteres de data que são retornados por chamadas para o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> e <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> métodos e pelo formato de composição cadeias de caracteres que são fornecidos a cadeia de caracteres de formato padrão "d".  
  
 Essa propriedade é afetada se o valor da <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> as alterações de propriedade.  
  
   
  
## Examples  
 O exemplo a seguir exibe o valor da <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> propriedade e o valor de uma data formatada usando o <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> propriedade para algumas culturas.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/dtfi_shortdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/dtfi_shortdatepattern.vb#1)]  
  
 O exemplo a seguir modifica o <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> propriedade de um <xref:System.Globalization.DateTimeFormatInfo> objeto que representa as convenções de formatação da cultura inglês (Estados Unidos). Ele também exibe um valor de data duas vezes, primeiro para refletir o original <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> propriedade e, em seguida, para refletir o novo valor da propriedade.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/shortdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/shortdatepattern1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora padrão</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora personalizado</related>
      </Docs>
    </Member>
    <Member MemberName="ShortestDayNames">
      <MemberSignature Language="C#" Value="public string[] ShortestDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortestDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortestDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ShortestDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortestDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz de cadeia de caracteres dos nomes de dias abreviados únicos mais curtos associados ao objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual.</summary>
        <value>Uma matriz de cadeia de caracteres de nomes de dias.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra vários métodos e propriedades que especificam a data e padrões de formato de hora, nome do calendário nativo e mês abreviado e completo e nomes de dias.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Em uma operação de conjuntos, a matriz não tem exatamente sete elementos.</exception>
        <exception cref="T:System.ArgumentNullException">Em uma operação de conjuntos, a matriz de valores ou um dos elementos da matriz de valores é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Em uma operação de conjuntos, o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> atual é somente leitura.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortTimePattern">
      <MemberSignature Language="C#" Value="public string ShortTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres de formato personalizado para um valor temporal abreviado.</summary>
        <value>A cadeia de caracteres de formato personalizado para um valor temporal abreviado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> propriedade define o formato específicas da cultura de cadeias de caracteres de data que são retornados por chamadas para o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> e <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> métodos e pelo formato de composição cadeias de caracteres que são fornecidos a cadeia de caracteres de formato padrão "t".  
  
 É recomendável que você defina o separador de hora no curto período de tempo padrão para uma cadeia de caracteres exata em vez de usar o espaço reservado separador de hora. Por exemplo, para obter o padrão h-mm-ss, defina o padrão de hora abreviada de "h-mm-ss".  
  
   
  
## Examples  
 O exemplo a seguir exibe o valor de <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> para algumas culturas.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CPP/dtfi_shorttimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CS/dtfi_shorttimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/VB/dtfi_shorttimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora padrão</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora personalizado</related>
      </Docs>
    </Member>
    <Member MemberName="SortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string SortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a cadeia de caracteres de formato personalizado para um valor de data e hora classificável.</summary>
        <value>A cadeia de caracteres de formato personalizado para um valor de data e hora classificável.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> propriedade define o formato específicas da cultura de cadeias de caracteres de data que são retornados por chamadas para o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> e <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> métodos e pelo formato de composição cadeias de caracteres que são fornecidos a cadeia de caracteres de formato padrão "s".  
  
 A cadeia de caracteres de formato retornada pelo <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> propriedade reflete um padrão definido (ISO 8601) e a propriedade é somente leitura. Portanto, ele é sempre o mesmo, independentemente da cultura. A cadeia de caracteres de formato personalizado é "aaaa'-'MM'-'dd'T'HH':'mm':'ss".  
  
   
  
## Examples  
 O exemplo a seguir exibe o valor de <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> para algumas culturas.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CPP/dtfi_sortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CS/dtfi_sortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/VB/dtfi_sortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora padrão</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora personalizado</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeSeparator">
      <MemberSignature Language="C#" Value="public string TimeSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres que separa os componentes de tempo, ou seja, a hora, os minutos e os segundos.</summary>
        <value>A cadeia de caracteres que separa os componentes de tempo. O padrão para <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> é ":".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o padrão personalizado inclui o padrão de formato ":", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> exibe o valor de <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> em vez do ":" no padrão de formato.  
  
 O separador de hora é derivado de <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> propriedade. É recomendável que você defina o separador de hora em resumo ou longo tempo padrões em uma cadeia de caracteres exata em vez de usar o espaço reservado separador de hora. Por exemplo, para obter o padrão h-mm-ss, defina o padrão de "h-mm-ss". Essa prática também permite que você defina padrões, como "h'h ' mm estou 'ss'" (3h m 36 12s) que incluem vários tipos de separadores. O <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> propriedade define a cadeia de caracteres que substitui o separador de hora (":" especificador de formato de hora e data personalizada) em uma cadeia de caracteres de resultado em uma operação de formatação. Ele também define a cadeia de caracteres de separador de hora em uma operação de análise.  
  
   
  
## Examples  
 O exemplo a seguir instancia um <xref:System.Globalization.CultureInfo> objeto para a cultura en-US, altera seu separador de data para "." e exibe uma data usando o "t", "T", "F", "f", "G" e cadeias de caracteres de formato padrão "g".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/cs/timeseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/vb/timeseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora personalizado</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora padrão</related>
      </Docs>
    </Member>
    <Member MemberName="UniversalSortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string UniversalSortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniversalSortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniversalSortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniversalSortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniversalSortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a cadeia de caracteres de formato personalizado para um valor de data e hora classificável e universal.</summary>
        <value>O formato personalizado para um valor de data e hora classificável e universal.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> propriedade define o formato de cadeias de caracteres de data que são retornados por chamadas para o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> e <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> métodos e pelo formato de composição cadeias de caracteres que são fornecidos a cadeia de caracteres de formato padrão "u". Ele pode ser usado para exibir datas e horas em uma ordem classificável, com o designador de hora universal "Z" no final. O formato é classificável, pois ela usa os zeros à esquerda para o ano, mês, dia, hora, minuto e segundo. A cadeia de caracteres de formato personalizado ("yyyy '-' MM'-' dd HH': 'mm': 'ss ' z'") é o mesmo, independentemente do provedor de cultura ou formato.  
  
 A cadeia de caracteres de formato retornada pelo <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> propriedade reflete um padrão definido e a propriedade é somente leitura. Portanto, ele é sempre o mesmo, independentemente da cultura. A cadeia de caracteres de formato personalizado é "aaaa'-'MM'-'dd HH':'mm':'ss'Z'".  
  
   
  
## Examples  
 O exemplo a seguir exibe o valor de <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> para algumas culturas.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CPP/dtfi_universalsortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CS/dtfi_universalsortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/VB/dtfi_universalsortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora padrão</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora personalizado</related>
      </Docs>
    </Member>
    <Member MemberName="YearMonthPattern">
      <MemberSignature Language="C#" Value="public string YearMonthPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YearMonthPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property YearMonthPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YearMonthPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YearMonthPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres de formato personalizado para um valor de ano e mês.</summary>
        <value>A cadeia de caracteres de formato personalizado para um valor de ano e mês.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> propriedade define o formato específicas da cultura de cadeias de caracteres de data que são retornados por chamadas para o <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> e <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> métodos e pelo formato de composição cadeias de caracteres que são fornecidos a cadeias de caracteres de formato padrão "Y" e "y".  
  
 Essa propriedade é afetada se o valor da <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> as alterações de propriedade.  
  
 É recomendável que você defina o separador de data no padrão de mês do ano em uma cadeia de caracteres exata em vez de usar o espaço reservado separador de data. Por exemplo, para obter o padrão de MM-AAAA, defina o padrão de mês do ano de "MM-AAAA".  
  
   
  
## Examples  
 O exemplo a seguir exibe o valor de <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> para algumas culturas.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CPP/dtfi_yearmonthpattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CS/dtfi_yearmonthpattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/VB/dtfi_yearmonthpattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A propriedade está sendo definida como <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A propriedade está sendo definida e o objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> é somente leitura.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora padrão</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Cadeias de caracteres de formato de data e hora personalizado</related>
      </Docs>
    </Member>
  </Members>
</Type>