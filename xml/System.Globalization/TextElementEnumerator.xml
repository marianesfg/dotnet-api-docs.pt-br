<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c89665798160db0f6d3c8632d2de046e76ec0ff" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39731494" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextElementEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type TextElementEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ca6a4-101">Enumera os elementos do texto de uma cadeia de caracteres.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca6a4-101">Enumerates the text elements of a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca6a4-102">O .NET Framework define um elemento de texto como uma unidade de texto que é exibido como um único caractere, ou seja, um grafemas.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-102">The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="ca6a4-103">Um elemento de texto pode ser qualquer um dos seguintes:</span><span class="sxs-lookup"><span data-stu-id="ca6a4-103">A text element can be any of the following:</span></span>  
  
-   <span data-ttu-id="ca6a4-104">Um caractere base, que é representado como um único <xref:System.Char> valor.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-104">A base character, which is represented as a single <xref:System.Char> value.</span></span> <span data-ttu-id="ca6a4-105">Por exemplo, latina maiuscula LETRA um (u+0041) e LATIN AE de LETRA minúscula (U + 00E6) são caracteres de base.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-105">For example, LATIN CAPITAL LETTER A (U+0041) and LATIN SMALL LETTER AE (U+00E6) are base characters.</span></span>  
  
-   <span data-ttu-id="ca6a4-106">Uma combinação de sequência, que consiste em um caractere base e um ou mais caracteres de combinação de caracteres.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-106">A combining character sequence, which consists of a base character and one or more combining characters.</span></span> <span data-ttu-id="ca6a4-107">Por exemplo, exemplo, maiuscula latina um (u+0041) seguido pelo acento circunflexo INVERTIDO COMBINANDO (U + 0304) é uma combinação sequência de caracteres.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-107">For example, example, LATIN CAPITAL LETTER A (U+0041) followed by COMBINING MACRON (U+0304) is a combining character sequence.</span></span>  
  
-   <span data-ttu-id="ca6a4-108">Substitutos de pares, que o [padrão Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define como uma representação de caracteres codificado para um único caractere abstrato que consiste em uma sequência de duas unidades de código: um substituto alto e um substituto baixo.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-108">Surrogate pairs, which the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines as a coded character representation for a single abstract character that consists of a sequence of two code units: a high surrogate, and a low surrogate.</span></span> <span data-ttu-id="ca6a4-109">Pares substitutos são usados para representar caracteres fora do plano multilíngue básico do Unicode como caracteres codificados em UTF-16.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-109">Surrogate pairs are used to represent characters outside of the Unicode Basic Multilingual Plane as UTF-16 encoded characters.</span></span> <span data-ttu-id="ca6a4-110">Por exemplo, GOTHIC LETRA SAUIL (U + 10343) é representado no UTF-16 como um substituto alto cujo valor é 0xD800 e um substituto baixo cujo valor é 0xDF43 de codificação.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-110">For example, GOTHIC LETTER SAUIL (U+10343) is represented in UTF-16 encoding as a high surrogate whose value is 0xD800 and a low surrogate whose value is 0xDF43.</span></span> <span data-ttu-id="ca6a4-111">Um par substituto pode representar um caractere base ou um caractere de combinação.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-111">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="ca6a4-112">O <xref:System.Globalization.TextElementEnumerator> classe permite que você trabalhe com os elementos de texto em uma cadeia de caracteres em vez de com único <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-112">The <xref:System.Globalization.TextElementEnumerator> class allows you to work with the text elements in a string rather than with single <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="ca6a4-113">Você criar uma instância de um <xref:System.Globalization.TextElementEnumerator> objeto que representa uma cadeia de caracteres específica, passando a cadeia de caracteres para o <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-113">You instantiate a <xref:System.Globalization.TextElementEnumerator> object that represents a particular string by passing the string to the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ca6a4-114">Isso retorna um enumerador que é posicionado antes do primeiro elemento de texto na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-114">This returns an enumerator that is positioned before the first text element in the string.</span></span> <span data-ttu-id="ca6a4-115">Chamar o <xref:System.Globalization.TextElementEnumerator.Reset%2A> método também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-115">Calling the <xref:System.Globalization.TextElementEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="ca6a4-116">Porque isso representa um estado inválido, você deve chamar <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> para avançar o enumerador para o primeiro elemento de texto da cadeia de caracteres antes de ler o valor da <xref:System.Globalization.TextElementEnumerator.Current%2A> propriedade para retornar o elemento de texto atual.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-116">Because this represents an invalid state, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before reading the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property to return the current text element.</span></span>  
  
 <span data-ttu-id="ca6a4-117">Ao trabalhar com um <xref:System.Globalization.TextElementEnumerator> do objeto, você é responsável por posicionando o enumerador.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-117">When working with a <xref:System.Globalization.TextElementEnumerator> object, you are responsible for positioning the enumerator.</span></span> <span data-ttu-id="ca6a4-118">O <xref:System.Globalization.TextElementEnumerator.Current%2A> propriedade retorna o mesmo elemento de texto até que você chamar <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> ou <xref:System.Globalization.TextElementEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-118">The <xref:System.Globalization.TextElementEnumerator.Current%2A> property returns the same text element until you call either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A>.</span></span> <span data-ttu-id="ca6a4-119">O enumerador está em um estado inválido, se ele está posicionado antes do primeiro elemento de texto ou após o último elemento de texto na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-119">The enumerator is in an invalid state if it is positioned before the first text element or after the last text element in the string.</span></span> <span data-ttu-id="ca6a4-120">Quando o enumerador está em um estado inválido, a tentativa de recuperar o valor da <xref:System.Globalization.TextElementEnumerator.Current%2A> propriedade gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-120">When the enumerator is in an invalid state, attempting to retrieve the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="ca6a4-121">Você pode determinar se o enumerador está em um estado inválido, testando se o valor de retorno de <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> é de propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-121">You can determine whether the enumerator is in an invalid state by testing whether the return value of the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="ca6a4-122">O <xref:System.Globalization.TextElementEnumerator> objeto representa um instantâneo do estado atual de uma variável de cadeia de caracteres ou a cadeia de caracteres literal no momento em que o <xref:System.Globalization.TextElementEnumerator> objeto é instanciado.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-122">The <xref:System.Globalization.TextElementEnumerator> object represents a snapshot of the current state of a string variable or string literal at the moment that the <xref:System.Globalization.TextElementEnumerator> object is instantiated.</span></span> <span data-ttu-id="ca6a4-123">Observe que:</span><span class="sxs-lookup"><span data-stu-id="ca6a4-123">Note that:</span></span>  
  
-   <span data-ttu-id="ca6a4-124">Enumeradores de elemento de texto somente podem ser usados para ler os dados em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-124">Text element enumerators can only be used to read data in a string.</span></span> <span data-ttu-id="ca6a4-125">Eles não podem modificar a cadeia de caracteres subjacente.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-125">They cannot modify the underlying string.</span></span>  
  
-   <span data-ttu-id="ca6a4-126">Um enumerador não tem acesso exclusivo à cadeia de caracteres que ele representa.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-126">An enumerator does not have exclusive access to the string that it represents.</span></span> <span data-ttu-id="ca6a4-127">Uma variável de cadeia de caracteres pode ser modificada depois que o enumerador é criado.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-127">A string variable can be modified after the enumerator is created.</span></span>  
  
-   <span data-ttu-id="ca6a4-128">Um <xref:System.Globalization.TextElementEnumerator> objeto enumera os elementos de texto presentes na cadeia de caracteres no momento em que o <xref:System.Globalization.TextElementEnumerator> objeto foi instanciado.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-128">A <xref:System.Globalization.TextElementEnumerator> object enumerates the text elements present in the string at the time that the <xref:System.Globalization.TextElementEnumerator> object was instantiated.</span></span> <span data-ttu-id="ca6a4-129">Ele não reflete todas as alterações subsequentes para a variável de cadeia de caracteres se essa variável for alterada posteriormente.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-129">It does not reflect any subsequent changes to the string variable if that variable is modified afterward.</span></span>  
  
-   <span data-ttu-id="ca6a4-130">Porque o <xref:System.Globalization.TextElementEnumerator> classe não substitui <xref:System.Object.Equals%2A?displayProperty=nameWithType>, dois <xref:System.Globalization.TextElementEnumerator> objetos que representam a mesma cadeia de caracteres serão considerados desiguais.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-130">Because the <xref:System.Globalization.TextElementEnumerator> class does not override <xref:System.Object.Equals%2A?displayProperty=nameWithType>, two <xref:System.Globalization.TextElementEnumerator> objects that represent the same string will be considered unequal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca6a4-131">O exemplo a seguir usa o <xref:System.Globalization.TextElementEnumerator> classe para enumerar os elementos de texto de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-131">The following example uses the <xref:System.Globalization.TextElementEnumerator> class to enumerate the text elements of a string.</span></span>  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca6a4-132">Obtém o elemento de texto atual na cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca6a4-132">Gets the current text element in the string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca6a4-133">Um objeto que contém o elemento de texto atual na cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca6a4-133">An object containing the current text element in the string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca6a4-134">Após a criação de um enumerador ou depois de um <xref:System.Globalization.TextElementEnumerator.Reset%2A> é chamado, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> deve ser chamado para avançar o enumerador para o primeiro elemento de texto da cadeia de caracteres antes de ler o valor de <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-134">After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span></span> <span data-ttu-id="ca6a4-135">Caso contrário, <xref:System.Globalization.TextElementEnumerator.Current%2A> é indefinido.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-135">Otherwise, <xref:System.Globalization.TextElementEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="ca6a4-136"><xref:System.Globalization.TextElementEnumerator.Current%2A> também gera uma exceção se a última chamada para <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retornou `false`, que indica o fim da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-136"><xref:System.Globalization.TextElementEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`, which indicates the end of the string.</span></span>  
  
 <span data-ttu-id="ca6a4-137"><xref:System.Globalization.TextElementEnumerator.Current%2A> não move a posição do enumerador e chamadas consecutivas para <xref:System.Globalization.TextElementEnumerator.Current%2A> retornar o mesmo objeto até que <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> ou <xref:System.Globalization.TextElementEnumerator.Reset%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-137"><xref:System.Globalization.TextElementEnumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Globalization.TextElementEnumerator.Current%2A> return the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca6a4-138">O enumerador está posicionado antes do primeiro elemento de texto da cadeia de caracteres ou depois do último elemento de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca6a4-138">The enumerator is positioned before the first text element of the string or after the last text element.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementIndex : int" Usage="System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca6a4-139">Obtém o índice do elemento de texto em que o enumerador está posicionado atualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca6a4-139">Gets the index of the text element that the enumerator is currently positioned over.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca6a4-140">O índice do elemento de texto que o enumerador está posicionado atualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca6a4-140">The index of the text element that the enumerator is currently positioned over.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca6a4-141">O enumerador está posicionado antes do primeiro elemento de texto da cadeia de caracteres ou depois do último elemento de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca6a4-141">The enumerator is positioned before the first text element of the string or after the last text element.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextElement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextElement();" />
      <MemberSignature Language="F#" Value="member this.GetTextElement : unit -&gt; string" Usage="textElementEnumerator.GetTextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca6a4-142">Obtém o elemento de texto atual na cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca6a4-142">Gets the current text element in the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca6a4-143">Uma nova cadeia de caracteres que contém o elemento de texto atual na cadeia de caracteres que está sendo lida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca6a4-143">A new string containing the current text element in the string being read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca6a4-144">Esse método retorna o mesmo elemento de texto como o <xref:System.Globalization.TextElementEnumerator.Current%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-144">This method returns the same text element as the <xref:System.Globalization.TextElementEnumerator.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca6a4-145">O enumerador está posicionado antes do primeiro elemento de texto da cadeia de caracteres ou depois do último elemento de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca6a4-145">The enumerator is positioned before the first text element of the string or after the last text element.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="textElementEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca6a4-146">Avança o enumerador para o próximo elemento de texto da cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca6a4-146">Advances the enumerator to the next text element of the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca6a4-147">
            <see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento de texto; <see langword="false" /> se o enumerador passou o final da cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca6a4-147">
              <see langword="true" /> if the enumerator was successfully advanced to the next text element; <see langword="false" /> if the enumerator has passed the end of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca6a4-148">Após a criação de um enumerador ou depois de um <xref:System.Globalization.TextElementEnumerator.Reset%2A> é chamado, o enumerador está posicionado antes do primeiro elemento de texto de cadeia de caracteres e a primeira chamada para <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> move o enumerador sobre o primeiro elemento de texto da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-148">After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, the enumerator is positioned before the first text element of the string, and the first call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> moves the enumerator over the first text element of the string.</span></span>  
  
 <span data-ttu-id="ca6a4-149">Se a cadeia de caracteres for modificada depois que este enumerador foi criado, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-149">If the string is modified after this enumerator was created, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> throws an exception.</span></span>  
  
 <span data-ttu-id="ca6a4-150">Depois que o final da cadeia de caracteres for passadas, chamadas subsequentes para <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retornar `false` até que <xref:System.Globalization.TextElementEnumerator.Reset%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-150">After the end of the string is passed, subsequent calls to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> return `false` until <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="textElementEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca6a4-151">Define o enumerador com sua posição inicial, que é antes do primeiro elemento de texto na cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca6a4-151">Sets the enumerator to its initial position, which is before the first text element in the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca6a4-152">O <xref:System.Globalization.TextElementEnumerator.Reset%2A> método Move o enumerador para o início da cadeia de caracteres, antes do primeiro elemento de texto.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-152">The <xref:System.Globalization.TextElementEnumerator.Reset%2A> method moves the enumerator to the beginning of the string, before the first text element.</span></span> <span data-ttu-id="ca6a4-153">Depois de chamar <xref:System.Globalization.TextElementEnumerator.Reset%2A>, você deve chamar <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> para avançar o enumerador para o primeiro elemento de texto da cadeia de caracteres antes de chamar <xref:System.Globalization.TextElementEnumerator.Current%2A> para ler o valor do primeiro elemento de texto.</span><span class="sxs-lookup"><span data-stu-id="ca6a4-153">After calling <xref:System.Globalization.TextElementEnumerator.Reset%2A>, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before calling <xref:System.Globalization.TextElementEnumerator.Current%2A> to read the value of the first text element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>