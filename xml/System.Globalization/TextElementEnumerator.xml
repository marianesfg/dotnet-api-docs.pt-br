<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c89665798160db0f6d3c8632d2de046e76ec0ff" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39731494" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextElementEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type TextElementEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumera os elementos do texto de uma cadeia de caracteres.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O .NET Framework define um elemento de texto como uma unidade de texto que é exibido como um único caractere, ou seja, um grafemas. Um elemento de texto pode ser qualquer um dos seguintes:  
  
-   Um caractere base, que é representado como um único <xref:System.Char> valor. Por exemplo, latina maiuscula LETRA um (u+0041) e LATIN AE de LETRA minúscula (U + 00E6) são caracteres de base.  
  
-   Uma combinação de sequência, que consiste em um caractere base e um ou mais caracteres de combinação de caracteres. Por exemplo, exemplo, maiuscula latina um (u+0041) seguido pelo acento circunflexo INVERTIDO COMBINANDO (U + 0304) é uma combinação sequência de caracteres.  
  
-   Substitutos de pares, que o [padrão Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define como uma representação de caracteres codificado para um único caractere abstrato que consiste em uma sequência de duas unidades de código: um substituto alto e um substituto baixo. Pares substitutos são usados para representar caracteres fora do plano multilíngue básico do Unicode como caracteres codificados em UTF-16. Por exemplo, GOTHIC LETRA SAUIL (U + 10343) é representado no UTF-16 como um substituto alto cujo valor é 0xD800 e um substituto baixo cujo valor é 0xDF43 de codificação. Um par substituto pode representar um caractere base ou um caractere de combinação.  
  
 O <xref:System.Globalization.TextElementEnumerator> classe permite que você trabalhe com os elementos de texto em uma cadeia de caracteres em vez de com único <xref:System.Char> objetos.  
  
 Você criar uma instância de um <xref:System.Globalization.TextElementEnumerator> objeto que representa uma cadeia de caracteres específica, passando a cadeia de caracteres para o <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> método. Isso retorna um enumerador que é posicionado antes do primeiro elemento de texto na cadeia de caracteres. Chamar o <xref:System.Globalization.TextElementEnumerator.Reset%2A> método também traz o enumerador de volta para essa posição. Porque isso representa um estado inválido, você deve chamar <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> para avançar o enumerador para o primeiro elemento de texto da cadeia de caracteres antes de ler o valor da <xref:System.Globalization.TextElementEnumerator.Current%2A> propriedade para retornar o elemento de texto atual.  
  
 Ao trabalhar com um <xref:System.Globalization.TextElementEnumerator> do objeto, você é responsável por posicionando o enumerador. O <xref:System.Globalization.TextElementEnumerator.Current%2A> propriedade retorna o mesmo elemento de texto até que você chamar <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> ou <xref:System.Globalization.TextElementEnumerator.Reset%2A>. O enumerador está em um estado inválido, se ele está posicionado antes do primeiro elemento de texto ou após o último elemento de texto na cadeia de caracteres. Quando o enumerador está em um estado inválido, a tentativa de recuperar o valor da <xref:System.Globalization.TextElementEnumerator.Current%2A> propriedade gera uma exceção. Você pode determinar se o enumerador está em um estado inválido, testando se o valor de retorno de <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> é de propriedade `false`.  
  
 O <xref:System.Globalization.TextElementEnumerator> objeto representa um instantâneo do estado atual de uma variável de cadeia de caracteres ou a cadeia de caracteres literal no momento em que o <xref:System.Globalization.TextElementEnumerator> objeto é instanciado. Observe que:  
  
-   Enumeradores de elemento de texto somente podem ser usados para ler os dados em uma cadeia de caracteres. Eles não podem modificar a cadeia de caracteres subjacente.  
  
-   Um enumerador não tem acesso exclusivo à cadeia de caracteres que ele representa. Uma variável de cadeia de caracteres pode ser modificada depois que o enumerador é criado.  
  
-   Um <xref:System.Globalization.TextElementEnumerator> objeto enumera os elementos de texto presentes na cadeia de caracteres no momento em que o <xref:System.Globalization.TextElementEnumerator> objeto foi instanciado. Ele não reflete todas as alterações subsequentes para a variável de cadeia de caracteres se essa variável for alterada posteriormente.  
  
-   Porque o <xref:System.Globalization.TextElementEnumerator> classe não substitui <xref:System.Object.Equals%2A?displayProperty=nameWithType>, dois <xref:System.Globalization.TextElementEnumerator> objetos que representam a mesma cadeia de caracteres serão considerados desiguais.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Globalization.TextElementEnumerator> classe para enumerar os elementos de texto de uma cadeia de caracteres.  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o elemento de texto atual na cadeia de caracteres.</summary>
        <value>Um objeto que contém o elemento de texto atual na cadeia de caracteres.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Após a criação de um enumerador ou depois de um <xref:System.Globalization.TextElementEnumerator.Reset%2A> é chamado, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> deve ser chamado para avançar o enumerador para o primeiro elemento de texto da cadeia de caracteres antes de ler o valor de <xref:System.Globalization.TextElementEnumerator.Current%2A>. Caso contrário, <xref:System.Globalization.TextElementEnumerator.Current%2A> é indefinido.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> também gera uma exceção se a última chamada para <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retornou `false`, que indica o fim da cadeia de caracteres.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> não move a posição do enumerador e chamadas consecutivas para <xref:System.Globalization.TextElementEnumerator.Current%2A> retornar o mesmo objeto até que <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> ou <xref:System.Globalization.TextElementEnumerator.Reset%2A> é chamado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O enumerador está posicionado antes do primeiro elemento de texto da cadeia de caracteres ou depois do último elemento de texto.</exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementIndex : int" Usage="System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o índice do elemento de texto em que o enumerador está posicionado atualmente.</summary>
        <value>O índice do elemento de texto que o enumerador está posicionado atualmente.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">O enumerador está posicionado antes do primeiro elemento de texto da cadeia de caracteres ou depois do último elemento de texto.</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextElement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextElement();" />
      <MemberSignature Language="F#" Value="member this.GetTextElement : unit -&gt; string" Usage="textElementEnumerator.GetTextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém o elemento de texto atual na cadeia de caracteres.</summary>
        <returns>Uma nova cadeia de caracteres que contém o elemento de texto atual na cadeia de caracteres que está sendo lida.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método retorna o mesmo elemento de texto como o <xref:System.Globalization.TextElementEnumerator.Current%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O enumerador está posicionado antes do primeiro elemento de texto da cadeia de caracteres ou depois do último elemento de texto.</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="textElementEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avança o enumerador para o próximo elemento de texto da cadeia de caracteres.</summary>
        <returns>
          <see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento de texto; <see langword="false" /> se o enumerador passou o final da cadeia de caracteres.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Após a criação de um enumerador ou depois de um <xref:System.Globalization.TextElementEnumerator.Reset%2A> é chamado, o enumerador está posicionado antes do primeiro elemento de texto de cadeia de caracteres e a primeira chamada para <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> move o enumerador sobre o primeiro elemento de texto da cadeia de caracteres.  
  
 Se a cadeia de caracteres for modificada depois que este enumerador foi criado, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> gera uma exceção.  
  
 Depois que o final da cadeia de caracteres for passadas, chamadas subsequentes para <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retornar `false` até que <xref:System.Globalization.TextElementEnumerator.Reset%2A> é chamado.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="textElementEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Define o enumerador com sua posição inicial, que é antes do primeiro elemento de texto na cadeia de caracteres.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.TextElementEnumerator.Reset%2A> método Move o enumerador para o início da cadeia de caracteres, antes do primeiro elemento de texto. Depois de chamar <xref:System.Globalization.TextElementEnumerator.Reset%2A>, você deve chamar <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> para avançar o enumerador para o primeiro elemento de texto da cadeia de caracteres antes de chamar <xref:System.Globalization.TextElementEnumerator.Current%2A> para ler o valor do primeiro elemento de texto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>