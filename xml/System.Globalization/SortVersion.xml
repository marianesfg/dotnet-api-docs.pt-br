<Type Name="SortVersion" FullName="System.Globalization.SortVersion">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="258d831b0b363d984e93d2ee5da0ec538bb71d08" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52352953" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SortVersion : IEquatable&lt;System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SortVersion extends System.Object implements class System.IEquatable`1&lt;class System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortVersion" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SortVersion&#xA;Implements IEquatable(Of SortVersion)" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortVersion sealed : IEquatable&lt;System::Globalization::SortVersion ^&gt;" />
  <TypeSignature Language="F#" Value="type SortVersion = class&#xA;    interface IEquatable&lt;SortVersion&gt;" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Globalization.SortVersion&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece informações sobre a versão do Unicode usada para comparar e ordenar cadeias de caracteres.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

### <a name="sorting-and-string-comparison-in-the-net-framework"></a>Comparação de classificação e a cadeia de caracteres no .NET Framework

 Dos [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] por meio de [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], cada versão do.NET Framework está incluído em tabelas que contêm os pesos de classificação e dados de normalização de cadeia de caracteres e que são baseados em uma versão específica do Unicode. No [!INCLUDE[net_v45](~/includes/net-v45-md.md)], a presença dessas tabelas depende do sistema operacional:  
  
-   Em [!INCLUDE[win7](~/includes/win7-md.md)] e versões anteriores do sistema operacional Windows, as tabelas continuam a ser usado para comparação e ordenação de sequências de caracteres.  
  
-   Em [!INCLUDE[win8](~/includes/win8-md.md)], o .NET Framework delega a comparação de cadeia de caracteres e a ordenação de operações para o sistema operacional.  
  
 Consequentemente, o resultado de uma comparação de cadeia de caracteres pode depender não apenas a versão do .NET Framework, mas também a versão do sistema operacional, como mostra a tabela a seguir. Observe que essa lista de versões com suporte do Unicode aplica-se somente à comparação e classificação de caracteres. ela não se aplica à classificação de caracteres Unicode por categoria.  
  
|Versão do .NET Framework|Sistema operacional|Versão Unicode|  
|----------------------------|----------------------|---------------------|  
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|Todos os sistemas operacionais|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] e versões posteriores do .NET Framework|[!INCLUDE[win7](~/includes/win7-md.md)]|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] e versões posteriores do .NET Framework|[!INCLUDE[win8](~/includes/win8-md.md)] e versões posteriores do sistema operacional Windows|Unicode 6.0|  
  
 Em [!INCLUDE[win8](~/includes/win8-md.md)], porque a versão do Unicode usada na comparação de cadeia de caracteres e ordenação depende da versão do sistema operacional, os resultados de comparação de cadeia de caracteres podem diferir mesmo para aplicativos que são executados em uma versão específica do .NET Framework.  

### <a name="sorting-and-string-comparison-in-net-core"></a>Comparação de classificação e a cadeia de caracteres no .NET Core

Todas as versões do .NET Core dependem do sistema operacional subjacente ao executar comparações de cadeia de caracteres. Portanto, os resultados de uma comparação de cadeia de caracteres ou a ordem na qual as cadeias de caracteres são classificadas depende da versão de Unicode usada pelo sistema operacional ao executar a comparação. No Linux e macOS, [International Components for Unicode](http://site.icu-project.org/) bibliotecas fornecem a implementação de comparação e classificação de APIs.

### <a name="using-the-sortversion-class"></a>Usando a classe SortVersion

 O <xref:System.Globalization.SortVersion> classe fornece informações sobre a versão de Unicode usada pelo .NET para comparação de cadeia de caracteres e pedidos. Ele permite aos desenvolvedores escrever aplicativos que podem detectar e lidar com êxito com as alterações na versão do Unicode, que é usado para comparar e classificar cadeias de caracteres de um aplicativo.  
  
 Você pode instanciar um <xref:System.Globalization.SortVersion> objeto de duas maneiras:  
  
-   Chamando o <xref:System.Globalization.SortVersion.%23ctor%2A> construtor, que cria uma nova <xref:System.Globalization.SortVersion> com base em um número de versão do objeto e classificar ID. Este construtor é mais útil ao recriar um <xref:System.Globalization.SortVersion> objeto de dados salvos.  
  
-   Recuperando o valor da <xref:System.Globalization.CompareInfo.Version%2A?displayProperty=nameWithType> propriedade. Esta propriedade fornece informações sobre a versão Unicode usada pela implementação do .NET no qual o aplicativo está em execução.  
  
 O <xref:System.Globalization.SortVersion> classe tem duas propriedades, <xref:System.Globalization.SortVersion.FullVersion%2A> e <xref:System.Globalization.SortVersion.SortId%2A>, que indicam a versão Unicode e a cultura específica usada para comparação de cadeia de caracteres. O <xref:System.Globalization.SortVersion.FullVersion%2A> propriedade é um valor numérico arbitrário que reflete a versão de Unicode usada para comparação de cadeia de caracteres, e o <xref:System.Globalization.SortVersion.SortId%2A> propriedade é um arbitrário <xref:System.Guid> que reflete a cultura cujas convenções são usadas para comparação de cadeia de caracteres. Os valores dessas duas propriedades são importantes somente quando você comparar dois <xref:System.Globalization.SortVersion> objetos usando o <xref:System.Globalization.SortVersion.Equals%2A> método, o <xref:System.Globalization.SortVersion.op_Equality%2A> operador, ou o <xref:System.Globalization.SortVersion.op_Inequality%2A> operador.  
  
 Você normalmente usa um <xref:System.Globalization.SortVersion> objeto quando salvar ou recuperar alguma forma de cultura, ordenados de dados de cadeia de caracteres, como índices ou o literal de cadeias de caracteres em si. Isso exige as seguintes etapas:  
  
1.  Quando os dados de cadeia de caracteres ordenado é salvo, o <xref:System.Globalization.SortVersion.FullVersion%2A> e <xref:System.Globalization.SortVersion.SortId%2A> valores de propriedade também são salvos.  
  
2.  Quando os dados de cadeia de caracteres ordenado são recuperados, você pode recriar a <xref:System.Globalization.SortVersion> objeto usado para ordenar as cadeias de caracteres chamando o <xref:System.Globalization.SortVersion.%23ctor%2A> construtor.  
  
3.  Isso recentemente instanciado <xref:System.Globalization.SortVersion> objeto é comparado com um <xref:System.Globalization.SortVersion> objeto que reflete a cultura cujas convenções são usadas para ordenar os dados de cadeia de caracteres.  
  
4.  Se os dois <xref:System.Globalization.SortVersion> objetos não forem iguais, os dados de cadeia de caracteres devem ser reordenados.  
  
 O exemplo fornece uma ilustração.  
  
   
  
## Examples  
 O exemplo a seguir contém uma parte do código-fonte de um aplicativo que usa o <xref:System.Globalization.SortVersion> classe para garantir que os nomes nativos de <xref:System.Globalization.RegionInfo> objetos são ordenados de forma adequada para o sistema atual e a cultura atual. Ele usa o <xref:System.IO.BinaryReader> e <xref:System.IO.BinaryWriter> ordenada de objetos para armazenar e recuperar dados de um arquivo de dados chamado `Regions.dat` em vez de recuperar e ordenar os dados sempre que o aplicativo é executado. O exemplo primeiro verifica para determinar se o arquivo de dados existe. Se não existir, ele cria os dados e define o `reindex` sinalizador que indica que os dados devem ser reclassificados e salva novamente. Caso contrário, ele recupera os dados e compara o salvo <xref:System.Globalization.SortVersion> do objeto com o <xref:System.Globalization.SortVersion> objeto para a cultura atual no sistema atual. Se não forem iguais, ou se o `reindex` sinalizador foi definido anteriormente, ela recorre a <xref:System.Globalization.RegionInfo> dados.  
  
 [!code-csharp[System.Globalization.SortVersion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortversion/cs/example1.cs#1)]
 [!code-vb[System.Globalization.SortVersion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortversion/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Globalization.CompareInfo.Version" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortVersion (int fullVersion, Guid sortId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 fullVersion, valuetype System.Guid sortId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fullVersion As Integer, sortId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortVersion(int fullVersion, Guid sortId);" />
      <MemberSignature Language="F#" Value="new System.Globalization.SortVersion : int * Guid -&gt; System.Globalization.SortVersion" Usage="new System.Globalization.SortVersion (fullVersion, sortId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fullVersion" Type="System.Int32" />
        <Parameter Name="sortId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="fullVersion">Um número de versão.</param>
        <param name="sortId">Uma ID de classificação.</param>
        <summary>Cria uma nova instância da classe <see cref="T:System.Globalization.SortVersion" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor cria um <xref:System.Globalization.SortVersion> com a versão especificada do objeto e classificar ID. O `fullVersion` argumento é atribuído para o <xref:System.Globalization.SortVersion.FullVersion%2A> propriedade. O `sortId` argumento é atribuído para o <xref:System.Globalization.SortVersion.SortId%2A> propriedade.  
  
 Esse construtor é útil para recriar um <xref:System.Globalization.SortVersion> objeto de dados que foi serializados ou salvados. Esta versão, em seguida, pode ser comparada com a versão atual do aplicativo para determinar se a versão do Unicode usada para exibir e ordenar cadeias de caracteres do aplicativo está disponível.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CompareInfo.Version" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna um valor que indica se duas instâncias <see cref="T:System.Globalization.SortVersion" /> são iguais.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Globalization.SortVersion other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Globalization.SortVersion other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Globalization::SortVersion ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Globalization.SortVersion -&gt; bool" Usage="sortVersion.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="other">O objeto a ser comparado com essa instância.</param>
        <summary>Retorna um valor que indica se essa instância <see cref="T:System.Globalization.SortVersion" /> é igual a um objeto <see cref="T:System.Globalization.SortVersion" /> especificado.</summary>
        <returns>
          <see langword="true" /> se <paramref name="other" /> representar a mesma versão dessa instância; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Duas <xref:System.Globalization.SortVersion> objetos são iguais se suas <xref:System.Globalization.SortVersion.FullVersion%2A> e <xref:System.Globalization.SortVersion.SortId%2A> propriedades são iguais.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortVersion.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Um objeto a ser comparado com essa instância.</param>
        <summary>Retorna um valor que indica se essa instância <see cref="T:System.Globalization.SortVersion" /> é igual a um objeto especificado.</summary>
        <returns>
          <see langword="true" /> se <paramref name="obj" /> for um objeto <see cref="T:System.Globalization.SortVersion" /> que representa a mesma versão dessa instância; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Duas <xref:System.Globalization.SortVersion> objetos são iguais se suas <xref:System.Globalization.SortVersion.FullVersion%2A> e <xref:System.Globalization.SortVersion.SortId%2A> propriedades são iguais.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="FullVersion">
      <MemberSignature Language="C#" Value="public int FullVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FullVersion" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.FullVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FullVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FullVersion : int" Usage="System.Globalization.SortVersion.FullVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de versão completo do objeto <see cref="T:System.Globalization.SortVersion" />.</summary>
        <value>O número de versão deste <see cref="T:System.Globalization.SortVersion" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor da <xref:System.Globalization.SortVersion.FullVersion%2A> propriedade reflete a versão Unicode usada para normalizar e comparar cadeias de caracteres.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortVersion.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um código hash para essa instância.</summary>
        <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Globalization.SortVersion * System.Globalization.SortVersion -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">A primeira instância a ser comparada.</param>
        <param name="right">A segunda instância a ser comparada.</param>
        <summary>Indica se duas instâncias <see cref="T:System.Globalization.SortVersion" /> são iguais.</summary>
        <returns>
          <see langword="true" /> se os valores de <paramref name="left" /> e <paramref name="right" /> forem iguais; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Duas <xref:System.Globalization.SortVersion> objetos são iguais se ambos estiverem `null`, ou se suas <xref:System.Globalization.SortVersion.FullVersion%2A> e <xref:System.Globalization.SortVersion.SortId%2A> propriedades são iguais.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Globalization.SortVersion * System.Globalization.SortVersion -&gt; bool" Usage="System.Globalization.SortVersion.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">A primeira instância a ser comparada.</param>
        <param name="right">A segunda instância a ser comparada.</param>
        <summary>Indica se duas instâncias <see cref="T:System.Globalization.SortVersion" /> não são iguais.</summary>
        <returns>
          <see langword="true" /> se os valores de <paramref name="left" /> e <paramref name="right" /> não forem iguais; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Duas <xref:System.Globalization.SortVersion> objetos não forem iguais, caso haja `null` e o outro não, ou se eles têm diferentes <xref:System.Globalization.SortVersion.FullVersion%2A> ou <xref:System.Globalization.SortVersion.SortId%2A> valores de propriedade.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="SortId">
      <MemberSignature Language="C#" Value="public Guid SortId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid SortId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.SortId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid SortId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.SortId : Guid" Usage="System.Globalization.SortVersion.SortId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um identificador global exclusivo para esse objeto <see cref="T:System.Globalization.SortVersion" />.</summary>
        <value>Um identificador global exclusivo para este <see cref="T:System.Globalization.SortVersion" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor da <xref:System.Globalization.SortVersion.SortId%2A> propriedade reflete a cultura cujas convenções de influenciam a comparação de cadeia de caracteres e classificação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>