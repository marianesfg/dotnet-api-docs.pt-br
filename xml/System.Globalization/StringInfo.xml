<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80c192082c2c19396d1b5a09fe5f8cde1b836f2d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37654320" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <TypeSignature Language="F#" Value="type StringInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides functionality to split a string into text elements and to iterate through those text elements.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O .NET Framework define um elemento de texto como uma unidade de texto que é exibido como um único caractere, ou seja, um grafemas. Um elemento de texto pode ser um caractere base, um par substituto ou um caractere de combinação sequência. O [padrão Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define um par substituto como uma representação de caracteres codificado para um único caractere abstrato que consiste em uma sequência de duas unidades de código, em que a primeira unidade do par é um substituto alto e o segundo é uma baixa substituto. O padrão Unicode define uma combinação sequência como uma combinação de um caractere base e um ou mais caracteres de combinação de caracteres. Um par substituto pode representar um caractere base ou um caractere de combinação.  
  
 O <xref:System.Globalization.StringInfo> classe permite que você trabalhe com uma cadeia de caracteres como uma série de elementos textuais, em vez de um indivíduo <xref:System.Char> objetos.  
  
 Para instanciar um <xref:System.Globalization.StringInfo> objeto que representa uma cadeia de caracteres especificada, você pode fazer o seguinte:  
  
-   Chame o <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> construtor e passá-lo a cadeia de caracteres que o <xref:System.Globalization.StringInfo> objeto é representado como um argumento.  
  
-   Chame o padrão <xref:System.Globalization.StringInfo.%23ctor> construtor e atribuir a cadeia de caracteres que o <xref:System.Globalization.StringInfo> objeto deve representar para o <xref:System.Globalization.StringInfo.String%2A> propriedade.  
  
 Você pode trabalhar com os elementos de texto individual em uma cadeia de caracteres de duas maneiras:  
  
-   Enumerando a cada elemento de texto. Para fazer isso, você chama o <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método e, em seguida, chamar repetidamente o <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> método em retornado <xref:System.Globalization.TextElementEnumerator> objeto até que o método retorna `false`.  
  
-   Chamando o <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> método para recuperar uma matriz que contém o índice inicial de cada elemento de texto. Você pode então recuperar os elementos de texto individual, passando esses índices para o <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> método.  
  
 O exemplo a seguir ilustra as duas maneiras de trabalhar com os elementos de texto em uma cadeia de caracteres. Ele cria duas cadeias de caracteres:  
  
-   `strCombining`, que é uma cadeia de caracteres árabes que inclui três elementos de texto com vários <xref:System.Char> objetos. O primeiro elemento de texto é o caractere base ALEF de LETRA árabe (U +-627) seguido por HAMZA árabe abaixo (U +-655) e árabe KASRA (U + 0650). O segundo elemento de texto é a LETRA HEH árabe (U + 0647) seguido por FATHA árabe (U +-64E). O terceiro elemento de texto é BEH de LETTTER árabe (U + 0628) seguido por Dammatan árabe forma (U + 064C).  
  
-   `strSurrogates`, que é uma cadeia de caracteres que inclui três pares substitutos: GREGA ACROPHONIC cinco TALENTOS (U + 10148) do plano multilíngue suplementar, U + 20026 do plano ideográfico suplementar e U + F1001 da área privada do usuário. A codificação UTF-16 de cada caractere é um par substituto que consiste em um substituto alto seguido por um substituto baixo.  
  
 Cada cadeia de caracteres é analisada uma vez o <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> método e, em seguida, o <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método. Ambos os métodos corretamente analisar os elementos de texto em duas cadeias de caracteres e exibem os resultados da operação de análise.  
  
 [!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
 [!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
   
  
## Examples  
 Este exemplo mostra como usar o <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> e <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> métodos do <xref:System.Globalization.StringInfo> classe para manipular uma cadeia de caracteres que contém substitutos e caracteres sem espaçamento.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>Internamente, os métodos do <see cref="T:System.Globalization.StringInfo" /> classe chamar os métodos do <see cref="T:System.Globalization.CharUnicodeInfo" /> classe para determinar as categorias de caracteres. Começando com o [! INCLUDE[net_v462](~/Includes/NET-v462-MD.MD)], classificação de caractere se baseia no [o padrão Unicode, versão 8.0.0] (https://unicode.org/versions/Unicode8.0.0). Para o [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)] por meio de [! INCLUDE[net_v461](~/Includes/NET-v461-MD.MD)], ele se baseia no [o padrão Unicode, versão 6.3.0] (https://www.unicode.org/versions/Unicode6.3.0/).</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor do novo <xref:System.Globalization.StringInfo> objeto é inicializado para a cadeia de caracteres vazia (""). Você pode atribuir outra cadeia de caracteres a ele usando o <xref:System.Globalization.StringInfo.String%2A> propriedade.  Você também pode instanciar uma <xref:System.Globalization.StringInfo> objeto que representa uma cadeia de caracteres especificada em uma única etapa, chamando o <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> construtor.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Globalization.StringInfo : string -&gt; System.Globalization.StringInfo" Usage="new System.Globalization.StringInfo value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">A string to initialize this <see cref="T:System.Globalization.StringInfo" /> object.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class to a specified string.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse construtor atribui o argumento de valor para o objeto <xref:System.Globalization.StringInfo.String%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">An object.</param>
        <summary>Indicates whether the current <see cref="T:System.Globalization.StringInfo" /> object is equal to a specified object.</summary>
        <returns>
          <see langword="true" /> if the <paramref name="value" /> parameter is a <see cref="T:System.Globalization.StringInfo" /> object and its <see cref="P:System.Globalization.StringInfo.String" /> property equals the <see cref="P:System.Globalization.StringInfo.String" /> property of this <see cref="T:System.Globalization.StringInfo" /> object; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calculates a hash code for the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</summary>
        <returns>A 32-bit signed integer hash code based on the string value of this <see cref="T:System.Globalization.StringInfo" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O comportamento de <xref:System.Globalization.StringInfo.GetHashCode%2A> depende de sua implementação, o que pode ser alterado de uma versão do common language runtime para outro. Isso pode acontecer melhorar o desempenho de <xref:System.Globalization.StringInfo.GetHashCode%2A>. Para tornar o comportamento de <xref:System.Globalization.StringInfo.GetHashCode%2A> constante, o aplicativo deve substituir a implementação de tempo de execução de <xref:System.Globalization.StringInfo.GetHashCode%2A> com uma implementação conhecida para nunca alteração.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the first text element in a specified string.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string from which to get the text element.</param>
        <summary>Gets the first text element in a specified string.</summary>
        <returns>A string containing the first text element in the specified string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O .NET Framework define um elemento de texto como uma unidade de texto que é exibido como um único caractere, ou seja, um grafemas. Um elemento de texto pode ser um caractere base, um par substituto ou um caractere de combinação sequência. O [padrão Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define um par substituto como uma representação de caracteres codificado para um único caractere abstrato que consiste em uma sequência de duas unidades de código, em que a primeira unidade do par é um substituto alto e o segundo é uma baixa substituto. O [padrão Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define uma combinação sequência como uma combinação de um caractere base e um ou mais caracteres de combinação de caracteres. Um par substituto pode representar um caractere base ou um caractere de combinação.  
  
 Esse método só retorna o primeiro elemento de texto. Para iterar pelos elementos de texto da cadeia de caracteres, o aplicativo deve usar o <xref:System.Globalization.TextElementEnumerator> objeto gerado pelo <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string * int -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">The string from which to get the text element.</param>
        <param name="index">The zero-based index at which the text element starts.</param>
        <summary>Gets the text element at the specified index of the specified string.</summary>
        <returns>A string containing the text element at the specified index of the specified string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O .NET Framework define um elemento de texto como uma unidade de texto que é exibido como um único caractere, ou seja, um grafemas. Um elemento de texto pode ser um caractere base, um par substituto ou um caractere de combinação sequência. O [padrão Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define um par substituto como uma representação de caracteres codificado para um único caractere abstrato que consiste em uma sequência de duas unidades de código, em que a primeira unidade do par é um substituto alto e o segundo é uma baixa substituto. O padrão Unicode define uma combinação sequência como uma combinação de um caractere base e um ou mais caracteres de combinação de caracteres. Um par substituto pode representar um caractere base ou um caractere de combinação.  
  
 Esse método só retorna o primeiro elemento de texto da subcadeia de caracteres que começa no índice especificado. Para iterar pelos elementos de texto da cadeia de caracteres, o aplicativo deve usar o <xref:System.Globalization.TextElementEnumerator> gerado pelo <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is outside the range of valid indexes for <paramref name="str" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns an enumerator that iterates through the text elements of a string.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string to iterate through.</param>
        <summary>Returns an enumerator that iterates through the text elements of the entire string.</summary>
        <returns>A <see cref="T:System.Globalization.TextElementEnumerator" /> for the entire string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O .NET Framework define um elemento de texto como uma unidade de texto que é exibido como um único caractere, ou seja, um grafemas. Um elemento de texto pode ser um caractere base, um par substituto ou um caractere de combinação sequência. O [padrão Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define um par substituto como uma representação de caracteres codificado para um único caractere abstrato que consiste em uma sequência de duas unidades de código, em que a primeira unidade do par é um substituto alto e o segundo é uma baixa substituto. O padrão Unicode define uma combinação sequência como uma combinação de um caractere base e um ou mais caracteres de combinação de caracteres. Um par substituto pode representar um caractere base ou um caractere de combinação.  
  
 O enumerador de elemento de texto é usado somente para ler os dados na cadeia de caracteres; ele não é possível modificar a cadeia de caracteres subjacente. O enumerador não tem acesso exclusivo à cadeia de caracteres.  
  
 O enumerador está em um estado inválido, se ele está posicionado antes do primeiro elemento de texto na cadeia de caracteres ou após o último elemento de texto na cadeia de caracteres. Quando o enumerador está em um estado inválido, chamando <xref:System.Globalization.TextElementEnumerator.Current%2A> gera uma exceção.  
  
 Inicialmente, o enumerador está posicionado antes do primeiro elemento de texto na cadeia de caracteres. <xref:System.Globalization.TextElementEnumerator.Reset%2A> também traz o enumerador de volta para essa posição. Portanto, após a criação de um enumerador ou depois <xref:System.Globalization.TextElementEnumerator.Reset%2A> é chamado, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> deve ser chamado para avançar o enumerador para o primeiro elemento de texto da cadeia de caracteres antes de ler o valor de <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> ou <xref:System.Globalization.TextElementEnumerator.Reset%2A> ser chamado.  
  
 Após o final da cadeia de caracteres for passado, o enumerador está novamente em um inválido, estado e chamando <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retorna `false`. Chamando <xref:System.Globalization.TextElementEnumerator.Current%2A> gera uma exceção se a última chamada para <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retornou `false`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra a chamada a <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Globalization.StringInfo> classe.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string * int -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">The string to iterate through.</param>
        <param name="index">The zero-based index at which to start iterating.</param>
        <summary>Returns an enumerator that iterates through the text elements of the string, starting at the specified index.</summary>
        <returns>A <see cref="T:System.Globalization.TextElementEnumerator" /> for the string starting at <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O .NET Framework define um elemento de texto como uma unidade de texto que é exibido como um único caractere, ou seja, um grafemas. Um elemento de texto pode ser um caractere base, um par substituto ou um caractere de combinação sequência. O [padrão Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define um par substituto como uma representação de caracteres codificado para um único caractere abstrato que consiste em uma sequência de duas unidades de código, em que a primeira unidade do par é um substituto alto e o segundo é uma baixa substituto. O padrão Unicode define uma combinação sequência como uma combinação de um caractere base e um ou mais caracteres de combinação de caracteres. Um par substituto pode representar um caractere base ou um caractere de combinação.  
  
 O enumerador de elemento de texto é usado somente para ler os dados na cadeia de caracteres; ele não é possível modificar a cadeia de caracteres subjacente. O enumerador não tem acesso exclusivo à cadeia de caracteres.  
  
 O enumerador está em um estado inválido, se ele está posicionado antes do primeiro elemento de texto na cadeia de caracteres ou após o último elemento de texto na cadeia de caracteres. Quando o enumerador está em um estado inválido, chamando <xref:System.Globalization.TextElementEnumerator.Current%2A> gera uma exceção.  
  
 Inicialmente, o enumerador está posicionado antes do primeiro elemento de texto na cadeia de caracteres. <xref:System.Globalization.TextElementEnumerator.Reset%2A> também traz o enumerador de volta para essa posição. Portanto, após a criação de um enumerador ou depois <xref:System.Globalization.TextElementEnumerator.Reset%2A> é chamado, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> deve ser chamado para avançar o enumerador para o primeiro elemento de texto da cadeia de caracteres antes de ler o valor de <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> ou <xref:System.Globalization.TextElementEnumerator.Reset%2A> ser chamado.  
  
 Após o final da cadeia de caracteres for passado, o enumerador está novamente em um inválido, estado e chamando <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retorna `false`. Chamando <xref:System.Globalization.TextElementEnumerator.Current%2A> gera uma exceção se a última chamada para <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retornou `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is outside the range of valid indexes for <paramref name="str" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LengthInTextElements : int" Usage="System.Globalization.StringInfo.LengthInTextElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of text elements in the current <see cref="T:System.Globalization.StringInfo" /> object.</summary>
        <value>O número de caracteres de base, pares substitutos e sequências de caracteres sem espaçamento neste objeto <see cref="T:System.Globalization.StringInfo" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member ParseCombiningCharacters : string -&gt; int[]" Usage="System.Globalization.StringInfo.ParseCombiningCharacters str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string to search.</param>
        <summary>Returns the indexes of each base character, high surrogate, or control character within the specified string.</summary>
        <returns>An array of integers that contains the zero-based indexes of each base character, high surrogate, or control character within the specified string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O [padrão Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define um par substituto como uma representação de caracteres codificado para um único caractere abstrato que consiste em uma sequência de duas unidades de código, em que a primeira unidade do par é um substituto alto e o segundo é uma baixa substituto. Um substituto alto é um ponto de código Unicode no intervalo de U+D800 a U + DBFF e um substituto baixo é um ponto de código Unicode no intervalo U+DC00 a U + DFFF.  
  
 Um caractere de controle é um caractere para o qual o valor Unicode U + 007F ou no intervalo de u+0000 a U + 001F ou u+0080 a U + 009F.  
  
 O .NET Framework define um elemento de texto como uma unidade de texto que é exibido como um único caractere, ou seja, um grafemas. Um elemento de texto pode ser um caractere base, um par substituto ou um caractere de combinação sequência. O [padrão Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define uma combinação sequência como uma combinação de um caractere base e um ou mais caracteres de combinação de caracteres. Um par substituto pode representar um caractere base ou um caractere de combinação.  
  
 Se uma combinação sequência de caracteres for inválida, todos os caracteres combináveis na sequência também é retornado.  
  
 Cada índice na matriz resultante é o início de um elemento de texto, ou seja, o índice do caractere base ou o substituto alto.  
  
 O comprimento de cada elemento facilmente é calculado como a diferença entre índices sucessivas. O comprimento da matriz sempre será menor ou igual ao comprimento da cadeia de caracteres. Por exemplo, dada a cadeia de caracteres "\u4f00\u302a\ud800\udc00\u4f01", esse método retorna os índices de 0, 2 e 4.  
  
## <a name="equivalent-members"></a>Membros equivalentes  
 Começando na versão 2.0 do .NET Framework, o <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> método e <xref:System.Globalization.StringInfo.LengthInTextElements%2A> propriedade fornecer uma implementação mais fácil de usar a funcionalidade oferecida pelo <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra a chamada a <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> método. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Globalization.StringInfo> classe.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.String : string with get, set" Usage="System.Globalization.StringInfo.String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</summary>
        <value>A cadeia de caracteres que é o valor do atual <see cref="T:System.Globalization.StringInfo" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um <xref:System.Globalization.StringInfo> objeto é instanciado, seu <xref:System.Globalization.StringInfo.String%2A> propriedade é definida como um dos seguintes valores:  
  
-   <xref:System.String.Empty?displayProperty=nameWithType> Se o padrão <xref:System.Globalization.StringInfo.%23ctor> é chamado. Em seguida, você deve usar o <xref:System.Globalization.StringInfo.String%2A> propriedade para atribuir a cadeia de caracteres que esse <xref:System.Globalization.StringInfo> rperesents do objeto.  
  
-   A cadeia de caracteres fornecida como o `value` argumento para o <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> construtor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The value in a set operation is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int -&gt; string" Usage="stringInfo.SubstringByTextElements startingTextElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">The zero-based index of a text element in this <see cref="T:System.Globalization.StringInfo" /> object.</param>
        <summary>Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object starting from a specified text element and continuing through the last text element.</summary>
        <returns>A substring of text elements in this <see cref="T:System.Globalization.StringInfo" /> object, starting from the text element index specified by the <paramref name="startingTextElement" /> parameter and continuing through the last text element in this object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Considere a possibilidade de uma cadeia de caracteres que consiste em cinco elementos de texto, indexados de 0 a 4. Se o `startingTextElement` parâmetro é 1, o <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> método retorna uma subcadeia de caracteres que consiste nos elementos de texto para o qual os índices são 1, 2, 3 e 4.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> is less than zero.  -or-  The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object is the empty string ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int * int -&gt; string" Usage="stringInfo.SubstringByTextElements (startingTextElement, lengthInTextElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">The zero-based index of a text element in this <see cref="T:System.Globalization.StringInfo" /> object.</param>
        <param name="lengthInTextElements">The number of text elements to retrieve.</param>
        <summary>Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object starting from a specified text element and continuing through the specified number of text elements.</summary>
        <returns>A substring of text elements in this <see cref="T:System.Globalization.StringInfo" /> object. The substring consists of the number of text elements specified by the <paramref name="lengthInTextElements" /> parameter and starts from the text element index specified by the <paramref name="startingTextElement" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Considere a possibilidade de uma cadeia de caracteres que consiste em cinco elementos de texto, indexados de 0 a 4. Se o `startingTextElement` parâmetro é 1 e o `lengthInTextElements` parâmetro é 3, o <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> método retorna uma subcadeia de caracteres que consiste nos elementos de texto para o qual os índices são 1, 2 e 3.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> is less than zero.  -or-  <paramref name="startingTextElement" /> is greater than or equal to the length of the string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object.  -or-  <paramref name="lengthInTextElements" /> is less than zero.  -or-  The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object is the empty string ("").  -or-  <paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> specify an index that is greater than the number of text elements in this <see cref="T:System.Globalization.StringInfo" /> object.</exception>
      </Docs>
    </Member>
  </Members>
</Type>