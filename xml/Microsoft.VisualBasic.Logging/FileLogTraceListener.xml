<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e680f283cf3962e48522e8cec087fe2c7ff35f12" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51885894" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type FileLogTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="981bc-101">Fornece um ouvinte simples que direciona a saída de registro para o arquivo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="981bc-101">Provides a simple listener that directs logging output to file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-102">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe fornece recursos de manutenção automatizada para arquivar os arquivos de log conforme necessário, em uma base diária ou por aplicativo.</span><span class="sxs-lookup"><span data-stu-id="981bc-102">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</span></span> <span data-ttu-id="981bc-103">Essa funcionalidade de arquivamento automático ajuda a reduzir as responsabilidades de manutenção de desenvolvedores e administradores.</span><span class="sxs-lookup"><span data-stu-id="981bc-103">This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</span></span>  
  
 <span data-ttu-id="981bc-104">Uma instância do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> podem ser adicionados para o <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> ou <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> coleções para redirecionar a saída de registro em log para um arquivo de texto.</span><span class="sxs-lookup"><span data-stu-id="981bc-104">An instance of <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections to redirect output from logging to a text file.</span></span> <span data-ttu-id="981bc-105">As instâncias dessa classe também podem ser adicionadas a `My.Application.Log` ou `My.Log` (para aplicativos da Web) em aplicativos Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="981bc-105">Instances of this class can also be added to `My.Application.Log` or `My.Log` (for Web applications) in Visual Basic applications.</span></span> <span data-ttu-id="981bc-106">Para obter mais informações, consulte [passo a passo: alterando onde My.Application.Log grava informações](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span><span class="sxs-lookup"><span data-stu-id="981bc-106">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span></span>  
  
 <span data-ttu-id="981bc-107">Os principais recursos dessa classe são:</span><span class="sxs-lookup"><span data-stu-id="981bc-107">The main features of this class are:</span></span>  
  
1.  <span data-ttu-id="981bc-108">*Funcionalidade de arquivamento*.</span><span class="sxs-lookup"><span data-stu-id="981bc-108">*Archival functionality*.</span></span> <span data-ttu-id="981bc-109">Os arquivos de log gerados por esta classe são nomeados de acordo com o nome de base e a data, junto com um número para distinguir o arquivo de log de versões sucessivas do log.</span><span class="sxs-lookup"><span data-stu-id="981bc-109">The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</span></span> <span data-ttu-id="981bc-110">Novos arquivos de log são criados em uma base conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="981bc-110">New log files are created on an as-needed basis.</span></span>  
  
     <span data-ttu-id="981bc-111">O formulário explícito do nome do arquivo é `baseName`[-`dateStamp`] [-`version`]. log, em que:</span><span class="sxs-lookup"><span data-stu-id="981bc-111">The explicit form of the file name is `baseName`[-`dateStamp`][-`version`].log, where:</span></span>  
  
    -   <span data-ttu-id="981bc-112">O `baseName` parte é o nome do log fundamentais, especificado pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-112">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
    -   <span data-ttu-id="981bc-113">O `dateStamp` parte tem o formato "Aaaa-MM-DD", e ele é mostrado quando <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> é <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> ou <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span><span class="sxs-lookup"><span data-stu-id="981bc-113">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
    -   <span data-ttu-id="981bc-114">Se mais de um arquivo de log é necessário com o mesmo `baseName` e `dateStamp`, o `version` parte um positivo `Integer`, é adicionado ao nome do arquivo.</span><span class="sxs-lookup"><span data-stu-id="981bc-114">If more than one log file is needed with the same `baseName` and `dateStamp`, the `version` part, a positive `Integer`, is added to the file name.</span></span>  
  
2.  <span data-ttu-id="981bc-115">*Várias instâncias de classe*.</span><span class="sxs-lookup"><span data-stu-id="981bc-115">*Multiple class instances*.</span></span> <span data-ttu-id="981bc-116">Se uma instância da <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe grava em um arquivo que está em uso:</span><span class="sxs-lookup"><span data-stu-id="981bc-116">If an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to a file that is in use:</span></span>  
  
    -   <span data-ttu-id="981bc-117">A classe compartilha o arquivo se ele estiver sendo usado por outra instância da <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe no mesmo processo.</span><span class="sxs-lookup"><span data-stu-id="981bc-117">The class shares the file if it is being used by another instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class in the same process.</span></span>  
  
    -   <span data-ttu-id="981bc-118">A classe cria um novo arquivo de log usando o próximo nome disponível se o arquivo está sendo usado por outro processo.</span><span class="sxs-lookup"><span data-stu-id="981bc-118">The class creates a new log file using the next available name if the file is being used by another process.</span></span>  
  
3.  <span data-ttu-id="981bc-119">*Acesso thread-safe*.</span><span class="sxs-lookup"><span data-stu-id="981bc-119">*Thread safety*.</span></span> <span data-ttu-id="981bc-120">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe é thread-safe.</span><span class="sxs-lookup"><span data-stu-id="981bc-120">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class is thread safe.</span></span> <span data-ttu-id="981bc-121">Isso permite que você com segurança gravar mensagens no log de vários threads sem usar bloqueios.</span><span class="sxs-lookup"><span data-stu-id="981bc-121">This allows you to safely write messages to the log from multiple threads without using locks.</span></span>  
  
 <span data-ttu-id="981bc-122">**Local do arquivo de log**</span><span class="sxs-lookup"><span data-stu-id="981bc-122">**Log-File Location**</span></span>  
  
-   <span data-ttu-id="981bc-123">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> propriedade utiliza um <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeração para especificar um dos diretórios típicos para gravar o arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-123">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property takes a <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration to specify one of the typical directories to write the log file to.</span></span>  
  
-   <span data-ttu-id="981bc-124">Para gravar o log para outro local, defina o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> propriedade para esse local.</span><span class="sxs-lookup"><span data-stu-id="981bc-124">To write the log to another location, set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property to that location.</span></span>  
  
 <span data-ttu-id="981bc-125">**Nome do arquivo de log**</span><span class="sxs-lookup"><span data-stu-id="981bc-125">**Log-File Name**</span></span>  
  
-   <span data-ttu-id="981bc-126">O nome de base para o arquivo de log for especificado o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-126">The base name for the log file is specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="981bc-127">O nome do arquivo de log atual pode ser lido no <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-127">The current log file name can be read from the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property.</span></span> <span data-ttu-id="981bc-128">Ele é derivado de várias outras propriedades e o estado atual dos logs no sistema de arquivos.</span><span class="sxs-lookup"><span data-stu-id="981bc-128">It is derived from several other properties and the current state of the logs in the file system.</span></span>  
  
 <span data-ttu-id="981bc-129">**Manutenção do log**</span><span class="sxs-lookup"><span data-stu-id="981bc-129">**Log Maintenance**</span></span>  
  
-   <span data-ttu-id="981bc-130">A frequência mínima para a criação de novos arquivos de log é determinada pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-130">The minimum frequency for creating new log files is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="981bc-131">Quando o valor for <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> ou <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, um novo arquivo de log é criado pelo menos uma vez, cada dia ou semana e um carimbo de data é incorporado a <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> nome.</span><span class="sxs-lookup"><span data-stu-id="981bc-131">When the value is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="981bc-132">O tamanho máximo (em bytes) do arquivo de log é determinado pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-132">The maximum size (in bytes) of the log file is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property.</span></span> <span data-ttu-id="981bc-133">Se o tamanho do arquivo de log exceder esse tamanho, gravadas no log de mensagens adicionais são descartados e, dependendo do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> propriedade, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="981bc-133">If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="981bc-134">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> propriedade determina a quantidade de espaço livre (em bytes) deve estar disponível.</span><span class="sxs-lookup"><span data-stu-id="981bc-134">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> property determines how much free space (in bytes) must be available.</span></span> <span data-ttu-id="981bc-135">Isso ajuda a garantir que o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe não consumirão todo o espaço em disco disponível.</span><span class="sxs-lookup"><span data-stu-id="981bc-135">This helps ensure that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class will not consume all available disk space.</span></span> <span data-ttu-id="981bc-136">Use o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> propriedade para especificar o comportamento do log de gravações quando houver menos de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes livres.</span><span class="sxs-lookup"><span data-stu-id="981bc-136">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to specify the behavior of log writes when there are less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes free.</span></span>  
  
 <span data-ttu-id="981bc-137">**Configurações de saída do arquivo de log**</span><span class="sxs-lookup"><span data-stu-id="981bc-137">**Log-File Output Settings**</span></span>  
  
-   <span data-ttu-id="981bc-138">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> propriedade especifica se o fluxo subjacente deve ser liberado automaticamente após cada gravação ao arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-138">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</span></span>  
  
-   <span data-ttu-id="981bc-139">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> propriedade especifica se é necessário acrescentar as mensagens para o arquivo de log atual, se a permissão ou gravá-las em um novo arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-139">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</span></span>  
  
-   <span data-ttu-id="981bc-140">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> propriedade especifica a cadeia de caracteres a ser usado para delimitar campos dentro de uma mensagem de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-140">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies the string to use for delimiting the fields within a log message.</span></span>  
  
-   <span data-ttu-id="981bc-141">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> propriedade especifica a codificação usada ao criar um novo arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-141">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property specifies the encoding to use when creating a new log file.</span></span>  
  
 <span data-ttu-id="981bc-142">**Saída do arquivo de log**</span><span class="sxs-lookup"><span data-stu-id="981bc-142">**Log-File Output**</span></span>  
  
-   <span data-ttu-id="981bc-143">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> e <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> métodos gravam mensagens para o arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-143">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods write messages to the log file.</span></span> <span data-ttu-id="981bc-144">Esses métodos verificam o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> propriedade, junto com todos os logs existentes com o mesmo nome de base para determinar se um novo log deve ser criado.</span><span class="sxs-lookup"><span data-stu-id="981bc-144">These methods check the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property, along with any existing logs with the same base name to determine if a new log should be created.</span></span>  
  
-   <span data-ttu-id="981bc-145">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> método libera todas as mensagens no momento no buffer de saída para o arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-145">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method flushes any messages currently in the output buffer to the log file.</span></span>  
  
-   <span data-ttu-id="981bc-146">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> método fecha o arquivo de log para que ele pode ser usado por outros processos.</span><span class="sxs-lookup"><span data-stu-id="981bc-146">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method closes the log file so that it can be used by other processes.</span></span>  
  
 <span data-ttu-id="981bc-147">**Habilitar saída**</span><span class="sxs-lookup"><span data-stu-id="981bc-147">**Enabling Output**</span></span>  
  
 <span data-ttu-id="981bc-148">Você deve habilitar o rastreamento ou depuração para usar um ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="981bc-148">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="981bc-149">A sintaxe a seguir é específica do compilador.</span><span class="sxs-lookup"><span data-stu-id="981bc-149">The following syntax is compiler specific.</span></span> <span data-ttu-id="981bc-150">Se você usar compiladores diferentes de c# ou Visual Basic, consulte a documentação do seu compilador.</span><span class="sxs-lookup"><span data-stu-id="981bc-150">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="981bc-151">Para habilitar a depuração em c#, adicione a `/d:DEBUG` sinalizador à linha de comando do compilador quando você compila seu código, ou você pode adicionar `#define DEBUG` na parte superior do seu arquivo.</span><span class="sxs-lookup"><span data-stu-id="981bc-151">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="981bc-152">No Visual Basic, adicione o `/d:DEBUG=True` sinalizador à linha de comando do compilador.</span><span class="sxs-lookup"><span data-stu-id="981bc-152">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="981bc-153">Para habilitar o rastreamento em c#, adicione a `/d:TRACE` sinalizador à linha de comando do compilador quando você compila seu código, ou adiciona `#define TRACE` na parte superior do seu arquivo.</span><span class="sxs-lookup"><span data-stu-id="981bc-153">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="981bc-154">No Visual Basic, adicione o `/d:TRACE=True` sinalizador à linha de comando do compilador.</span><span class="sxs-lookup"><span data-stu-id="981bc-154">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="981bc-155">Para definir o nível de seu ouvinte, edite o arquivo de configuração para seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="981bc-155">To set the level of your listener, edit the configuration file for your application.</span></span> <span data-ttu-id="981bc-156">Nesse arquivo, você pode adicionar um ouvinte, defina seu tipo e definir seus parâmetros, remover um ouvinte ou limpar todos os ouvintes anteriormente definidos pelo aplicativo.</span><span class="sxs-lookup"><span data-stu-id="981bc-156">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="981bc-157">O arquivo de configuração deve ser formatado como o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="981bc-157">The configuration file should be formatted like the following example.</span></span>  
  
 <span data-ttu-id="981bc-158">Para executar este exemplo, você deve fornecer o nome totalmente qualificado do assembly.</span><span class="sxs-lookup"><span data-stu-id="981bc-158">For this example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="981bc-159">Para obter informações sobre como obter o nome totalmente qualificado do assembly, consulte [nomes de Assembly](~/docs/framework/app-domains/assembly-names.md).</span><span class="sxs-lookup"><span data-stu-id="981bc-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
    <related type="Article" href="https://msdn.microsoft.com/library/ecc74f95-743c-450d-93f6-09a30db0fe4a">
      <span data-ttu-id="981bc-160">Instruções passo a passo: alterando onde My.Application.Log grava informações</span>
      <span class="sxs-lookup">
        <span data-stu-id="981bc-160">Walkthrough: Changing Where My.Application.Log Writes Information</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-161">Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> e define o nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-161">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class and sets the name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="981bc-162">Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> com o nome padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-162">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-163">Esse método define o nome da instância de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe FileLogTraceListener.</span><span class="sxs-lookup"><span data-stu-id="981bc-163">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to FileLogTraceListener.</span></span>  
  
 <span data-ttu-id="981bc-164">Você pode acessar o nome da instância por meio de <xref:System.Diagnostics.TraceListener.Name%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-164">You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="981bc-165">Objetos (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-165">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.FileLogTraceListener : string -&gt; Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="new Microsoft.VisualBasic.Logging.FileLogTraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="981bc-166">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-166">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="981bc-167">O nome do objeto da instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-167">The name of the instance object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="981bc-168">Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> com o nome fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-168">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-169">Esse método define o nome da instância do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> de classe para `name`.</span><span class="sxs-lookup"><span data-stu-id="981bc-169">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to `name`.</span></span>  
  
 <span data-ttu-id="981bc-170">Você pode acessar o nome da instância considerado o <xref:System.Diagnostics.TraceListener.Name%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-170">You can access the instance name thought the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="981bc-171">Objetos (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-171">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Append : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-172">Determina se deve a saída deve ser acrescentada ao arquivo atual ou gravada em um novo arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-172">Determines whether to append the output to the current file or write it to a new file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="981bc-173">
            <see langword="Boolean" />, com <see langword="True" /> indicando que a saída será anexada ao arquivo atual, e <see langword="False" /> indicando que a saída é gravada para um novo arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-173">
              <see langword="Boolean" />, with <see langword="True" /> indicating that the output is appended to the current file, and <see langword="False" /> indicating that output is written to a new file.</span>
          </span>
          <span data-ttu-id="981bc-174">A configuração padrão dessa propriedade é <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-174">The default setting for this property is <see langword="True" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-175">Quando o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> é de propriedade `False`, a saída é gravada para um novo arquivo.</span><span class="sxs-lookup"><span data-stu-id="981bc-175">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property is `False`, the output is written to a new file.</span></span> <span data-ttu-id="981bc-176">Quando a propriedade for `True`, a saída será anexada ao arquivo atual, a menos que:</span><span class="sxs-lookup"><span data-stu-id="981bc-176">When the property is `True`, the output is appended to the current file, unless:</span></span>  
  
-   <span data-ttu-id="981bc-177">O arquivo de saída é bloqueado por outro processo.</span><span class="sxs-lookup"><span data-stu-id="981bc-177">The output file is locked by another process.</span></span> <span data-ttu-id="981bc-178">Nessa situação, um novo arquivo de log é criado com um número de versão é incorporado a <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> nome.</span><span class="sxs-lookup"><span data-stu-id="981bc-178">In this situation, a new log file is created with a version number that is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="981bc-179">O tamanho do arquivo atual é maior do que o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> permite a propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-179">The current file size is greater than what the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property allows.</span></span> <span data-ttu-id="981bc-180">Nessa situação, mensagens adicionais são descartados e, dependendo do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> propriedade, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="981bc-180">In this situation, additional messages are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="981bc-181">O nome do arquivo existente está desatualizado em acordo com o agendamento de criação de log especificado pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-181">The existing file name is out of date according to the log-creation schedule specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="981bc-182">Nessa situação, um novo arquivo de log é criado e o carimbo de data é incorporado a <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> nome.</span><span class="sxs-lookup"><span data-stu-id="981bc-182">In this situation, a new log file is created and the date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-183">Indica se a gravação no fluxo de arquivos de log libera ou não o buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-183">Indicates whether or not the writing to the log file stream flushes the buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="981bc-184">
            <see langword="Boolean" />, com <see langword="True" /> que indica que o fluxo é liberado após cada gravação; caso contrário, as entradas de log são armazenadas em buffer e gravadas com mais eficiência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-184">
              <see langword="Boolean" />, with <see langword="True" /> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</span>
          </span>
          <span data-ttu-id="981bc-185">A configuração padrão dessa propriedade é <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-185">The default setting for this property is <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-186">O `False` definindo para o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> propriedade fornece o melhor desempenho para a maioria dos aplicativos, porque é mais eficiente para gravar várias mensagens para o arquivo de log ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="981bc-186">The `False` setting for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</span></span> <span data-ttu-id="981bc-187">Você pode usar o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> buffer de saída do método para liberar todas as mensagens no momento no arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-187">You can use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to flush any messages currently in the log file's output buffer.</span></span> <span data-ttu-id="981bc-188">Você também pode usar o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> método, que implicitamente libera o fluxo antes de fechar o arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-188">You can also use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method, which implicitly flushes the stream before closing the log file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseFileName : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-189">Obtém ou define o nome base dos arquivos de log, que é usado para criar o nome completo de arquivo de log completo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-189">Gets or sets the base name for the log files, which is used to create the full log-file name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="981bc-190">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-190">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="981bc-191">O nome base dos arquivos de log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-191">The base name for the log files.</span>
          </span>
          <span data-ttu-id="981bc-192">O padrão é o nome de produto do aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-192">The default is the application's product name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-193">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> propriedade determina o nome de base para os arquivos de log que o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe grava.</span><span class="sxs-lookup"><span data-stu-id="981bc-193">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.</span></span>  
  
 <span data-ttu-id="981bc-194">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> propriedade fornece o nome completo do arquivo de log atual.</span><span class="sxs-lookup"><span data-stu-id="981bc-194">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="981bc-195">Ele é gerado de acordo com o caminho do log, o nome de base, a data e um número para distingui-la de versões diferentes do log.</span><span class="sxs-lookup"><span data-stu-id="981bc-195">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="981bc-196">Novos arquivos de log são criados em uma base conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="981bc-196">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="981bc-197">O formulário explícito do nome do arquivo de log completo é `path` \\ `baseName`[-`dateStamp`] [-`iteration`]. log, onde</span><span class="sxs-lookup"><span data-stu-id="981bc-197">The explicit form of the full log file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where</span></span>  
  
-   <span data-ttu-id="981bc-198">O `path` parte é determinada pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> propriedade e, se o valor dessa propriedade é definido como <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-198">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="981bc-199">O `baseName` parte é o nome do log fundamentais, especificado pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-199">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="981bc-200">O `dateStamp` parte tem o formato "Aaaa-MM-DD", e ele é mostrado quando <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> é definido como <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> ou <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span><span class="sxs-lookup"><span data-stu-id="981bc-200">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="981bc-201">Se mais de um arquivo de log é necessário com o mesmo `baseName` e `dateStamp`, o `iteration` parte um positivo `Integer`, é adicionado ao nome do arquivo.</span><span class="sxs-lookup"><span data-stu-id="981bc-201">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="fileLogTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="981bc-202">Fecha o fluxo subjacente do arquivo de log atual e libera os recursos associados ao fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-202">Closes the underlying stream for the current log file and releases any resources associated with the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-203">Você não precisará chamar o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> método explicitamente, porque o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe gerencia o fluxo subjacente.</span><span class="sxs-lookup"><span data-stu-id="981bc-203">You do not need to call the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method explicitly, because the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class manages the underlying steam.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomLocation : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-204">Obtém ou define o diretório de arquivo de log quando a propriedade <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> está definida como <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-204">Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="981bc-205">
            <see langword="String" />, que é o nome do diretório de arquivo de log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-205">
              <see langword="String" />, which is the name of the log-file directory.</span>
          </span>
          <span data-ttu-id="981bc-206">A configuração padrão dessa propriedade é o diretório do usuário para dados de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-206">The default setting for this property is the user's directory for application data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-207">Quando o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> propriedade for definida, ela também define o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> propriedade <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span><span class="sxs-lookup"><span data-stu-id="981bc-207">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property is set, it also sets the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span></span>  
  
 <span data-ttu-id="981bc-208">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> propriedade gerará uma exceção se o diretório não pode ser resolvido.</span><span class="sxs-lookup"><span data-stu-id="981bc-208">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property will throw an exception if the directory cannot be resolved.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-209">Obtém ou define o delimitador usado para delimitar campos dentro de uma mensagem de log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-209">Gets or sets the delimiter used to delimit fields within a log message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="981bc-210">
            <see langword="String" />, que é o delimitador usado para campos em uma mensagem de log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-210">
              <see langword="String" />, which is the delimiter used for fields within a log message.</span>
          </span>
          <span data-ttu-id="981bc-211">A configuração padrão para essa propriedade é o caractere de tabulação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-211">The default setting for this property is the TAB character.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-212">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> propriedade permite que você altere o delimitador padrão.</span><span class="sxs-lookup"><span data-stu-id="981bc-212">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property allows you to change the default delimiter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberSignature Language="F#" Value="member this.DiskSpaceExhaustedBehavior : Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-213">Determina o que fazer ao gravar no arquivo de log e há menos espaço livre em disco que o especificado pela propriedade <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-213">Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="981bc-214">
            <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-214">
              <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span>
          </span>
          <span data-ttu-id="981bc-215">Determina o que fazer ao tentar gravar no arquivo de log e este tiver menos espaço livre em disco disponível que o especificado pela propriedade <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> ou se o tamanho do arquivo de log for maior do que a propriedade <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> permite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-215">Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows.</span>
          </span>
          <span data-ttu-id="981bc-216">O valor padrão é <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-216">The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-217">Quando o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> estiver definida como <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, as mensagens de log são descartadas silenciosamente se não houver espaço suficiente em disco reservado.</span><span class="sxs-lookup"><span data-stu-id="981bc-217">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property is set to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, the log messages are silently discarded if there is not enough reserved disk space.</span></span> <span data-ttu-id="981bc-218">Esse é o comportamento padrão e impede que aplicativos simples falhe se o disco ficar muito cheio.</span><span class="sxs-lookup"><span data-stu-id="981bc-218">This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</span></span>  
  
 <span data-ttu-id="981bc-219">Aplicativos mais robustos podem definir as <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> propriedade para <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>e adicione `Try...Catch` blocos ao redor de todo o código que grava no log.</span><span class="sxs-lookup"><span data-stu-id="981bc-219">More robust applications can set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, and add `Try...Catch` blocks around all code that writes to the log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="fileLogTraceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="981bc-220">
            <see langword="True" /> libera os recursos gerenciados e não gerenciados; <see langword="False" /> libera apenas os recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-220">
              <see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="981bc-221">Fecha o fluxo subjacente e, opcionalmente, libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-221">Closes the underlying stream and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-222">Quando o `disposing` parâmetro é `True`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> referências.</span><span class="sxs-lookup"><span data-stu-id="981bc-222">When the `disposing` parameter is `True`, this method releases all resources held by any managed objects that this <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> references.</span></span> <span data-ttu-id="981bc-223">Este método invoca o método `Dispose` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="981bc-223">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="981bc-224">
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="981bc-224">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="981bc-225">Ao substituir <see langword="Dispose" />, tome cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="981bc-225">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="981bc-226">Este método chama o <see langword="Dispose" /> método da classe base, <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="981bc-226">This method calls the <see langword="Dispose" /> method of the base class, <see langword="Dispose" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-227">Obtém ou define a codificação usada ao criar um novo arquivo de log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-227">Gets or sets the encoding to use when creating a new log file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="981bc-228">
            <see cref="T:System.Text.Encoding" />, que é a codificação a ser usado ao criar um novo arquivo de log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-228">
              <see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file.</span>
          </span>
          <span data-ttu-id="981bc-229">O valor padrão dessa propriedade é <see cref="T:System.Text.UTF8Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-229">The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-230">Ao anexar o texto para um arquivo de log, a codificação para esse arquivo é usada em vez da codificação especificada pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-230">When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="fileLogTraceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="981bc-231">Libera o fluxo subjacente que grava no arquivo de log atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-231">Flushes the underlying stream that writes to the current log file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-232">Use o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> método para gravar dados armazenados em buffer todos os arquivo de log atual.</span><span class="sxs-lookup"><span data-stu-id="981bc-232">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to write all buffered data to the current log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullLogFileName : string" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-233">Obtém o nome completo do arquivo de log atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-233">Gets the current full log-file name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="981bc-234">
            <see langword="String" />, que é o nome completo do arquivo de log atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-234">
              <see langword="String" />, which is the current full log-file name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-235">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> propriedade fornece o nome completo do arquivo de log atual.</span><span class="sxs-lookup"><span data-stu-id="981bc-235">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="981bc-236">Ele é gerado de acordo com o caminho do log, o nome de base, a data e um número para distingui-la de versões diferentes do log.</span><span class="sxs-lookup"><span data-stu-id="981bc-236">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="981bc-237">Novos arquivos de log são criados em uma base conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="981bc-237">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="981bc-238">A forma explícita o nome completo do arquivo de log é `path` \\ `baseName`[-`dateStamp`] [-`iteration`]. log, em que:</span><span class="sxs-lookup"><span data-stu-id="981bc-238">The explicit form of the full log-file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where:</span></span>  
  
-   <span data-ttu-id="981bc-239">O `path` parte é determinada pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> propriedade e, se o valor dessa propriedade é definido como <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-239">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="981bc-240">O `baseName` parte é o nome do log fundamentais, especificado pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-240">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="981bc-241">O `dateStamp` parte tem o formato AAAA-MM-DD, e ele é mostrado quando <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> é <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> ou <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span><span class="sxs-lookup"><span data-stu-id="981bc-241">The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="981bc-242">Se mais de um arquivo de log é necessário com o mesmo `baseName` e `dateStamp`, o `iteration` parte um positivo `Integer`, é adicionado ao nome do arquivo.</span><span class="sxs-lookup"><span data-stu-id="981bc-242">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="fileLogTraceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="981bc-243">Obtém os atributos de configuração XML personalizados com suporte no ouvinte de rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-243">Gets the custom XML configuration attributes supported by the trace listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="981bc-244">Matriz <see langword="String" /> que contém os atributos de configuração XML reconhecidos por este ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-244">
              <see langword="String" /> array containing the XML configuration attributes recognized by this listener.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-245">Atributos de personalizado para o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> pode ser usado no arquivo de configuração XML para controlar o comportamento de uma instância da <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe.</span><span class="sxs-lookup"><span data-stu-id="981bc-245">The custom attributes for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be used in the XML configuration file for controlling the behavior of an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class.</span></span> <span data-ttu-id="981bc-246">Usar qualquer outro atributo faz com que uma exceção de configuração.</span><span class="sxs-lookup"><span data-stu-id="981bc-246">Using any other attribute causes a configuration exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostName : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-247">Indica se o nome do host do computador de log deve ser incluído na saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-247">Indicates whether or not the host name of the logging machine should be included in the output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="981bc-248">
            <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-248">
              <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="981bc-249">Use <see langword="True" /> se o identificador do host deve ser incluído; caso contrário, use <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-249">Use <see langword="True" /> if the host identifier should be included; otherwise use <see langword="False" />.</span>
          </span>
          <span data-ttu-id="981bc-250">O valor padrão é <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-250">The default value is <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-251">Use a propriedade para configurar o comportamento do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> e <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="981bc-251">Use the property to configure the behavior of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.VisualBasic.Logging.LogFileLocation with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-252">Obtém ou define o local dos arquivos de log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-252">Gets or sets location for the log files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="981bc-253">
            <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, que é o local do arquivo de log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-253">
              <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file.</span>
          </span>
          <span data-ttu-id="981bc-254">O valor padrão é <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-254">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-255">Use o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> propriedade para definir o caminho do log para um dos caminhos predefinidos, determinados pelo <xref:Microsoft.VisualBasic.Logging.LogFileLocation> valores de enumeração.</span><span class="sxs-lookup"><span data-stu-id="981bc-255">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.</span></span>  
  
|<span data-ttu-id="981bc-256">**Valor de localização**</span><span class="sxs-lookup"><span data-stu-id="981bc-256">**Location value**</span></span>|<span data-ttu-id="981bc-257">**Path**</span><span class="sxs-lookup"><span data-stu-id="981bc-257">**Path**</span></span>|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|<span data-ttu-id="981bc-258">O caminho para os dados de aplicativo que são compartilhados entre todos os usuários, com o formato:</span><span class="sxs-lookup"><span data-stu-id="981bc-258">The path for the application data that is shared among all users, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="981bc-259">Um valor típico para `BasePath` é:</span><span class="sxs-lookup"><span data-stu-id="981bc-259">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="981bc-260">C:\Documents and Settings\All Users\dados</span><span class="sxs-lookup"><span data-stu-id="981bc-260">C:\Documents and Settings\All Users\Application Data</span></span><br /><br /> <span data-ttu-id="981bc-261">Os valores de `CompanyName`, `ProductName`, e `ProductVersion` vêm do assembly.</span><span class="sxs-lookup"><span data-stu-id="981bc-261">The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|<span data-ttu-id="981bc-262">O caminho para o arquivo executável que iniciou o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="981bc-262">The path for the executable file that started the application.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|<span data-ttu-id="981bc-263">O caminho para os dados de aplicativo de um usuário, com o formato:</span><span class="sxs-lookup"><span data-stu-id="981bc-263">The path for the application data of a user, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="981bc-264">Um valor típico para `BasePath` é:</span><span class="sxs-lookup"><span data-stu-id="981bc-264">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="981bc-265">C:\Documents and Settings\\`username`\Application Data</span><span class="sxs-lookup"><span data-stu-id="981bc-265">C:\Documents and Settings\\`username`\Application Data</span></span><br /><br /> <span data-ttu-id="981bc-266">Os valores de `CompanyName`, `ProductName`, e `ProductVersion` vêm formam o assembly.</span><span class="sxs-lookup"><span data-stu-id="981bc-266">The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|<span data-ttu-id="981bc-267">O caminho da pasta temporária do sistema atual.</span><span class="sxs-lookup"><span data-stu-id="981bc-267">The path of the current system's temporary folder.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|<span data-ttu-id="981bc-268">Se a cadeia de caracteres especificada por <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> é não vazio, em seguida, usá-lo como o caminho; caso contrário, use o caminho para os dados de aplicativo de um usuário.</span><span class="sxs-lookup"><span data-stu-id="981bc-268">If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileCreationSchedule : Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-269">Determina qual data incluir nos nomes dos arquivos de log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-269">Determines which date to include in the names of the log files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="981bc-270">
            <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-270">
              <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span>
          </span>
          <span data-ttu-id="981bc-271">Isso indica qual data incluir nos nomes de arquivo de log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-271">This indicates which date to include in the log-file names.</span>
          </span>
          <span data-ttu-id="981bc-272">O valor padrão é <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-272">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-273">Atribuir um dos <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> valores de enumeração para o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> propriedade para especificar qual data incluir nos nomes dos arquivos de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-273">Assign one of the <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> enumeration values to the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property to specify which date to include in the names of the log files.</span></span>  
  
 <span data-ttu-id="981bc-274">O formato da data é AAAA-MM-DD.</span><span class="sxs-lookup"><span data-stu-id="981bc-274">The format of the date is YYYY-MM-DD.</span></span> <span data-ttu-id="981bc-275">Para obter mais informações sobre o formato do nome do arquivo de log, consulte <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="981bc-275">For more information on the format of the log file name, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
|<span data-ttu-id="981bc-276">**Valor de LogFileCreationSchedule**</span><span class="sxs-lookup"><span data-stu-id="981bc-276">**LogFileCreationSchedule value**</span></span>|<span data-ttu-id="981bc-277">**Data em que o nome do arquivo de log**</span><span class="sxs-lookup"><span data-stu-id="981bc-277">**Date in the log file name**</span></span>|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|<span data-ttu-id="981bc-278">Inclua a data atual no nome do arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-278">Include the current date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|<span data-ttu-id="981bc-279">Não inclua a data no nome do arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-279">Do not include the date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|<span data-ttu-id="981bc-280">Inclua o primeiro dia da semana atual no nome do arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-280">Include the first day of the current week in the log file name.</span></span><br /><br /> <span data-ttu-id="981bc-281">A semana começa no sábado.</span><span class="sxs-lookup"><span data-stu-id="981bc-281">The week starts on Saturday.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxFileSize : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-282">Obtém ou define o tamanho máximo permitido para o arquivo de log, em bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-282">Gets or sets the maximum allowed size of the log file, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="981bc-283">
            <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-283">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="981bc-284">Este é o tamanho máximo permitido para o arquivo de log, em bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-284">This is the maximum allowed log-file size, in bytes.</span>
          </span>
          <span data-ttu-id="981bc-285">O valor padrão é 5000000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-285">The default value is 5000000.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-286">Use essa propriedade para certificar-se de que os arquivos de log não fique muito grandes.</span><span class="sxs-lookup"><span data-stu-id="981bc-286">Use this property to make sure that the log files do not grow too large.</span></span>  
  
 <span data-ttu-id="981bc-287">Se o tamanho do arquivo de log (em bytes) é maior que o valor dessa propriedade, em seguida, quando o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> tentativas de classe para gravar uma mensagem no log, a mensagem será descartada e a falha é silencioso ou uma exceção é lançada, dependendo do valor da <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-287">If the log file size (in bytes) is greater than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="981bc-288">Caso contrário, a mensagem é gravada no log, se a quantidade de espaço livre em disco (em bytes) é menor que <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span><span class="sxs-lookup"><span data-stu-id="981bc-288">Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="981bc-289">Quando esta propriedade está definida com um valor menor que 1000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-289">When this property is set to a value less than 1000.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ReserveDiskSpace : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-290">Obtém ou define a quantidade de espaço livre em disco, em bytes, necessários antes que as mensagens possam ser gravadas no arquivo de log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-290">Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="981bc-291">
            <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-291">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="981bc-292">Essa é a quantidade de espaço livre em disco necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-292">This is the amount of free disk space necessary.</span>
          </span>
          <span data-ttu-id="981bc-293">O valor padrão é 10000000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-293">The default value is 10000000.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-294">Use essa propriedade para certificar-se de que os arquivos de log não preencher completamente o disco.</span><span class="sxs-lookup"><span data-stu-id="981bc-294">Use this property to make sure that the log files do not completely fill the disk.</span></span>  
  
 <span data-ttu-id="981bc-295">Se a quantidade de espaço livre de espaço (em bytes) é menor que o valor dessa propriedade, em seguida, quando o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> tentativas de classe para gravar uma mensagem no log, a mensagem será descartada e a falha é silencioso ou uma exceção é lançada, dependendo do valor da < C2 > <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>  propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-295">If the amount of free disk space (in bytes) is less than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="981bc-296">Caso contrário, a mensagem é gravada no log, se o tamanho do arquivo de log (em bytes) é maior que <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="981bc-296">Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="981bc-297">Quando essa propriedade é definida com um valor menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-297">When this property is set to a value less than 0.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-298">Grava dados de rastreamento no arquivo de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-298">Writes trace data to the output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-299"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> métodos não se destinam a ser chamado pelo código do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="981bc-299"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="981bc-300">Esses métodos são chamados por membros dos <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> classes para gravar dados de rastreamento de saída.</span><span class="sxs-lookup"><span data-stu-id="981bc-300">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="981bc-301">Um objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-301">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="981bc-302">Um nome da origem de rastreamento que invocou esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-302">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="981bc-303">Um dos valores de enumeração <see cref="T:System.Diagnostics.TraceEventType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-303">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="981bc-304">Um identificador numérico do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-304">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="981bc-305">Os dados de rastreamento a serem emitidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-305">The trace data to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="981bc-306">Grava as informações de rastreamento, um objeto de dados e informações de evento no fluxo ou arquivo de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-306">Writes trace information, a data object, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-307">Esse método:</span><span class="sxs-lookup"><span data-stu-id="981bc-307">This method:</span></span>  
  
1.  <span data-ttu-id="981bc-308">Formata as informações de contexto e os dados de saída.</span><span class="sxs-lookup"><span data-stu-id="981bc-308">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="981bc-309">Cria um novo arquivo de log, se necessário.</span><span class="sxs-lookup"><span data-stu-id="981bc-309">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="981bc-310">Grava as informações no arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-310">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="981bc-311">Para obter mais informações sobre a criação de novos arquivos de log, consulte <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="981bc-311">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="981bc-312">A tabela a seguir lista os campos de saída na ordem em que aparecem.</span><span class="sxs-lookup"><span data-stu-id="981bc-312">The following table lists the output fields in the order they appear.</span></span> <span data-ttu-id="981bc-313">Os campos são delimitados pela cadeia de caracteres que o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> propriedade especifica e são seguidas por um terminador de linha.</span><span class="sxs-lookup"><span data-stu-id="981bc-313">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="981bc-314">**Campo**</span><span class="sxs-lookup"><span data-stu-id="981bc-314">**Field**</span></span>|<span data-ttu-id="981bc-315">**Condição de saída**</span><span class="sxs-lookup"><span data-stu-id="981bc-315">**Output condition**</span></span>|<span data-ttu-id="981bc-316">**Descrição**</span><span class="sxs-lookup"><span data-stu-id="981bc-316">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="981bc-317">Sempre</span><span class="sxs-lookup"><span data-stu-id="981bc-317">Always</span></span>|<span data-ttu-id="981bc-318">O valor de `name`.</span><span class="sxs-lookup"><span data-stu-id="981bc-318">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="981bc-319">Sempre</span><span class="sxs-lookup"><span data-stu-id="981bc-319">Always</span></span>|<span data-ttu-id="981bc-320">O nome do valor de enumeração de `eventType`.</span><span class="sxs-lookup"><span data-stu-id="981bc-320">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="981bc-321">Sempre</span><span class="sxs-lookup"><span data-stu-id="981bc-321">Always</span></span>|<span data-ttu-id="981bc-322">A representação da cadeia de caracteres de `id`.</span><span class="sxs-lookup"><span data-stu-id="981bc-322">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="981bc-323">Sempre</span><span class="sxs-lookup"><span data-stu-id="981bc-323">Always</span></span>|<span data-ttu-id="981bc-324">A representação da cadeia de caracteres de `data`.</span><span class="sxs-lookup"><span data-stu-id="981bc-324">The string representation of `data`.</span></span>|  
|`callStack`|<span data-ttu-id="981bc-325">Quando o <xref:System.Diagnostics.TraceOptions.Callstack> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-325">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-326">O <xref:System.Diagnostics.TraceEventCache.Callstack%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-326">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="981bc-327">Quando o <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-327">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-328">O <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-328">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="981bc-329">Quando o <xref:System.Diagnostics.TraceOptions.DateTime> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-329">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-330">A representação de cadeia de caracteres da <xref:System.Diagnostics.TraceEventCache.DateTime%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-330">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="981bc-331">A cultura invariável é usada para a conversão de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="981bc-331">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="981bc-332">Quando o <xref:System.Diagnostics.TraceOptions.ProcessId> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-332">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-333">A representação de cadeia de caracteres da <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-333">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="981bc-334">A cultura invariável é usada para a conversão de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="981bc-334">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="981bc-335">Quando o <xref:System.Diagnostics.TraceOptions.ThreadId> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-335">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-336">O <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-336">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="981bc-337">Quando o <xref:System.Diagnostics.TraceOptions.Timestamp> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-337">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-338">A representação de cadeia de caracteres da <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-338">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="981bc-339">A cultura invariável é usada para a conversão de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="981bc-339">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="981bc-340">Quando o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> é de propriedade `True`.</span><span class="sxs-lookup"><span data-stu-id="981bc-340">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="981bc-341">O nome do computador.</span><span class="sxs-lookup"><span data-stu-id="981bc-341">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="981bc-342">Um objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-342">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="981bc-343">O nome da origem de rastreamento que invocou esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-343">The name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="981bc-344">Um dos valores de enumeração <see cref="T:System.Diagnostics.TraceEventType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-344">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="981bc-345">Um identificador numérico do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-345">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="981bc-346">Uma matriz de objetos a ser emitidos como dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-346">An array of objects to emit as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="981bc-347">Grava as informações de rastreamento, uma matriz de objetos de dados e informações de evento no fluxo ou arquivo de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-347">Writes trace information, an array of data objects, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-348">Esse método:</span><span class="sxs-lookup"><span data-stu-id="981bc-348">This method:</span></span>  
  
1.  <span data-ttu-id="981bc-349">Formata as informações de contexto e os dados de saída,</span><span class="sxs-lookup"><span data-stu-id="981bc-349">Formats the data and context information for output,</span></span>  
  
2.  <span data-ttu-id="981bc-350">Cria um novo arquivo de log, se necessário,</span><span class="sxs-lookup"><span data-stu-id="981bc-350">Creates a new log file, if necessary,</span></span>  
  
3.  <span data-ttu-id="981bc-351">Grava as informações no arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-351">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="981bc-352">Para obter mais informações sobre a criação de novos arquivos de log, consulte <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="981bc-352">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="981bc-353">Esta tabela lista os campos de saída na ordem em que aparecem.</span><span class="sxs-lookup"><span data-stu-id="981bc-353">This table lists the output fields in the order they appear.</span></span> <span data-ttu-id="981bc-354">Os campos são delimitados pela cadeia de caracteres que o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> propriedade especifica e são seguidas por um terminador de linha.</span><span class="sxs-lookup"><span data-stu-id="981bc-354">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="981bc-355">**Campo**</span><span class="sxs-lookup"><span data-stu-id="981bc-355">**Field**</span></span>|<span data-ttu-id="981bc-356">**Condição de saída**</span><span class="sxs-lookup"><span data-stu-id="981bc-356">**Output condition**</span></span>|<span data-ttu-id="981bc-357">**Descrição**</span><span class="sxs-lookup"><span data-stu-id="981bc-357">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="981bc-358">Sempre</span><span class="sxs-lookup"><span data-stu-id="981bc-358">Always</span></span>|<span data-ttu-id="981bc-359">O valor de `name`.</span><span class="sxs-lookup"><span data-stu-id="981bc-359">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="981bc-360">Sempre</span><span class="sxs-lookup"><span data-stu-id="981bc-360">Always</span></span>|<span data-ttu-id="981bc-361">O nome do valor de enumeração de `eventType`.</span><span class="sxs-lookup"><span data-stu-id="981bc-361">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="981bc-362">Sempre</span><span class="sxs-lookup"><span data-stu-id="981bc-362">Always</span></span>|<span data-ttu-id="981bc-363">A representação da cadeia de caracteres de `id`.</span><span class="sxs-lookup"><span data-stu-id="981bc-363">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="981bc-364">Sempre</span><span class="sxs-lookup"><span data-stu-id="981bc-364">Always</span></span>|<span data-ttu-id="981bc-365">A cadeia de caracteres que consiste a representação de cadeia de caracteres de cada elemento na `data`, cada um separado por <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span><span class="sxs-lookup"><span data-stu-id="981bc-365">The string consisting of the string representation of each element in `data`, each separated by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span></span>|  
|`callStack`|<span data-ttu-id="981bc-366">Quando o <xref:System.Diagnostics.TraceOptions.Callstack> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-366">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-367">O <xref:System.Diagnostics.TraceEventCache.Callstack%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-367">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="981bc-368">Quando o <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-368">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-369">O <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-369">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="981bc-370">Quando o <xref:System.Diagnostics.TraceOptions.DateTime> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-370">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-371">A representação de cadeia de caracteres da <xref:System.Diagnostics.TraceEventCache.DateTime%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-371">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="981bc-372">A cultura invariável é usada para a conversão de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="981bc-372">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="981bc-373">Quando o <xref:System.Diagnostics.TraceOptions.ProcessId> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-373">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-374">A representação de cadeia de caracteres da <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-374">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="981bc-375">A cultura invariável é usada para a conversão de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="981bc-375">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="981bc-376">Quando o <xref:System.Diagnostics.TraceOptions.ThreadId> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-376">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-377">O <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-377">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="981bc-378">Quando o <xref:System.Diagnostics.TraceOptions.Timestamp> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-378">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-379">A representação de cadeia de caracteres da <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-379">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="981bc-380">A cultura invariável é usada para a conversão de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="981bc-380">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="981bc-381">Quando o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> é de propriedade `True`.</span><span class="sxs-lookup"><span data-stu-id="981bc-381">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="981bc-382">O nome do computador.</span><span class="sxs-lookup"><span data-stu-id="981bc-382">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="981bc-383">Grava informações de rastreamento e de evento no fluxo ou arquivo de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-383">Writes trace and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-384"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> métodos não se destinam a ser chamado pelo código do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="981bc-384"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="981bc-385">Esses métodos são chamados por membros dos <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> classes para gravar dados de rastreamento de saída.</span><span class="sxs-lookup"><span data-stu-id="981bc-385">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="981bc-386">Um objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-386">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="981bc-387">Um nome da origem de rastreamento que invocou esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-387">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="981bc-388">Um dos valores de enumeração <see cref="T:System.Diagnostics.TraceEventType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-388">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="981bc-389">Um identificador numérico do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-389">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="981bc-390">Uma mensagem a ser gravada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-390">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="981bc-391">Grava as informações de rastreamento, uma mensagem e informações de evento no fluxo ou arquivo de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-391">Writes trace information, a message and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-392">Esse método:</span><span class="sxs-lookup"><span data-stu-id="981bc-392">This method:</span></span>  
  
1.  <span data-ttu-id="981bc-393">Formata as informações de contexto e os dados de saída.</span><span class="sxs-lookup"><span data-stu-id="981bc-393">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="981bc-394">Cria um novo arquivo de log, se necessário.</span><span class="sxs-lookup"><span data-stu-id="981bc-394">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="981bc-395">Grava as informações no arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-395">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="981bc-396">Para obter mais informações sobre a criação de novos arquivos de log, consulte <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="981bc-396">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="981bc-397">Esta tabela lista os campos de saída na ordem em que aparecem.</span><span class="sxs-lookup"><span data-stu-id="981bc-397">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="981bc-398">Os campos são delimitados pela cadeia de caracteres que o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> propriedade especifica e são seguidas por um terminador de linha.</span><span class="sxs-lookup"><span data-stu-id="981bc-398">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="981bc-399">**Campo**</span><span class="sxs-lookup"><span data-stu-id="981bc-399">**Field**</span></span>|<span data-ttu-id="981bc-400">**Condição de saída**</span><span class="sxs-lookup"><span data-stu-id="981bc-400">**Output condition**</span></span>|<span data-ttu-id="981bc-401">**Descrição**</span><span class="sxs-lookup"><span data-stu-id="981bc-401">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="981bc-402">Sempre.</span><span class="sxs-lookup"><span data-stu-id="981bc-402">Always.</span></span>|<span data-ttu-id="981bc-403">O valor de `name`.</span><span class="sxs-lookup"><span data-stu-id="981bc-403">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="981bc-404">Sempre.</span><span class="sxs-lookup"><span data-stu-id="981bc-404">Always.</span></span>|<span data-ttu-id="981bc-405">O nome do valor de enumeração de `eventType`.</span><span class="sxs-lookup"><span data-stu-id="981bc-405">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="981bc-406">Sempre.</span><span class="sxs-lookup"><span data-stu-id="981bc-406">Always.</span></span>|<span data-ttu-id="981bc-407">A representação da cadeia de caracteres de `id`.</span><span class="sxs-lookup"><span data-stu-id="981bc-407">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="981bc-408">Sempre.</span><span class="sxs-lookup"><span data-stu-id="981bc-408">Always.</span></span>|<span data-ttu-id="981bc-409">O valor de `message`.</span><span class="sxs-lookup"><span data-stu-id="981bc-409">The value of `message`.</span></span>|  
|`callStack`|<span data-ttu-id="981bc-410">Quando o <xref:System.Diagnostics.TraceOptions.Callstack> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-410">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-411">O <xref:System.Diagnostics.TraceEventCache.Callstack%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-411">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="981bc-412">Quando o <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-412">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-413">O <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-413">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="981bc-414">Quando o <xref:System.Diagnostics.TraceOptions.DateTime> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-414">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-415">A representação de cadeia de caracteres da <xref:System.Diagnostics.TraceEventCache.DateTime%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-415">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="981bc-416">A cultura invariável é usada para a conversão de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="981bc-416">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="981bc-417">Quando o <xref:System.Diagnostics.TraceOptions.ProcessId> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-417">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-418">A representação de cadeia de caracteres da <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-418">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="981bc-419">A cultura invariável é usada para a conversão de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="981bc-419">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="981bc-420">Quando o <xref:System.Diagnostics.TraceOptions.ThreadId> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-420">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-421">O <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-421">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="981bc-422">Quando o <xref:System.Diagnostics.TraceOptions.Timestamp> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-422">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-423">A representação de cadeia de caracteres da <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-423">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="981bc-424">A cultura invariável é usada para a conversão de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="981bc-424">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="981bc-425">Quando o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> é de propriedade `True`.</span><span class="sxs-lookup"><span data-stu-id="981bc-425">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="981bc-426">O nome do computador.</span><span class="sxs-lookup"><span data-stu-id="981bc-426">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="981bc-427">Um objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-427">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="981bc-428">Um nome da origem de rastreamento que invocou esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-428">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="981bc-429">Um dos valores de enumeração <see cref="T:System.Diagnostics.TraceEventType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-429">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="981bc-430">Um identificador numérico do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-430">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="981bc-431">Uma cadeia de caracteres de formato que contém zero ou mais itens de formato, que correspondem aos objetos na matriz <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-431">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="981bc-432">Uma matriz <see langword="Object" /> que contém zero ou mais objetos a serem formatados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-432">An <see langword="Object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="981bc-433">Grava informações de rastreamento, uma matriz de objetos formatada e informações de evento no fluxo ou arquivo de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-433">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-434">Esse método:</span><span class="sxs-lookup"><span data-stu-id="981bc-434">This method:</span></span>  
  
1.  <span data-ttu-id="981bc-435">Formata as informações de contexto e os dados de saída.</span><span class="sxs-lookup"><span data-stu-id="981bc-435">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="981bc-436">Cria um novo o novo arquivo de log, se necessário.</span><span class="sxs-lookup"><span data-stu-id="981bc-436">Creates a new a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="981bc-437">Grava as informações no arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="981bc-437">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="981bc-438">Para obter mais informações sobre como criar um novo arquivo de log, consulte <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="981bc-438">For more information on creating new log file, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="981bc-439">Esta tabela lista os campos de saída na ordem em que aparecem.</span><span class="sxs-lookup"><span data-stu-id="981bc-439">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="981bc-440">Os campos são delimitados pela cadeia de caracteres que o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> propriedade especifica e seguido por um terminador de linha.</span><span class="sxs-lookup"><span data-stu-id="981bc-440">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and followed by a line terminator.</span></span>  
  
|<span data-ttu-id="981bc-441">**Campo**</span><span class="sxs-lookup"><span data-stu-id="981bc-441">**Field**</span></span>|<span data-ttu-id="981bc-442">**Condição de saída**</span><span class="sxs-lookup"><span data-stu-id="981bc-442">**Output condition**</span></span>|<span data-ttu-id="981bc-443">**Descrição**</span><span class="sxs-lookup"><span data-stu-id="981bc-443">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="981bc-444">Sempre</span><span class="sxs-lookup"><span data-stu-id="981bc-444">Always</span></span>|<span data-ttu-id="981bc-445">O valor de `name`.</span><span class="sxs-lookup"><span data-stu-id="981bc-445">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="981bc-446">Sempre</span><span class="sxs-lookup"><span data-stu-id="981bc-446">Always</span></span>|<span data-ttu-id="981bc-447">O nome do valor de enumeração de `eventType`.</span><span class="sxs-lookup"><span data-stu-id="981bc-447">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="981bc-448">Sempre</span><span class="sxs-lookup"><span data-stu-id="981bc-448">Always</span></span>|<span data-ttu-id="981bc-449">A representação da cadeia de caracteres de `id`.</span><span class="sxs-lookup"><span data-stu-id="981bc-449">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="981bc-450">Sempre</span><span class="sxs-lookup"><span data-stu-id="981bc-450">Always</span></span>|<span data-ttu-id="981bc-451">Os dados no `args` formatado com o `format` cadeia de caracteres e usando a cultura invariável para conversões de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="981bc-451">The data in `args` formatted with the `format` string and using the invariant culture for string conversions.</span></span>|  
|`callStack`|<span data-ttu-id="981bc-452">Quando o <xref:System.Diagnostics.TraceOptions.Callstack> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-452">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-453">O <xref:System.Diagnostics.TraceEventCache.Callstack%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-453">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="981bc-454">Quando o <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-454">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-455">O <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-455">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="981bc-456">Quando o <xref:System.Diagnostics.TraceOptions.DateTime> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-456">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-457">A representação de cadeia de caracteres da <xref:System.Diagnostics.TraceEventCache.DateTime%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-457">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="981bc-458">A cultura invariável é usada para a conversão de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="981bc-458">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="981bc-459">Quando o <xref:System.Diagnostics.TraceOptions.ProcessId> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-459">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-460">A representação de cadeia de caracteres da <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-460">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="981bc-461">A cultura invariável é usada para a conversão de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="981bc-461">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="981bc-462">Quando o <xref:System.Diagnostics.TraceOptions.ThreadId> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-462">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-463">O <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-463">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="981bc-464">Quando o <xref:System.Diagnostics.TraceOptions.Timestamp> sinalizador é definido no <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="981bc-464">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="981bc-465">A representação de cadeia de caracteres da <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> propriedade de `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="981bc-465">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="981bc-466">A cultura invariável é usada para a conversão de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="981bc-466">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="981bc-467">Quando o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> é de propriedade `True`.</span><span class="sxs-lookup"><span data-stu-id="981bc-467">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="981bc-468">O nome do computador.</span><span class="sxs-lookup"><span data-stu-id="981bc-468">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="fileLogTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="981bc-469">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-469">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="981bc-470">A mensagem personalizada a ser gravada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-470">The custom message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="981bc-471">Grava uma mensagem textual para o disco, sem qualquer informação de contexto adicional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-471">Writes a verbatim message to disk, without any additional context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-472">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> método grava uma mensagem específica para o arquivo de log, sem nenhuma informação de contexto adicionais.</span><span class="sxs-lookup"><span data-stu-id="981bc-472">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="981bc-473">Use um do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> métodos para incluir as informações de contexto na saída do log.</span><span class="sxs-lookup"><span data-stu-id="981bc-473">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="fileLogTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="981bc-474">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-474">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="981bc-475">A mensagem personalizada a ser gravada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-475">The custom message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="981bc-476">Grava uma mensagem textual para o disco, seguida pelo terminador de linha atual, sem qualquer informação de contexto adicional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="981bc-476">Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="981bc-477">O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> método grava uma mensagem específica para o arquivo de log, sem nenhuma informação de contexto adicionais.</span><span class="sxs-lookup"><span data-stu-id="981bc-477">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="981bc-478">Use um do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> métodos para incluir as informações de contexto na saída do log.</span><span class="sxs-lookup"><span data-stu-id="981bc-478">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>