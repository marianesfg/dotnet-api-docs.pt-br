<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileLogTraceListener.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac578cc1b5b2fdd6e02efea469bb7ec414d6f4ba417.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78cc1b5b2fdd6e02efea469bb7ec414d6f4ba417</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Provides a simple listener that directs logging output to file.</source>
          <target state="translated">Fornece um ouvinte simples que direciona a saída de registro para o arquivo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe fornece recursos de manutenção automatizada para arquivar os arquivos de log conforme a necessidade, em uma base diária ou por aplicativo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</source>
          <target state="translated">Essa funcionalidade de arquivamento automático ajuda a reduzir as responsabilidades de manutenção de desenvolvedores e administradores.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>An instance of <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> can be added to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collections to redirect output from logging to a text file.</source>
          <target state="translated">Uma instância de <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> podem ser adicionados para o <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> coleções para redirecionar a saída de log para um arquivo de texto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Instances of this class can also be added to <ph id="ph1">`My.Application.Log`</ph> or <ph id="ph2">`My.Log`</ph> (for Web applications) in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> applications.</source>
          <target state="translated">As instâncias dessa classe também podem ser adicionadas a <ph id="ph1">`My.Application.Log`</ph> ou <ph id="ph2">`My.Log`</ph> (para aplicativos da Web) em <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> aplicativos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Changing Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept><ph id="ph1">`.`</ph></source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>passo a passo: alterando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept><ph id="ph1">`.`</ph></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The main features of this class are:</source>
          <target state="translated">Os principais recursos dessa classe são:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">*</bpt>Archival functionality<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Funcionalidade de arquivamento<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</source>
          <target state="translated">Os arquivos de log gerados por esta classe são nomeados de acordo com o nome de base e a data, junto com um número para distinguir o arquivo de log de versões sucessivas do log.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>New log files are created on an as-needed basis.</source>
          <target state="translated">Novos arquivos de log são criados em uma base conforme necessário.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The explicit form of the file name is <ph id="ph1">`baseName`</ph>[-<ph id="ph2">`dateStamp`</ph>][-<ph id="ph3">`version`</ph>].log, where:</source>
          <target state="translated">A forma explícita do nome do arquivo é <ph id="ph1">`baseName`</ph>[-<ph id="ph2">`dateStamp`</ph>] [-<ph id="ph3">`version`</ph>]. log, onde:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">`baseName`</ph> part is the fundamental log name, specified by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">`baseName`</ph> parte é o nome do log fundamentais, especificado pelo <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">`dateStamp`</ph> part has the format "YYYY-MM-DD", and it is shown when <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> is <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">`dateStamp`</ph> parte tem o formato "Aaaa-MM-DD" e é mostrada quando <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> é <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> ou <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If more than one log file is needed with the same <ph id="ph1">`baseName`</ph> and <ph id="ph2">`dateStamp`</ph>, the <ph id="ph3">`version`</ph> part, a positive <ph id="ph4">`Integer`</ph>, is added to the file name.</source>
          <target state="translated">Se for necessário mais de um arquivo de log com o mesmo <ph id="ph1">`baseName`</ph> e <ph id="ph2">`dateStamp`</ph>, o <ph id="ph3">`version`</ph> parte um positivo <ph id="ph4">`Integer`</ph>, é adicionado ao nome do arquivo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">*</bpt>Multiple class instances<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Várias instâncias da classe<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If an instance of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class writes to a file that is in use:</source>
          <target state="translated">Se uma instância do <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe grava em um arquivo que está em uso:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The class shares the file if it is being used by another instance of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class in the same process.</source>
          <target state="translated">A classe compartilha o arquivo se ele estiver sendo usado por outra instância de <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe no mesmo processo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The class creates a new log file using the next available name if the file is being used by another process.</source>
          <target state="translated">A classe cria um novo arquivo de log usando o nome do próximo disponível se o arquivo está sendo usado por outro processo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">*</bpt>Thread safety<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Acesso thread-safe<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class is thread safe.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe é thread-safe.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>This allows you to safely write messages to the log from multiple threads without using locks.</source>
          <target state="translated">Isso permite que você com segurança escrever mensagens no log de vários threads sem usar bloqueios.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Location<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Local do arquivo de log<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property takes a <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> enumeration to specify one of the typical directories to write the log file to.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> propriedade usa um <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> enumeração para especificar um dos diretórios típicos para gravar o arquivo de log.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To write the log to another location, set the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property to that location.</source>
          <target state="translated">Para gravar o log para outro local, defina o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> propriedade nesse local.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Name<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Nome do arquivo de log<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The base name for the log file is specified by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated">O nome de base para o arquivo de log for especificado o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The current log file name can be read from the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> property.</source>
          <target state="translated">O nome do arquivo de log atual pode ser lido o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>It is derived from several other properties and the current state of the logs in the file system.</source>
          <target state="translated">Ela é derivada de várias outras propriedades e o estado atual dos logs no sistema de arquivos.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log Maintenance<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Manutenção do log<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The minimum frequency for creating new log files is determined by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property.</source>
          <target state="translated">A frequência mínima para a criação de novos arquivos de log é determinada pelo <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>When the value is <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> name.</source>
          <target state="translated">Quando o valor é <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> ou <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>, um novo arquivo de log é criado pelo menos uma vez, cada dia ou semana e um carimbo de data é incorporado a <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> nome.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The maximum size (in bytes) of the log file is determined by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> property.</source>
          <target state="translated">O tamanho máximo (em bytes) do arquivo de log é determinado pelo <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property, an exception is thrown.</source>
          <target state="translated">Se o tamanho do arquivo de log exceder esse tamanho, gravadas no log de mensagens adicionais são descartados e, dependendo do <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> propriedade, uma exceção será lançada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> property determines how much free space (in bytes) must be available.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> propriedade determina como a quantidade de espaço livre (em bytes) deve estar disponível.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>This helps ensure that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class will not consume all available disk space.</source>
          <target state="translated">Isso ajuda a garantir que o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe consumirá não todo o espaço em disco disponível.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property to specify the behavior of log writes when there are less than <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> bytes free.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> propriedade para especificar o comportamento do log de gravações quando houver menos de <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> bytes livres.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Output Settings<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Configurações de saída do arquivo de log<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> propriedade especifica se o fluxo subjacente deve ser liberado automaticamente depois de cada gravação para o arquivo de log.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> propriedade especifica se deseja acrescentar mensagens para o arquivo de log atual, se permitido ou gravá-las em um novo arquivo de log.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies the string to use for delimiting the fields within a log message.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> propriedade especifica a cadeia de caracteres a ser usado para os campos dentro de uma mensagem de log de delimitação.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> property specifies the encoding to use when creating a new log file.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> propriedade especifica a codificação a ser usado ao criar um novo arquivo de log.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Output<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Arquivo de log de saída<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> methods write messages to the log file.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> e <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> métodos gravam mensagens para o arquivo de log.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>These methods check the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property, along with any existing logs with the same base name to determine if a new log should be created.</source>
          <target state="translated">Verifique esses métodos de <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> propriedade, junto com todos os logs existentes com o mesmo nome de base para determinar se um novo log deve ser criado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> method flushes any messages currently in the output buffer to the log file.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> método libera quaisquer mensagens atualmente no buffer de saída para o arquivo de log.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> method closes the log file so that it can be used by other processes.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> método fecha o arquivo de log para que ele pode ser usado por outros processos.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Enabling Output<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Habilitando a saída<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated">Você deve habilitar o rastreamento ou a depuração para usar um ouvinte de rastreamento.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">A sintaxe a seguir é específico do compilador.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If you use compilers other than C# or <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, refer to the documentation for your compiler.</source>
          <target state="translated">Se você usar compiladores diferente de c# ou <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, consulte a documentação para o compilador.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or you can add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">Para habilitar a depuração em c#, adicione o <ph id="ph1">`/d:DEBUG`</ph> sinalizador para a linha de comando do compilador quando você compila o código, ou você pode adicionar <ph id="ph2">`#define DEBUG`</ph> à parte superior do seu arquivo.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, add the <ph id="ph2">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated">Em <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, adicione o <ph id="ph2">`/d:DEBUG=True`</ph> sinalizador para a linha de comando do compilador.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">Para habilitar o rastreamento em c#, adicione o <ph id="ph1">`/d:TRACE`</ph> sinalizador para a linha de comando do compilador quando você compila o código ou adiciona <ph id="ph2">`#define TRACE`</ph> à parte superior do seu arquivo.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, add the <ph id="ph2">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated">Em <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, adicione o <ph id="ph2">`/d:TRACE=True`</ph> sinalizador para a linha de comando do compilador.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To set the level of your listener, edit the configuration file for your application.</source>
          <target state="translated">Para definir o nível de seu ouvinte, edite o arquivo de configuração para seu aplicativo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">Nesse arquivo, você pode adicionar um ouvinte, defina seu tipo e definir seus parâmetros, remover um ouvinte ou limpar todos os ouvintes anteriormente definidos pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The configuration file should be formatted like the following example.</source>
          <target state="translated">O arquivo de configuração deve ser formatado como o exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>For this example to run, you must provide the fully qualified assembly name.</source>
          <target state="translated">Para executar este exemplo, você deve fornecer o nome totalmente qualificado do assembly.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>For information about how to obtain the fully qualified assembly name, see <bpt id="p1">[</bpt>Assembly Names<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>.</source>
          <target state="translated">Para obter informações sobre como obter o nome totalmente qualificado do assembly, consulte <bpt id="p1">[</bpt>nomes de Assembly<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> class and sets the name.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> e define o nome.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> class with the default name.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> com o nome padrão.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
          <source>This method sets the instance name of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class to FileLogTraceListener.</source>
          <target state="translated">Esse método define o nome da instância de <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe FileLogTraceListener.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
          <source>You can access the instance name through the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property.</source>
          <target state="translated">Você pode acessar o nome de instância por meio de <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>The name of the instance object.</source>
          <target state="translated">O nome do objeto da instância.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> class with the supplied name.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> com o nome fornecido.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>This method sets the instance name of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class to <ph id="ph2">`name`</ph>.</source>
          <target state="translated">Esse método define o nome da instância de <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> de classe para <ph id="ph2">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>You can access the instance name thought the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property.</source>
          <target state="translated">Você pode acessar o nome da instância considerado o <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>Determines whether to append the output to the current file or write it to a new file.</source>
          <target state="translated">Determina se deve a saída deve ser acrescentada ao arquivo atual ou gravada em um novo arquivo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, with <ph id="ph2">&lt;see langword="True" /&gt;</ph> indicating that the output is appended to the current file, and <ph id="ph3">&lt;see langword="False" /&gt;</ph> indicating that output is written to a new file.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, com <ph id="ph2">&lt;see langword="True" /&gt;</ph> indicando que a saída será anexada ao arquivo atual, e <ph id="ph3">&lt;see langword="False" /&gt;</ph> indicando que a saída é gravada em um novo arquivo.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The default setting for this property is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">A configuração padrão dessa propriedade é <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> property is <ph id="ph2">`False`</ph>, the output is written to a new file.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> é de propriedade <ph id="ph2">`False`</ph>, a saída é gravada em um novo arquivo.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>When the property is <ph id="ph1">`True`</ph>, the output is appended to the current file, unless:</source>
          <target state="translated">Quando a propriedade for <ph id="ph1">`True`</ph>, a saída será anexada ao arquivo atual, a menos que:</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The output file is locked by another process.</source>
          <target state="translated">O arquivo de saída está bloqueado por outro processo.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>In this situation, a new log file is created with a version number that is incorporated into the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> name.</source>
          <target state="translated">Nessa situação, um novo arquivo de log é criado com um número de versão é incorporado a <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> nome.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The current file size is greater than what the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> property allows.</source>
          <target state="translated">Tamanho atual do arquivo é maior do que o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> propriedade permite.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>In this situation, additional messages are discarded and, depending on the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property, an exception is thrown.</source>
          <target state="translated">Nessa situação, as mensagens adicionais são descartados e, dependendo do <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> propriedade, uma exceção será lançada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The existing file name is out of date according to the log-creation schedule specified by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property.</source>
          <target state="translated">O nome de arquivo existente é atualizado de acordo com a agenda de criação de log especificada pelo <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>In this situation, a new log file is created and the date stamp is incorporated into the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> name.</source>
          <target state="translated">Nessa situação, um novo arquivo de log é criado e o carimbo de data é incorporado a <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> nome.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>Indicates whether or not the writing to the log file stream flushes the buffer.</source>
          <target state="translated">Indica se a gravação no fluxo de arquivos de log libera ou não o buffer.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, with <ph id="ph2">&lt;see langword="True" /&gt;</ph> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, com <ph id="ph2">&lt;see langword="True" /&gt;</ph> que indica que o fluxo é liberado após cada gravação; caso contrário, as entradas de log são armazenadas em buffer e gravadas com mais eficiência.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>The default setting for this property is <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">A configuração padrão dessa propriedade é <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>The <ph id="ph1">`False`</ph> setting for the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</source>
          <target state="translated">O <ph id="ph1">`False`</ph> configuração para o <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> propriedade fornece o melhor desempenho para a maioria dos aplicativos, porque é mais eficiente para gravar várias mensagens para o arquivo de log ao mesmo tempo.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>You can use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> method to flush any messages currently in the log file's output buffer.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> buffer de saída do método para liberar quaisquer mensagens atualmente no arquivo de log.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>You can also use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> method, which implicitly flushes the stream before closing the log file.</source>
          <target state="translated">Você também pode usar o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> método, o que libera implicitamente o fluxo antes de fechar o arquivo de log.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>Gets or sets the base name for the log files, which is used to create the full log-file name.</source>
          <target state="translated">Obtém ou define o nome base dos arquivos de log, que é usado para criar o nome completo de arquivo de log completo.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The base name for the log files.</source>
          <target state="translated">O nome base dos arquivos de log.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The default is the application's product name.</source>
          <target state="translated">O padrão é o nome de produto do aplicativo.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property determines the base name for the log files that the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class writes to.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> propriedade determina o nome de base para os arquivos de log que o <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe grava.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> property gives the current full log-file name.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> propriedade fornece o nome completo do arquivo de log atual.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</source>
          <target state="translated">Ele é gerado de acordo com o caminho do log, o nome de base, a data e um número para diferenciá-la de versões diferentes do log.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>New log files are created on an as-needed basis.</source>
          <target state="translated">Novos arquivos de log são criados em uma base conforme necessário.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The explicit form of the full log file name is <ph id="ph1">`path`</ph><ph id="ph2">\\</ph><ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>][-<ph id="ph5">`iteration`</ph>].log, where</source>
          <target state="translated">A forma explícita do nome do arquivo de log completo é <ph id="ph1">`path`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>] [-<ph id="ph5">`iteration`</ph>]. log, em que</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">`path`</ph> part is determined by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property and, if that property value is set to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, the <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">`path`</ph> parte é determinada pelo <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> propriedade e, se o valor da propriedade é definida como <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, o <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">`baseName`</ph> part is the fundamental log name, specified by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">`baseName`</ph> parte é o nome do log fundamentais, especificado pelo <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">`dateStamp`</ph> part has the format "YYYY-MM-DD", and it is shown when <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">`dateStamp`</ph> parte tem o formato "Aaaa-MM-DD" e é mostrada quando <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> é definido como <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> ou <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>If more than one log file is needed with the same <ph id="ph1">`baseName`</ph> and <ph id="ph2">`dateStamp`</ph>, the <ph id="ph3">`iteration`</ph> part, a positive <ph id="ph4">`Integer`</ph>, is added to the file name.</source>
          <target state="translated">Se for necessário mais de um arquivo de log com o mesmo <ph id="ph1">`baseName`</ph> e <ph id="ph2">`dateStamp`</ph>, o <ph id="ph3">`iteration`</ph> parte um positivo <ph id="ph4">`Integer`</ph>, é adicionado ao nome do arquivo.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
          <source>Closes the underlying stream for the current log file and releases any resources associated with the current stream.</source>
          <target state="translated">Fecha o fluxo subjacente do arquivo de log atual e libera os recursos associados ao fluxo atual.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
          <source>You do not need to call the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> method explicitly, because the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class manages the underlying steam.</source>
          <target state="translated">Você não precisa chamar o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> método explicitamente, porque o <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe gerencia o fluxo subjacente.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>Gets or sets the log file directory when the <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /&gt;</ph> property is set to <ph id="ph2">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define o diretório de arquivo de log quando a propriedade <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /&gt;</ph> está definida como <ph id="ph2">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>, which is the name of the log-file directory.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>, que é o nome do diretório de arquivo de log.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>The default setting for this property is the user's directory for application data.</source>
          <target state="translated">A configuração padrão dessa propriedade é o diretório do usuário para dados de aplicativo.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property is set, it also sets the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> estiver definida, ela também define o <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> propriedade <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property will throw an exception if the directory cannot be resolved.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> propriedade gerará uma exceção se o diretório não pode ser resolvido.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source>Gets or sets the delimiter used to delimit fields within a log message.</source>
          <target state="translated">Obtém ou define o delimitador usado para delimitar campos dentro de uma mensagem de log.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>, which is the delimiter used for fields within a log message.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>, que é o delimitador usado para campos dentro de uma mensagem de log.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source>The default setting for this property is the TAB character.</source>
          <target state="translated">A configuração padrão para essa propriedade é o caractere de tabulação.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property allows you to change the default delimiter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> propriedade permite que você altere o delimitador padrão.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>Determines what to do when writing to the log file and there is less free disk space available than specified by the <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph> property.</source>
          <target state="translated">Determina o que fazer ao gravar no arquivo de log e há menos espaço livre em disco que o especificado pela propriedade <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph> property, or if the log file size is greater than what the <ph id="ph2">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /&gt;</ph> property allows.</source>
          <target state="translated">Determina o que fazer ao tentar gravar no arquivo de log e este tiver menos espaço livre em disco disponível que o especificado pela propriedade <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph> ou se o tamanho do arquivo de log for maior do que a propriedade <ph id="ph2">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /&gt;</ph> permite.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>The default value is <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages&gt;</ph>, the log messages are silently discarded if there is not enough reserved disk space.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> está definida como <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages&gt;</ph>, as mensagens de log serão descartadas se não houver espaço em disco reservado silenciosamente.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</source>
          <target state="translated">Esse é o comportamento padrão e impede que aplicativos simples falhe se o disco fique muito cheio.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>More robust applications can set the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property to <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException&gt;</ph>, and add <ph id="ph3">`Try...Catch`</ph> blocks around all code that writes to the log.</source>
          <target state="translated">Aplicativos mais robustos podem definir o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException&gt;</ph>e adicione <ph id="ph3">`Try...Catch`</ph> blocos ao redor de todo o código que grava no log.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> releases both managed and unmanaged resources; <ph id="ph2">&lt;see langword="False" /&gt;</ph> releases only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> libera os recursos gerenciados e não gerenciados; <ph id="ph2">&lt;see langword="False" /&gt;</ph> libera apenas os recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>Closes the underlying stream and optionally releases the managed resources.</source>
          <target state="translated">Fecha o fluxo subjacente e, opcionalmente, libera os recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`True`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> references.</source>
          <target state="translated">Quando o <ph id="ph1">`disposing`</ph> parâmetro é <ph id="ph2">`True`</ph>, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> referências.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca o método <ph id="ph1">`Dispose`</ph> de cada objeto referenciado.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> pode ser chamado várias vezes por outros objetos.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, tome cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>This method calls the <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> method of the base class, <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Este método chama o <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> método da classe base, <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source>Gets or sets the encoding to use when creating a new log file.</source>
          <target state="translated">Obtém ou define a codificação usada ao criar um novo arquivo de log.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>, which is the encoding to use when creating a new log file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>, que é a codificação a ser usado ao criar um novo arquivo de log.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source>The default value of this property is <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph>.</source>
          <target state="translated">O valor padrão dessa propriedade é <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source>When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> property.</source>
          <target state="translated">Ao anexar o texto para um arquivo de log, a codificação do arquivo é usada em vez da codificação especificada pelo <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
          <source>Flushes the underlying stream that writes to the current log file.</source>
          <target state="translated">Libera o fluxo subjacente que grava no arquivo de log atual.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> method to write all buffered data to the current log file.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> método para gravar dados em buffer todos os arquivo de log atual.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>Gets the current full log-file name.</source>
          <target state="translated">Obtém o nome completo do arquivo de log atual.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>, which is the current full log-file name.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>, que é o nome completo do arquivo de log atual.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> property gives the current full log-file name.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> propriedade fornece o nome completo do arquivo de log atual.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</source>
          <target state="translated">Ele é gerado de acordo com o caminho do log, o nome de base, a data e um número para diferenciá-la de versões diferentes do log.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>New log files are created on an as-needed basis.</source>
          <target state="translated">Novos arquivos de log são criados em uma base conforme necessário.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The explicit form of the full log-file name is <ph id="ph1">`path`</ph><ph id="ph2">\\</ph><ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>][-<ph id="ph5">`iteration`</ph>].log, where:</source>
          <target state="translated">A forma explícita do nome completo do arquivo de log é <ph id="ph1">`path`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>] [-<ph id="ph5">`iteration`</ph>]. log, onde:</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">`path`</ph> part is determined by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property and, if that property value is set to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, the <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">`path`</ph> parte é determinada pelo <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> propriedade e, se o valor da propriedade é definida como <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, o <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">`baseName`</ph> part is the fundamental log name, specified by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">`baseName`</ph> parte é o nome do log fundamentais, especificado pelo <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">`dateStamp`</ph> part has the format YYYY-MM-DD, and it is shown when <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> is <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">`dateStamp`</ph> parte tem o formato AAAA-MM-DD, e ele é mostrado quando <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> é <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> ou <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>If more than one log file is needed with the same <ph id="ph1">`baseName`</ph> and <ph id="ph2">`dateStamp`</ph>, the <ph id="ph3">`iteration`</ph> part, a positive <ph id="ph4">`Integer`</ph>, is added to the file name.</source>
          <target state="translated">Se for necessário mais de um arquivo de log com o mesmo <ph id="ph1">`baseName`</ph> e <ph id="ph2">`dateStamp`</ph>, o <ph id="ph3">`iteration`</ph> parte um positivo <ph id="ph4">`Integer`</ph>, é adicionado ao nome do arquivo.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source>Gets the custom XML configuration attributes supported by the trace listener.</source>
          <target state="translated">Obtém os atributos de configuração XML personalizados com suporte no ouvinte de rastreamento.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> array containing the XML configuration attributes recognized by this listener.</source>
          <target state="translated">Matriz <ph id="ph1">&lt;see langword="String" /&gt;</ph> que contém os atributos de configuração XML reconhecidos por este ouvinte.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source>The custom attributes for the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> can be used in the XML configuration file for controlling the behavior of an instance of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class.</source>
          <target state="translated">Atributos personalizados para o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> pode ser usado no arquivo de configuração XML para controlar o comportamento de uma instância do <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source>Using any other attribute causes a configuration exception.</source>
          <target state="translated">Usar qualquer outro atributo faz com que uma exceção de configuração.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>Indicates whether or not the host name of the logging machine should be included in the output.</source>
          <target state="translated">Indica se o nome do host do computador de log deve ser incluído na saída.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>Use <ph id="ph1">&lt;see langword="True" /&gt;</ph> if the host identifier should be included; otherwise use <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Use <ph id="ph1">&lt;see langword="True" /&gt;</ph> se o identificador de host deve ser incluído; caso contrário, use <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>The default value is <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>Use the property to configure the behavior of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> methods.</source>
          <target state="translated">Use a propriedade para configurar o comportamento do <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> e <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>Gets or sets location for the log files.</source>
          <target state="translated">Obtém ou define o local dos arquivos de log.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" /&gt;</ph>, which is the location for the log file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" /&gt;</ph>, que é o local do arquivo de log.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The default value is <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property to set the log path to one of the predefined paths, determined by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> enumeration values.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> propriedade para definir o caminho do log para um dos caminhos predefinidos, determinados pelo <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> valores de enumeração.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source><bpt id="p1">**</bpt>Location value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Valor local<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source><bpt id="p1">**</bpt>Path<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Path<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path for the application data that is shared among all users, with the format:</source>
          <target state="translated">O caminho para os dados de aplicativo que são compartilhados entre todos os usuários, com o formato:</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>A typical value for <ph id="ph1">`BasePath`</ph> is:</source>
          <target state="translated">Um valor típico para <ph id="ph1">`BasePath`</ph> é:</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>C:\Documents and Settings\All Users\Application Data</source>
          <target state="translated">C:\Documents and Settings\All Users\Application dados</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The values of <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, and <ph id="ph3">`ProductVersion`</ph> come from the assembly.</source>
          <target state="translated">Os valores de <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, e <ph id="ph3">`ProductVersion`</ph> vêm do assembly.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path for the executable file that started the application.</source>
          <target state="translated">O caminho para o arquivo executável que iniciou o aplicativo.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path for the application data of a user, with the format:</source>
          <target state="translated">O caminho para os dados do aplicativo de um usuário, com o formato:</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>A typical value for <ph id="ph1">`BasePath`</ph> is:</source>
          <target state="translated">Um valor típico para <ph id="ph1">`BasePath`</ph> é:</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>C:\Documents and Settings<ph id="ph1">\\</ph><ph id="ph2">`username`</ph>\Application Data</source>
          <target state="translated">C:\Documents and Settings<ph id="ph1">\\</ph><ph id="ph2">`username`</ph>\Application Data</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The values of <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, and <ph id="ph3">`ProductVersion`</ph> come form the assembly.</source>
          <target state="translated">Os valores de <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, e <ph id="ph3">`ProductVersion`</ph> vêm formam o assembly.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path of the current system's temporary folder.</source>
          <target state="translated">O caminho da pasta temporária do sistema atual.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>If the string specified by <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> is not empty, then use it as the path; otherwise use the path for the application data of a user.</source>
          <target state="translated">Se a cadeia de caracteres especificado por <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> é não vazio, em seguida, usá-lo como o caminho; caso contrário, use o caminho para os dados de aplicativo de um usuário.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Determines which date to include in the names of the log files.</source>
          <target state="translated">Determina qual data incluir nos nomes dos arquivos de log.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>This indicates which date to include in the log-file names.</source>
          <target state="translated">Isso indica qual data incluir nos nomes de arquivo de log.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>The default value is <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Assign one of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;</ph> enumeration values to the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property to specify which date to include in the names of the log files.</source>
          <target state="translated">Atribuir um do <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;</ph> valores de enumeração para o <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> propriedade para especificar a data para incluir nos nomes dos arquivos de log.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>The format of the date is YYYY-MM-DD.</source>
          <target state="translated">O formato da data é AAAA-MM-DD.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>For more information on the format of the log file name, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre o formato do nome de arquivo de log, consulte <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source><bpt id="p1">**</bpt>LogFileCreationSchedule value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Valor de LogFileCreationSchedule<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source><bpt id="p1">**</bpt>Date in the log file name<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Data em que o nome do arquivo de log<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Include the current date in the log file name.</source>
          <target state="translated">Inclua a data atual no nome do arquivo de log.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Do not include the date in the log file name.</source>
          <target state="translated">Não inclua a data no nome do arquivo de log.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Include the first day of the current week in the log file name.</source>
          <target state="translated">Inclua o primeiro dia da semana atual no nome do arquivo de log.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>The week starts on Saturday.</source>
          <target state="translated">A semana começa no sábado.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>Gets or sets the maximum allowed size of the log file, in bytes.</source>
          <target state="translated">Obtém ou define o tamanho máximo permitido para o arquivo de log, em bytes.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>This is the maximum allowed log-file size, in bytes.</source>
          <target state="translated">Este é o tamanho máximo permitido para o arquivo de log, em bytes.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>The default value is 5000000.</source>
          <target state="translated">O valor padrão é 5000000.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>Use this property to make sure that the log files do not grow too large.</source>
          <target state="translated">Use essa propriedade para certificar-se de que os arquivos de log não ficar muito grandes.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>If the log file size (in bytes) is greater than the value of this property, then when the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property.</source>
          <target state="translated">Se o tamanho do arquivo de log (em bytes) é maior que o valor dessa propriedade, em seguida, quando o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> tentativas de classe para gravar uma mensagem no log, a mensagem será descartada e a falha é silenciosa ou uma exceção é gerada, dependendo do valor da <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph>.</source>
          <target state="translated">Caso contrário, a mensagem é gravada no log, se a quantidade de espaço livre em disco (em bytes) é menor que <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>When this property is set to a value less than 1000.</source>
          <target state="translated">Quando esta propriedade está definida com um valor menor que 1000.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</source>
          <target state="translated">Obtém ou define a quantidade de espaço livre em disco, em bytes, necessários antes que as mensagens possam ser gravadas no arquivo de log.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>This is the amount of free disk space necessary.</source>
          <target state="translated">Essa é a quantidade de espaço livre em disco necessária.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>The default value is 10000000.</source>
          <target state="translated">O valor padrão é 10000000.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>Use this property to make sure that the log files do not completely fill the disk.</source>
          <target state="translated">Use essa propriedade para certificar-se de que os arquivos de log não preencham completamente o disco.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>If the amount of free disk space (in bytes) is less than the value of this property, then when the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property.</source>
          <target state="translated">Se a quantidade de espaço livre de espaço (em bytes) é menor que o valor dessa propriedade, em seguida, quando o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> tentativas de classe para gravar uma mensagem no log, a mensagem será descartada e a falha é silenciosa ou uma exceção é gerada, dependendo do valor da <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph>.</source>
          <target state="translated">Caso contrário, a mensagem é gravada no log, se o tamanho do arquivo de log (em bytes) é maior do que <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>When this property is set to a value less than 0.</source>
          <target state="translated">Quando essa propriedade é definida com um valor menor que 0.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Writes trace data to the output file.</source>
          <target state="translated">Grava dados de rastreamento no arquivo de saída.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> métodos não se destinam a ser chamado pelo código do aplicativo.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>These methods are called by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Esses métodos são chamados por membros do <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes para gravar dados de rastreamento de saída.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">Um nome da origem de rastreamento que invocou esse método.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">Um dos valores de enumeração <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Um identificador numérico do evento.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The trace data to emit.</source>
          <target state="translated">Os dados de rastreamento a serem emitidos.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes trace information, a data object, and event information to the output file or stream.</source>
          <target state="translated">Grava as informações de rastreamento, um objeto de dados e informações de evento no fluxo ou arquivo de saída.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>This method:</source>
          <target state="translated">Este método:</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Formats the data and context information for output.</source>
          <target state="translated">Formata as informações de contexto e dados de saída.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Creates a new log file, if necessary.</source>
          <target state="translated">Cria um novo arquivo de log, se necessário.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes the information to the log file.</source>
          <target state="translated">Grava as informações para o arquivo de log.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>For more information on creating new log files, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre a criação de novos arquivos de log, consulte <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The following table lists the output fields in the order they appear.</source>
          <target state="translated">A tabela a seguir lista os campos de saída na ordem em que aparecem.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and are followed by a line terminator.</source>
          <target state="translated">Os campos são delimitados pela cadeia de caracteres que o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> propriedade especifica e são seguidas por um terminador de linha.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Campo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Condição de saída<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Descrição<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated">O valor de <ph id="ph1">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">O nome do valor de enumeração de <ph id="ph1">`eventType`</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated">A representação da cadeia de caracteres de <ph id="ph1">`id`</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of <ph id="ph1">`data`</ph>.</source>
          <target state="translated">A representação da cadeia de caracteres de <ph id="ph1">`data`</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">A representação de cadeia de caracteres da <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">A cultura invariável é usada para a conversão de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">A representação de cadeia de caracteres da <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">A cultura invariável é usada para a conversão de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">A representação de cadeia de caracteres da <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">A cultura invariável é usada para a conversão de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> é de propriedade <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The name of the computer.</source>
          <target state="translated">O nome do computador.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The name of the trace source that invoked this method.</source>
          <target state="translated">O nome da origem de rastreamento que invocou esse método.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">Um dos valores de enumeração <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Um identificador numérico do evento.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>An array of objects to emit as data.</source>
          <target state="translated">Uma matriz de objetos a ser emitidos como dados.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes trace information, an array of data objects, and event information to the output file or stream.</source>
          <target state="translated">Grava as informações de rastreamento, uma matriz de objetos de dados e informações de evento no fluxo ou arquivo de saída.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>This method:</source>
          <target state="translated">Este método:</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Formats the data and context information for output,</source>
          <target state="translated">Formata as informações de contexto e dados de saída,</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Creates a new log file, if necessary,</source>
          <target state="translated">Cria um novo arquivo de log, se necessário,</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes the information to the log file.</source>
          <target state="translated">Grava as informações para o arquivo de log.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>For more information on creating new log files, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre a criação de novos arquivos de log, consulte <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>This table lists the output fields in the order they appear.</source>
          <target state="translated">Esta tabela lista os campos de saída na ordem em que aparecem.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and are followed by a line terminator.</source>
          <target state="translated">Os campos são delimitados pela cadeia de caracteres que o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> propriedade especifica e são seguidas por um terminador de linha.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Campo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Condição de saída<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Descrição<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated">O valor de <ph id="ph1">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">O nome do valor de enumeração de <ph id="ph1">`eventType`</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated">A representação da cadeia de caracteres de <ph id="ph1">`id`</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string consisting of the string representation of each element in <ph id="ph1">`data`</ph>, each separated by <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph>.</source>
          <target state="translated">A cadeia de caracteres que consiste a representação de cadeia de caracteres de cada elemento na <ph id="ph1">`data`</ph>, cada um separado por <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">A representação de cadeia de caracteres da <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">A cultura invariável é usada para a conversão de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">A representação de cadeia de caracteres da <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">A cultura invariável é usada para a conversão de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">A representação de cadeia de caracteres da <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">A cultura invariável é usada para a conversão de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> é de propriedade <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The name of the computer.</source>
          <target state="translated">O nome do computador.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Writes trace and event information to the output file or stream.</source>
          <target state="translated">Grava informações de rastreamento e de evento no fluxo ou arquivo de saída.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> métodos não se destinam a ser chamado pelo código do aplicativo.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>These methods are called by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Esses métodos são chamados por membros do <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes para gravar dados de rastreamento de saída.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">Um nome da origem de rastreamento que invocou esse método.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">Um dos valores de enumeração <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Um identificador numérico do evento.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A message to write.</source>
          <target state="translated">Uma mensagem a ser gravada.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes trace information, a message and event information to the output file or stream.</source>
          <target state="translated">Grava as informações de rastreamento, uma mensagem e informações de evento no fluxo ou arquivo de saída.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>This method:</source>
          <target state="translated">Este método:</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Formats the data and context information for output.</source>
          <target state="translated">Formata as informações de contexto e dados de saída.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Creates a new log file, if necessary.</source>
          <target state="translated">Cria um novo arquivo de log, se necessário.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes the information to the log file.</source>
          <target state="translated">Grava as informações para o arquivo de log.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>For more information on creating new log files, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre a criação de novos arquivos de log, consulte <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>This table lists the output fields in the order in which they appear.</source>
          <target state="translated">Esta tabela lista os campos de saída na ordem em que aparecem.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and are followed by a line terminator.</source>
          <target state="translated">Os campos são delimitados pela cadeia de caracteres que o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> propriedade especifica e são seguidas por um terminador de linha.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Campo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Condição de saída<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Descrição<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">Sempre.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated">O valor de <ph id="ph1">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">Sempre.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">O nome do valor de enumeração de <ph id="ph1">`eventType`</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">Sempre.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated">A representação da cadeia de caracteres de <ph id="ph1">`id`</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">Sempre.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The value of <ph id="ph1">`message`</ph>.</source>
          <target state="translated">O valor de <ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">A representação de cadeia de caracteres da <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">A cultura invariável é usada para a conversão de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">A representação de cadeia de caracteres da <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">A cultura invariável é usada para a conversão de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">A representação de cadeia de caracteres da <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">A cultura invariável é usada para a conversão de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> é de propriedade <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The name of the computer.</source>
          <target state="translated">O nome do computador.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">Um nome da origem de rastreamento que invocou esse método.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">Um dos valores de enumeração <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Um identificador numérico do evento.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A format string that contains zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Uma cadeia de caracteres de formato que contém zero ou mais itens de formato, que correspondem aos objetos na matriz <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see langword="Object" /&gt;</ph> array containing zero or more objects to format.</source>
          <target state="translated">Uma matriz <ph id="ph1">&lt;see langword="Object" /&gt;</ph> que contém zero ou mais objetos a serem formatados.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes trace information, a formatted array of objects, and event information to the output file or stream.</source>
          <target state="translated">Grava informações de rastreamento, uma matriz de objetos formatada e informações de evento no fluxo ou arquivo de saída.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>This method:</source>
          <target state="translated">Este método:</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Formats the data and context information for output.</source>
          <target state="translated">Formata as informações de contexto e dados de saída.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Creates a new a new log file, if necessary.</source>
          <target state="translated">Cria um novo o novo arquivo de log, se necessário.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes the information to the log file.</source>
          <target state="translated">Grava as informações para o arquivo de log.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>For more information on creating new log file, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como criar um novo arquivo de log, consulte <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>This table lists the output fields in the order in which they appear.</source>
          <target state="translated">Esta tabela lista os campos de saída na ordem em que aparecem.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and followed by a line terminator.</source>
          <target state="translated">Os campos são delimitados pela cadeia de caracteres que o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> propriedade especifica e seguido por um terminador de linha.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Campo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Condição de saída<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Descrição<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated">O valor de <ph id="ph1">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">O nome do valor de enumeração de <ph id="ph1">`eventType`</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated">A representação da cadeia de caracteres de <ph id="ph1">`id`</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Sempre</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The data in <ph id="ph1">`args`</ph> formatted with the <ph id="ph2">`format`</ph> string and using the invariant culture for string conversions.</source>
          <target state="translated">Os dados em <ph id="ph1">`args`</ph> formatado com o <ph id="ph2">`format`</ph> cadeia de caracteres e usando a cultura invariável para conversões de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">A representação de cadeia de caracteres da <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">A cultura invariável é usada para a conversão de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">A representação de cadeia de caracteres da <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">A cultura invariável é usada para a conversão de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> sinalizador é definido no <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">A representação de cadeia de caracteres da <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> propriedade <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">A cultura invariável é usada para a conversão de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> é de propriedade <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The name of the computer.</source>
          <target state="translated">O nome do computador.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>The custom message to write.</source>
          <target state="translated">A mensagem personalizada a ser gravada.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>Writes a verbatim message to disk, without any additional context information.</source>
          <target state="translated">Grava uma mensagem textual para o disco, sem qualquer informação de contexto adicional.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A&gt;</ph> method writes a specific message to the log file, without any additional context information.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A&gt;</ph> método grava uma mensagem específica para o arquivo de log, sem qualquer informação de contexto adicional.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>Use the one of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> methods to include the context information in the log output.</source>
          <target state="translated">Use um do <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> métodos para incluir as informações de contexto na saída de log.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>The custom message to write.</source>
          <target state="translated">A mensagem personalizada a ser gravada.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</source>
          <target state="translated">Grava uma mensagem textual para o disco, seguida pelo terminador de linha atual, sem qualquer informação de contexto adicional.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A&gt;</ph> method writes a specific message to the log file, without any additional context information.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A&gt;</ph> método grava uma mensagem específica para o arquivo de log, sem qualquer informação de contexto adicional.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>Use the one of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> methods to include the context information in the log output.</source>
          <target state="translated">Use um do <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> métodos para incluir as informações de contexto na saída de log.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>