<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Log.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59abe430fefcc00687291bf834609d4d2b5b5d808.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9abe430fefcc00687291bf834609d4d2b5b5d808</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>Provides a property and methods for writing event and exception information to the application's log listeners.</source>
          <target state="translated">Fornece uma propriedade e métodos para gravar informações de evento e de exceção para os ouvintes de log do aplicativo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>The <ph id="ph1">`My.Application.Log`</ph> object provides a straightforward entry point from which to access the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>'s logging services.</source>
          <target state="translated">O <ph id="ph1">`My.Application.Log`</ph> objeto fornece um ponto de entrada simples de acessar o <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>do log de serviços.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>The <ph id="ph1">`WriteEntry`</ph> and <ph id="ph2">`WriteException`</ph> methods write messages to the application's log listeners.</source>
          <target state="translated">O <ph id="ph1">`WriteEntry`</ph> e <ph id="ph2">`WriteException`</ph> métodos gravam mensagens de ouvintes de log do aplicativo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>The listeners can be configured by the application's configuration file.</source>
          <target state="translated">Os ouvintes podem ser configurados pelo arquivo de configuração do aplicativo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Changing Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept> and <bpt id="p2">[</bpt>Working with Application Logs<ept id="p2">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>passo a passo: alterando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept> e <bpt id="p2">[</bpt>trabalhando com Logs de aplicativo<ept id="p2">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>The <ph id="ph1">`My.Application.Log`</ph> object is available only for client applications.</source>
          <target state="translated">O <ph id="ph1">`My.Application.Log`</ph> objeto está disponível somente para aplicativos cliente.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>For Web applications, use <ph id="ph1">`My.Log`</ph>.</source>
          <target state="translated">Para aplicativos Web, use <ph id="ph1">`My.Log`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>For more information, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.AspLog&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.AspLog&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`My.Application.Log`</ph> object.</source>
          <target state="translated">A tabela a seguir lista exemplos de tarefas que envolvem o <ph id="ph1">`My.Application.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>To</source>
          <target state="translated">Para</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>See</source>
          <target state="translated">Consulte</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>Write event information to the application's log listeners</source>
          <target state="translated">Gravar informações de evento para ouvintes de log do aplicativo</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source><bpt id="p1">[</bpt>How to: Write Log Messages<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Como gravar mensagens de log<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>Write exception information to the application's log listeners</source>
          <target state="translated">Gravar informações de exceção para os ouvintes de log do aplicativo</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source><bpt id="p1">[</bpt>How to: Log Exceptions<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Como registrar em log as exceções<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>Determine where <ph id="ph1">`My.Application.Log`</ph> writes information</source>
          <target state="translated">Determinar onde <ph id="ph1">`My.Application.Log`</ph> grava informações</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source><bpt id="p1">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Instruções passo a passo: determinando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>This example shows how to use the <ph id="ph1">`My.Application.Log.WriteEntry`</ph> method to log tracing information.</source>
          <target state="translated">Este exemplo mostra como usar o método <ph id="ph1">`My.Application.Log.WriteEntry`</ph> para registrar em log informações de rastreamento.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Write Log Messages<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como: gravar mensagens de Log<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.Log" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.Log" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.Log" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.Log" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)">
          <source>The name to give to the <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /&gt;</ph> property object.</source>
          <target state="translated">O nome a ser atribuído ao objeto da propriedade <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.Log" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.Log" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
          <source>Gets the file the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> object that underlies the <ph id="ph2">&lt;see langword="Log" /&gt;</ph> object.</source>
          <target state="translated">Obtém o arquivo do objeto <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> que dá suporte ao objeto <ph id="ph2">&lt;see langword="Log" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
          <source>Returns the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> object that underlies the <ph id="ph2">&lt;see langword="Log" /&gt;</ph> object.</source>
          <target state="translated">Retorna o objeto <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> que dá suporte ao objeto <ph id="ph2">&lt;see langword="Log" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
          <source>You can use this property to determine the current configuration of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> object.</source>
          <target state="translated">Você pode usar essa propriedade para determinar a configuração atual do <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
          <source>In client applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Application.Log`</ph> object.</source>
          <target state="translated">Em aplicativos cliente, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Application.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
          <source>In Web applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Log`</ph> object.</source>
          <target state="translated">Em aplicativos Web, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
          <source>Controls the ability to access files and folders.</source>
          <target state="translated">Controla a capacidade de acessar arquivos e pastas.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> object and adds it to the <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceSource.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Cria um novo objeto <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> e o adiciona à coleção <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceSource.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists">
          <source>This method creates a new <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph>, sets its name to <ph id="ph2">`FileLog`</ph>, and configures it to log messages with severity level <ph id="ph3">&lt;xref:System.Diagnostics.SourceLevels.Information&gt;</ph> and greater.</source>
          <target state="translated">Esse método cria um novo <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph>, define seu nome como <ph id="ph2">`FileLog`</ph>e configura-o para registrar em log mensagens com nível de severidade <ph id="ph3">&lt;xref:System.Diagnostics.SourceLevels.Information&gt;</ph> e maior.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists">
          <source>The new <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> object is then added to the <ph id="ph2">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">O novo <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> objeto é adicionado para o <ph id="ph2">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> coleção.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A&gt;</ph> calls the method if the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A&gt;</ph> property has not been configured.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A&gt;</ph> chama o método, se o <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A&gt;</ph> propriedade não foi configurada.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists">
          <source>The trace source can be configured in the application's configuration file.</source>
          <target state="translated">A origem de rastreamento pode ser configurada no arquivo de configuração do aplicativo.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>Gets to the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceSource" /&gt;</ph> object that underlies the <ph id="ph2">&lt;see langword="Log" /&gt;</ph> object.</source>
          <target state="translated">Obtém para o objeto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceSource" /&gt;</ph> que dá suporte ao objeto <ph id="ph2">&lt;see langword="Log" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceSource" /&gt;</ph> object that underlies the <ph id="ph2">&lt;see langword="Log" /&gt;</ph> object.</source>
          <target state="translated">Retorna o objeto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceSource" /&gt;</ph> que dá suporte ao objeto <ph id="ph2">&lt;see langword="Log" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>You can use this property to determine the current configuration of the <ph id="ph1">`Log`</ph> object.</source>
          <target state="translated">Você pode usar essa propriedade para determinar a configuração atual do <ph id="ph1">`Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>In client applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Application.Log`</ph> object.</source>
          <target state="translated">Em aplicativos cliente, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Application.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>In Web applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Log`</ph> object.</source>
          <target state="translated">Em aplicativos Web, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>This is an advanced member; it does not show in IntelliSense unless you select the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">Este é um membro avançado; ele não aparece no IntelliSense, a menos que você selecione o <bpt id="p1">**</bpt>todas as<ept id="p1">**</ept> guia.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>The following table lists an example of a task involving the <ph id="ph1">`TraceSource`</ph> property.</source>
          <target state="translated">A tabela a seguir lista um exemplo de tarefa envolvendo o <ph id="ph1">`TraceSource`</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>To</source>
          <target state="translated">Para</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>See</source>
          <target state="translated">Consulte</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>Get information for each of the <ph id="ph1">`Log`</ph> object's log listeners.</source>
          <target state="translated">Obter informações para cada o <ph id="ph1">`Log`</ph> ouvintes de log do objeto.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source><bpt id="p1">[</bpt>Troubleshooting: Log Listeners<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/troubleshooting-log-listeners.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Solução de problemas: ouvintes de Log<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/troubleshooting-log-listeners.md)</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>Availability by Project Type</source>
          <target state="translated">Disponibilidade por tipo de projeto</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>Project type</source>
          <target state="translated">Tipo de projeto</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>Available</source>
          <target state="translated">Disponível</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>Windows Application</source>
          <target state="translated">Aplicativo do Windows</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>Class Library</source>
          <target state="translated">Biblioteca de Classes</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>Console Application</source>
          <target state="translated">Aplicativo do Console</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>Windows Control Library</source>
          <target state="translated">Biblioteca de controle do Windows</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>Web Control Library</source>
          <target state="translated">Biblioteca de controle da Web</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>No</source>
          <target state="translated">Não</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>Windows Service</source>
          <target state="translated">Serviço do Windows</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source>Web Site</source>
          <target state="translated">Site da Web</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>Writes a message to the application's log listeners.</source>
          <target state="translated">Grava uma mensagem nos ouvintes de log do aplicativo.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>The message to log.</source>
          <target state="translated">A mensagem a ser registrada.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>, an empty string is used.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>mensagem<ept id="p1">&lt;/c&gt;</ept> for <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>, uma cadeia de caracteres vazia será usada.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Writes a message to the application's log listeners.</source>
          <target state="translated">Grava uma mensagem nos ouvintes de log do aplicativo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>The <ph id="ph1">`WriteEntry`</ph> method writes a message to the application's event log listeners.</source>
          <target state="translated">O <ph id="ph1">`WriteEntry`</ph> método grava uma mensagem para os ouvintes de log de eventos do aplicativo.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>In client applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Application.Log`</ph> object.</source>
          <target state="translated">Em aplicativos cliente, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Application.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>In Web applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Log`</ph> object.</source>
          <target state="translated">Em aplicativos Web, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>To learn which log listeners receive the <ph id="ph1">`WriteEntry`</ph> method's messages, see <bpt id="p1">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>.</source>
          <target state="translated">Para saber qual log ouvintes recebem o <ph id="ph1">`WriteEntry`</ph> mensagens do método, consulte <bpt id="p1">[</bpt>passo a passo: Determinando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>You can change default log listeners.</source>
          <target state="translated">Você pode alterar os ouvintes de log padrão.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with Application Logs<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Working with Application Logs (Trabalhando com logs de aplicativo)<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>For overloads that do not take the <ph id="ph1">`id`</ph> argument, the <ph id="ph2">`id`</ph> written to the log is defined by the following table.</source>
          <target state="translated">Para as sobrecargas que não têm o <ph id="ph1">`id`</ph> argumento, o <ph id="ph2">`id`</ph> gravado no log é definido pela tabela a seguir.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Default <ph id="ph1">`id`</ph></source>
          <target state="translated">Padrão <ph id="ph1">`id`</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>6</source>
          <target state="translated">6</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`WriteEntry`</ph> method.</source>
          <target state="translated">A tabela a seguir lista exemplos de tarefas que envolvem o <ph id="ph1">`WriteEntry`</ph> método.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>To</source>
          <target state="translated">Para</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>See</source>
          <target state="translated">Consulte</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Write event information to the application's log listeners</source>
          <target state="translated">Gravar informações de evento para ouvintes de log do aplicativo</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source><bpt id="p1">[</bpt>How to: Write Log Messages<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Como gravar mensagens de log<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept></target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Determine where <ph id="ph1">`Log`</ph> writes information</source>
          <target state="translated">Determinar onde <ph id="ph1">`Log`</ph> grava informações</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source><bpt id="p1">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Instruções passo a passo: determinando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Availability by Project Type</source>
          <target state="translated">Disponibilidade por tipo de projeto</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Project type</source>
          <target state="translated">Tipo de projeto</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Available</source>
          <target state="translated">Disponível</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Windows Application</source>
          <target state="translated">Aplicativo do Windows</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Class Library</source>
          <target state="translated">Biblioteca de Classes</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Console Application</source>
          <target state="translated">Aplicativo do Console</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Windows Control Library</source>
          <target state="translated">Biblioteca de controle do Windows</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Web Control Library</source>
          <target state="translated">Biblioteca de controle da Web</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>No</source>
          <target state="translated">Não</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Windows Service</source>
          <target state="translated">Serviço do Windows</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Web Site</source>
          <target state="translated">Site da Web</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>This example shows how to use the <ph id="ph1">`My.Application.Log.WriteEntry`</ph> method to log tracing information.</source>
          <target state="translated">Este exemplo mostra como usar o método <ph id="ph1">`My.Application.Log.WriteEntry`</ph> para registrar em log informações de rastreamento.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Write Log Messages<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como: gravar mensagens de Log<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>This code example can run only within a client application.</source>
          <target state="translated">Este exemplo de código pode executar somente dentro de um aplicativo cliente.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Change <ph id="ph1">`My.Application.Log.WriteEntry`</ph> to <ph id="ph2">`My.Log.WriteEntry`</ph> for Web applications.</source>
          <target state="translated">Alterar <ph id="ph1">`My.Application.Log.WriteEntry`</ph> para <ph id="ph2">`My.Log.WriteEntry`</ph> para aplicativos da Web.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Code with partial trust calls the method, but writes to an event log listener that requires full trust.</source>
          <target state="translated">Código com confiança parcial chama o método, mas grava em um ouvinte de log de eventos que requer confiança total.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Controls the ability to access files and folders.</source>
          <target state="translated">Controla a capacidade de acessar arquivos e pastas.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>The message to log.</source>
          <target state="translated">A mensagem a ser registrada.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>, an empty string is used.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>mensagem<ept id="p1">&lt;/c&gt;</ept> for <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>, uma cadeia de caracteres vazia será usada.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>The type of message.</source>
          <target state="translated">O tipo de mensagem.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>By default, <ph id="ph1">&lt;see langword="TraceEventType.Information" /&gt;</ph>.</source>
          <target state="translated">Por padrão, <ph id="ph1">&lt;see langword="TraceEventType.Information" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Writes a message to the application's log listeners.</source>
          <target state="translated">Grava uma mensagem nos ouvintes de log do aplicativo.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>The <ph id="ph1">`WriteEntry`</ph> method writes a message to the application's event log listeners.</source>
          <target state="translated">O <ph id="ph1">`WriteEntry`</ph> método grava uma mensagem para os ouvintes de log de eventos do aplicativo.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>In client applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Application.Log`</ph> object.</source>
          <target state="translated">Em aplicativos cliente, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Application.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>In Web applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Log`</ph> object.</source>
          <target state="translated">Em aplicativos Web, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>To learn which log listeners receive the <ph id="ph1">`WriteEntry`</ph> method's messages, see <bpt id="p1">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>.</source>
          <target state="translated">Para saber qual log ouvintes recebem o <ph id="ph1">`WriteEntry`</ph> mensagens do método, consulte <bpt id="p1">[</bpt>passo a passo: Determinando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>You can change default log listeners.</source>
          <target state="translated">Você pode alterar os ouvintes de log padrão.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with Application Logs<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Working with Application Logs (Trabalhando com logs de aplicativo)<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>For overloads that do not take the <ph id="ph1">`id`</ph> argument, the <ph id="ph2">`id`</ph> written to the log is defined by the following table.</source>
          <target state="translated">Para as sobrecargas que não têm o <ph id="ph1">`id`</ph> argumento, o <ph id="ph2">`id`</ph> gravado no log é definido pela tabela a seguir.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Default <ph id="ph1">`id`</ph></source>
          <target state="translated">Padrão <ph id="ph1">`id`</ph></target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>6</source>
          <target state="translated">6</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`WriteEntry`</ph> method.</source>
          <target state="translated">A tabela a seguir lista exemplos de tarefas que envolvem o <ph id="ph1">`WriteEntry`</ph> método.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>To</source>
          <target state="translated">Para</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>See</source>
          <target state="translated">Consulte</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Write event information to the application's log listeners</source>
          <target state="translated">Gravar informações de evento para ouvintes de log do aplicativo</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source><bpt id="p1">[</bpt>How to: Write Log Messages<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Como gravar mensagens de log<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept></target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Determine where <ph id="ph1">`Log`</ph> writes information</source>
          <target state="translated">Determinar onde <ph id="ph1">`Log`</ph> grava informações</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source><bpt id="p1">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Instruções passo a passo: determinando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Availability by Project Type</source>
          <target state="translated">Disponibilidade por tipo de projeto</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Project type</source>
          <target state="translated">Tipo de projeto</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Available</source>
          <target state="translated">Disponível</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Windows Application</source>
          <target state="translated">Aplicativo do Windows</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Class Library</source>
          <target state="translated">Biblioteca de Classes</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Console Application</source>
          <target state="translated">Aplicativo do Console</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Windows Control Library</source>
          <target state="translated">Biblioteca de controle do Windows</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Web Control Library</source>
          <target state="translated">Biblioteca de controle da Web</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>No</source>
          <target state="translated">Não</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Windows Service</source>
          <target state="translated">Serviço do Windows</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Web Site</source>
          <target state="translated">Site da Web</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>This example shows how to use the <ph id="ph1">`My.Application.Log.WriteEntry`</ph> method to log tracing information.</source>
          <target state="translated">Este exemplo mostra como usar o método <ph id="ph1">`My.Application.Log.WriteEntry`</ph> para registrar em log informações de rastreamento.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Write Log Messages<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como: gravar mensagens de Log<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>This code example can run only within a client application.</source>
          <target state="translated">Este exemplo de código pode executar somente dentro de um aplicativo cliente.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Change <ph id="ph1">`My.Application.Log.WriteEntry`</ph> to <ph id="ph2">`My.Log.WriteEntry`</ph> for Web applications.</source>
          <target state="translated">Alterar <ph id="ph1">`My.Application.Log.WriteEntry`</ph> para <ph id="ph2">`My.Log.WriteEntry`</ph> para aplicativos da Web.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>The message type is not one of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">O tipo de mensagem não é um dos valores de enumeração de <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Code with partial trust calls the method, but writes to an event log listener that requires full trust.</source>
          <target state="translated">Código com confiança parcial chama o método, mas grava em um ouvinte de log de eventos que requer confiança total.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Controls the ability to access files and folders.</source>
          <target state="translated">Controla a capacidade de acessar arquivos e pastas.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>The message to log.</source>
          <target state="translated">A mensagem a ser registrada.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>, an empty string is used.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>mensagem<ept id="p1">&lt;/c&gt;</ept> for <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>, uma cadeia de caracteres vazia será usada.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>The type of message.</source>
          <target state="translated">O tipo de mensagem.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>By default, <ph id="ph1">&lt;see langword="TraceEventType.Information" /&gt;</ph>.</source>
          <target state="translated">Por padrão, <ph id="ph1">&lt;see langword="TraceEventType.Information" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Message identifier, typically used for correlation.</source>
          <target state="translated">Identificador de mensagem, normalmente usado para correlação.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>By default, related to <bpt id="p1">&lt;c&gt;</bpt>entryType<ept id="p1">&lt;/c&gt;</ept> as described in the table.</source>
          <target state="translated">Por padrão, relacionado a <bpt id="p1">&lt;c&gt;</bpt>entryType<ept id="p1">&lt;/c&gt;</ept> conforme descrito na tabela.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Writes a message to the application's log listeners.</source>
          <target state="translated">Grava uma mensagem nos ouvintes de log do aplicativo.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>The <ph id="ph1">`WriteEntry`</ph> method writes a message to the application's event log listeners.</source>
          <target state="translated">O <ph id="ph1">`WriteEntry`</ph> método grava uma mensagem para os ouvintes de log de eventos do aplicativo.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>In client applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Application.Log`</ph> object.</source>
          <target state="translated">Em aplicativos cliente, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Application.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>In Web applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Log`</ph> object.</source>
          <target state="translated">Em aplicativos Web, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>To learn which log listeners receive the <ph id="ph1">`WriteEntry`</ph> method's messages, see <bpt id="p1">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>.</source>
          <target state="translated">Para saber qual log ouvintes recebem o <ph id="ph1">`WriteEntry`</ph> mensagens do método, consulte <bpt id="p1">[</bpt>passo a passo: Determinando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>You can change default log listeners.</source>
          <target state="translated">Você pode alterar os ouvintes de log padrão.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with Application Logs<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Working with Application Logs (Trabalhando com logs de aplicativo)<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>For overloads that do not take the <ph id="ph1">`id`</ph> argument, the <ph id="ph2">`id`</ph> written to the log is defined by the following table.</source>
          <target state="translated">Para as sobrecargas que não têm o <ph id="ph1">`id`</ph> argumento, o <ph id="ph2">`id`</ph> gravado no log é definido pela tabela a seguir.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Default <ph id="ph1">`id`</ph></source>
          <target state="translated">Padrão <ph id="ph1">`id`</ph></target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>6</source>
          <target state="translated">6</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`WriteEntry`</ph> method.</source>
          <target state="translated">A tabela a seguir lista exemplos de tarefas que envolvem o <ph id="ph1">`WriteEntry`</ph> método.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>To</source>
          <target state="translated">Para</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>See</source>
          <target state="translated">Consulte</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Write event information to the application's log listeners</source>
          <target state="translated">Gravar informações de evento para ouvintes de log do aplicativo</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Write Log Messages<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Como gravar mensagens de log<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept></target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Determine where <ph id="ph1">`Log`</ph> writes information</source>
          <target state="translated">Determinar onde <ph id="ph1">`Log`</ph> grava informações</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source><bpt id="p1">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Instruções passo a passo: determinando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Availability by Project Type</source>
          <target state="translated">Disponibilidade por tipo de projeto</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Project type</source>
          <target state="translated">Tipo de projeto</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Available</source>
          <target state="translated">Disponível</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Windows Application</source>
          <target state="translated">Aplicativo do Windows</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Class Library</source>
          <target state="translated">Biblioteca de Classes</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Console Application</source>
          <target state="translated">Aplicativo do Console</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Windows Control Library</source>
          <target state="translated">Biblioteca de controle do Windows</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Web Control Library</source>
          <target state="translated">Biblioteca de controle da Web</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>No</source>
          <target state="translated">Não</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Windows Service</source>
          <target state="translated">Serviço do Windows</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Web Site</source>
          <target state="translated">Site da Web</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>This example shows how to use the <ph id="ph1">`My.Application.Log.WriteEntry`</ph> method to log tracing information.</source>
          <target state="translated">Este exemplo mostra como usar o método <ph id="ph1">`My.Application.Log.WriteEntry`</ph> para registrar em log informações de rastreamento.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Write Log Messages<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como: gravar mensagens de Log<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>This code example can run only within a client application.</source>
          <target state="translated">Este exemplo de código pode executar somente dentro de um aplicativo cliente.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Change <ph id="ph1">`My.Application.Log.WriteEntry`</ph> to <ph id="ph2">`My.Log.WriteEntry`</ph> for Web applications.</source>
          <target state="translated">Alterar <ph id="ph1">`My.Application.Log.WriteEntry`</ph> para <ph id="ph2">`My.Log.WriteEntry`</ph> para aplicativos da Web.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>The message type is not one of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">O tipo de mensagem não é um dos valores de enumeração de <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Code with partial trust calls the method, but writes to an event log listener that requires full trust.</source>
          <target state="translated">Código com confiança parcial chama o método, mas grava em um ouvinte de log de eventos que requer confiança total.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Controls the ability to access files and folders.</source>
          <target state="translated">Controla a capacidade de acessar arquivos e pastas.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.Log">
          <source>Writes exception information to the application's log listeners.</source>
          <target state="translated">Grava informações de exceção nos ouvintes de log do aplicativo.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Exception to log.</source>
          <target state="translated">Exceção do log.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Writes exception information to the application's log listeners.</source>
          <target state="translated">Grava informações de exceção nos ouvintes de log do aplicativo.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>The <ph id="ph1">`WriteException`</ph> method writes the information contained in an exception to the application's event log listeners.</source>
          <target state="translated">O <ph id="ph1">`WriteException`</ph> método grava as informações contidas em uma exceção para ouvintes de log de eventos do aplicativo.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>In client applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Application.Log`</ph> object.</source>
          <target state="translated">Em aplicativos cliente, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Application.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>In Web applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Log`</ph> object.</source>
          <target state="translated">Em aplicativos Web, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>To learn which log listeners receive the <ph id="ph1">`WriteException`</ph> method's messages, see <bpt id="p1">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>.</source>
          <target state="translated">Para saber qual log ouvintes recebem o <ph id="ph1">`WriteException`</ph> mensagens do método, consulte <bpt id="p1">[</bpt>passo a passo: Determinando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>You can change default log listeners.</source>
          <target state="translated">Você pode alterar os ouvintes de log padrão.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with Application Logs<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Working with Application Logs (Trabalhando com logs de aplicativo)<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>For overloads that do not take the <ph id="ph1">`id`</ph> argument, the identifier written to the log is defined by the following table.</source>
          <target state="translated">Para as sobrecargas que não têm o <ph id="ph1">`id`</ph> argumento, o identificador gravado no log é definido pela tabela a seguir.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Default <ph id="ph1">`id`</ph></source>
          <target state="translated">Padrão <ph id="ph1">`id`</ph></target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>6</source>
          <target state="translated">6</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`WriteException`</ph> method.</source>
          <target state="translated">A tabela a seguir lista exemplos de tarefas que envolvem o <ph id="ph1">`WriteException`</ph> método.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>To</source>
          <target state="translated">Para</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>See</source>
          <target state="translated">Consulte</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Write exception information to the application's event log listeners.</source>
          <target state="translated">Grave informações de exceção para ouvintes de log de eventos do aplicativo.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source><bpt id="p1">[</bpt>How to: Log Exceptions<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Como registrar em log as exceções<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept></target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Determine where <ph id="ph1">`Log`</ph> writes information.</source>
          <target state="translated">Determine o local em que <ph id="ph1">`Log`</ph> grava as informações.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source><bpt id="p1">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Instruções passo a passo: determinando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Availability by Project Type</source>
          <target state="translated">Disponibilidade por tipo de projeto</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Project type</source>
          <target state="translated">Tipo de projeto</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Available</source>
          <target state="translated">Disponível</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Windows Application</source>
          <target state="translated">Aplicativo do Windows</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Class Library</source>
          <target state="translated">Biblioteca de Classes</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Console Application</source>
          <target state="translated">Aplicativo do Console</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Windows Control Library</source>
          <target state="translated">Biblioteca de controle do Windows</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Web Control Library</source>
          <target state="translated">Biblioteca de controle da Web</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>No</source>
          <target state="translated">Não</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Windows Service</source>
          <target state="translated">Serviço do Windows</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Web Site</source>
          <target state="translated">Site da Web</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>This example shows how to use the <ph id="ph1">`My.Application.Log.WriteException`</ph> method to log exceptions.</source>
          <target state="translated">Este exemplo mostra como usar o <ph id="ph1">`My.Application.Log.WriteException`</ph> método para registrar exceções.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Uncomment the <ph id="ph1">`Dim`</ph> and <ph id="ph2">`MsgBox`</ph> lines to cause a <ph id="ph3">&lt;xref:System.NullReferenceException&gt;</ph> exception.</source>
          <target state="translated">Remova a marca de comentário das linhas <ph id="ph1">`Dim`</ph> e <ph id="ph2">`MsgBox`</ph> para lançar uma exceção <ph id="ph3">&lt;xref:System.NullReferenceException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Log Exceptions<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como: registrar exceções<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>This code example can run only within a client application.</source>
          <target state="translated">Este exemplo de código pode executar somente dentro de um aplicativo cliente.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Change <ph id="ph1">`My.Application.Log.WriteException`</ph> to <ph id="ph2">`My.Log.WriteException`</ph> for Web applications.</source>
          <target state="translated">Alterar <ph id="ph1">`My.Application.Log.WriteException`</ph> para <ph id="ph2">`My.Log.WriteException`</ph> para aplicativos da Web.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source><ph id="ph1">&lt;paramref name="ex" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ex" /&gt;</ph> é <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Code with partial trust calls the method, but writes to an event log listener that requires full trust.</source>
          <target state="translated">Código com confiança parcial chama o método, mas grava em um ouvinte de log de eventos que requer confiança total.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Controls the ability to access files and folders.</source>
          <target state="translated">Controla a capacidade de acessar arquivos e pastas.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Exception to log.</source>
          <target state="translated">Exceção do log.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>The type of message.</source>
          <target state="translated">O tipo de mensagem.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>By default, <ph id="ph1">&lt;see cref="F:System.Diagnostics.TraceEventType.Error" /&gt;</ph>.</source>
          <target state="translated">Por padrão, <ph id="ph1">&lt;see cref="F:System.Diagnostics.TraceEventType.Error" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>String to append to the message.</source>
          <target state="translated">Cadeia de caracteres a acrescentar à mensagem.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>By default, this is an empty string.</source>
          <target state="translated">Por padrão, é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Writes exception information to the application's log listeners.</source>
          <target state="translated">Grava informações de exceção nos ouvintes de log do aplicativo.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>The <ph id="ph1">`WriteException`</ph> method writes the information contained in an exception to the application's event log listeners.</source>
          <target state="translated">O <ph id="ph1">`WriteException`</ph> método grava as informações contidas em uma exceção para ouvintes de log de eventos do aplicativo.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>In client applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Application.Log`</ph> object.</source>
          <target state="translated">Em aplicativos cliente, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Application.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>In Web applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Log`</ph> object.</source>
          <target state="translated">Em aplicativos Web, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>To learn which log listeners receive the <ph id="ph1">`WriteException`</ph> method's messages, see <bpt id="p1">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>.</source>
          <target state="translated">Para saber qual log ouvintes recebem o <ph id="ph1">`WriteException`</ph> mensagens do método, consulte <bpt id="p1">[</bpt>passo a passo: Determinando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>You can change default log listeners.</source>
          <target state="translated">Você pode alterar os ouvintes de log padrão.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with Application Logs<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Working with Application Logs (Trabalhando com logs de aplicativo)<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>For overloads that do not take the <ph id="ph1">`id`</ph> argument, the identifier written to the log is defined by the following table.</source>
          <target state="translated">Para as sobrecargas que não têm o <ph id="ph1">`id`</ph> argumento, o identificador gravado no log é definido pela tabela a seguir.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Default <ph id="ph1">`id`</ph></source>
          <target state="translated">Padrão <ph id="ph1">`id`</ph></target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>6</source>
          <target state="translated">6</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`WriteException`</ph> method.</source>
          <target state="translated">A tabela a seguir lista exemplos de tarefas que envolvem o <ph id="ph1">`WriteException`</ph> método.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>To</source>
          <target state="translated">Para</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>See</source>
          <target state="translated">Consulte</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Write exception information to the application's event log listeners.</source>
          <target state="translated">Grave informações de exceção para ouvintes de log de eventos do aplicativo.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source><bpt id="p1">[</bpt>How to: Log Exceptions<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Como registrar em log as exceções<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept></target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Determine where <ph id="ph1">`Log`</ph> writes information.</source>
          <target state="translated">Determine o local em que <ph id="ph1">`Log`</ph> grava as informações.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source><bpt id="p1">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Instruções passo a passo: determinando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Availability by Project Type</source>
          <target state="translated">Disponibilidade por tipo de projeto</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Project type</source>
          <target state="translated">Tipo de projeto</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Available</source>
          <target state="translated">Disponível</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Windows Application</source>
          <target state="translated">Aplicativo do Windows</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Class Library</source>
          <target state="translated">Biblioteca de Classes</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Console Application</source>
          <target state="translated">Aplicativo do Console</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Windows Control Library</source>
          <target state="translated">Biblioteca de controle do Windows</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Web Control Library</source>
          <target state="translated">Biblioteca de controle da Web</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>No</source>
          <target state="translated">Não</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Windows Service</source>
          <target state="translated">Serviço do Windows</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Web Site</source>
          <target state="translated">Site da Web</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>This example shows how to use the <ph id="ph1">`My.Application.Log.WriteException`</ph> method to log exceptions.</source>
          <target state="translated">Este exemplo mostra como usar o <ph id="ph1">`My.Application.Log.WriteException`</ph> método para registrar exceções.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Uncomment the <ph id="ph1">`Dim`</ph> and <ph id="ph2">`MsgBox`</ph> lines to cause a <ph id="ph3">&lt;xref:System.NullReferenceException&gt;</ph> exception.</source>
          <target state="translated">Remova a marca de comentário das linhas <ph id="ph1">`Dim`</ph> e <ph id="ph2">`MsgBox`</ph> para lançar uma exceção <ph id="ph3">&lt;xref:System.NullReferenceException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Log Exceptions<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como: registrar exceções<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>This code example can run only within a client application.</source>
          <target state="translated">Este exemplo de código pode executar somente dentro de um aplicativo cliente.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Change <ph id="ph1">`My.Application.Log.WriteException`</ph> to <ph id="ph2">`My.Log.WriteException`</ph> for Web applications.</source>
          <target state="translated">Alterar <ph id="ph1">`My.Application.Log.WriteException`</ph> para <ph id="ph2">`My.Log.WriteException`</ph> para aplicativos da Web.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source><ph id="ph1">&lt;paramref name="ex" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ex" /&gt;</ph> é <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>The message type is not one of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">O tipo de mensagem não é um dos valores de enumeração de <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Code with partial trust calls the method, but writes to an event log listener that requires full trust.</source>
          <target state="translated">Código com confiança parcial chama o método, mas grava em um ouvinte de log de eventos que requer confiança total.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Controls the ability to access files and folders.</source>
          <target state="translated">Controla a capacidade de acessar arquivos e pastas.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Exception to log.</source>
          <target state="translated">Exceção do log.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>The type of message.</source>
          <target state="translated">O tipo de mensagem.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>By default, <ph id="ph1">&lt;see cref="F:System.Diagnostics.TraceEventType.Error" /&gt;</ph>.</source>
          <target state="translated">Por padrão, <ph id="ph1">&lt;see cref="F:System.Diagnostics.TraceEventType.Error" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>String to append to the message.</source>
          <target state="translated">Cadeia de caracteres a acrescentar à mensagem.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>By default, this is an empty string.</source>
          <target state="translated">Por padrão, é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Message identifier, typically used for correlation.</source>
          <target state="translated">Identificador de mensagem, normalmente usado para correlação.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>By default, related to <bpt id="p1">&lt;c&gt;</bpt>entryType<ept id="p1">&lt;/c&gt;</ept> as described in the table in the Remarks section.</source>
          <target state="translated">Por padrão, relacionado a <bpt id="p1">&lt;c&gt;</bpt>entryType<ept id="p1">&lt;/c&gt;</ept> conforme descrito na tabela na seção Comentários.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Writes exception information to the application's log listeners.</source>
          <target state="translated">Grava informações de exceção nos ouvintes de log do aplicativo.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>The <ph id="ph1">`WriteException`</ph> method writes the information contained in an exception to the application's event log listeners.</source>
          <target state="translated">O <ph id="ph1">`WriteException`</ph> método grava as informações contidas em uma exceção para ouvintes de log de eventos do aplicativo.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>In client applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Application.Log`</ph> object.</source>
          <target state="translated">Em aplicativos cliente, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Application.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>In Web applications, the <ph id="ph1">`Log`</ph> object is available through the <ph id="ph2">`My.Log`</ph> object.</source>
          <target state="translated">Em aplicativos Web, o <ph id="ph1">`Log`</ph> objeto está disponível por meio de <ph id="ph2">`My.Log`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>To learn which log listeners receive the <ph id="ph1">`WriteException`</ph> method's messages, see <bpt id="p1">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>.</source>
          <target state="translated">Para saber qual log ouvintes recebem o <ph id="ph1">`WriteException`</ph> mensagens do método, consulte <bpt id="p1">[</bpt>passo a passo: Determinando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>You can change default log listeners.</source>
          <target state="translated">Você pode alterar os ouvintes de log padrão.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with Application Logs<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Working with Application Logs (Trabalhando com logs de aplicativo)<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>For overloads that do not take the <ph id="ph1">`id`</ph> argument, the identifier written to the log is defined by the following table.</source>
          <target state="translated">Para as sobrecargas que não têm o <ph id="ph1">`id`</ph> argumento, o identificador gravado no log é definido pela tabela a seguir.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Default <ph id="ph1">`id`</ph></source>
          <target state="translated">Padrão <ph id="ph1">`id`</ph></target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>6</source>
          <target state="translated">6</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`WriteException`</ph> method.</source>
          <target state="translated">A tabela a seguir lista exemplos de tarefas que envolvem o <ph id="ph1">`WriteException`</ph> método.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>To</source>
          <target state="translated">Para</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>See</source>
          <target state="translated">Consulte</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Write exception information to the application's event log listeners.</source>
          <target state="translated">Grave informações de exceção para ouvintes de log de eventos do aplicativo.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Log Exceptions<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Como registrar em log as exceções<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept></target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Determine where <ph id="ph1">`Log`</ph> writes information.</source>
          <target state="translated">Determine o local em que <ph id="ph1">`Log`</ph> grava as informações.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source><bpt id="p1">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Instruções passo a passo: determinando onde My.Application.Log grava informações<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept></target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Availability by Project Type</source>
          <target state="translated">Disponibilidade por tipo de projeto</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Project type</source>
          <target state="translated">Tipo de projeto</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Available</source>
          <target state="translated">Disponível</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Windows Application</source>
          <target state="translated">Aplicativo do Windows</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Class Library</source>
          <target state="translated">Biblioteca de Classes</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Console Application</source>
          <target state="translated">Aplicativo do Console</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Windows Control Library</source>
          <target state="translated">Biblioteca de controle do Windows</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Web Control Library</source>
          <target state="translated">Biblioteca de controle da Web</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>No</source>
          <target state="translated">Não</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Windows Service</source>
          <target state="translated">Serviço do Windows</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Web Site</source>
          <target state="translated">Site da Web</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source><bpt id="p1">**</bpt>Yes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sim<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>This example shows how to use the <ph id="ph1">`My.Application.Log.WriteException`</ph> method to log exceptions.</source>
          <target state="translated">Este exemplo mostra como usar o <ph id="ph1">`My.Application.Log.WriteException`</ph> método para registrar exceções.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Uncomment the <ph id="ph1">`Dim`</ph> and <ph id="ph2">`MsgBox`</ph> lines to cause a <ph id="ph3">&lt;xref:System.NullReferenceException&gt;</ph> exception.</source>
          <target state="translated">Remova a marca de comentário das linhas <ph id="ph1">`Dim`</ph> e <ph id="ph2">`MsgBox`</ph> para lançar uma exceção <ph id="ph3">&lt;xref:System.NullReferenceException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Log Exceptions<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como: registrar exceções<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>This code example can run only within a client application.</source>
          <target state="translated">Este exemplo de código pode executar somente dentro de um aplicativo cliente.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Change <ph id="ph1">`My.Application.Log.WriteException`</ph> to <ph id="ph2">`My.Log.WriteException`</ph> for Web applications.</source>
          <target state="translated">Alterar <ph id="ph1">`My.Application.Log.WriteException`</ph> para <ph id="ph2">`My.Log.WriteException`</ph> para aplicativos da Web.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ex" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ex" /&gt;</ph> é <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>The message type is not one of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">O tipo de mensagem não é um dos valores de enumeração de <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Code with partial trust calls the method, but writes to an event log listener that requires full trust.</source>
          <target state="translated">Código com confiança parcial chama o método, mas grava em um ouvinte de log de eventos que requer confiança total.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Controls the ability to access files and folders.</source>
          <target state="translated">Controla a capacidade de acessar arquivos e pastas.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>