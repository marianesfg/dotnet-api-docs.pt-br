<Type Name="CodeActivity" FullName="System.Activities.CodeActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f67e555078c0f4b10a207a7f940d33faa1077e5" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52607964" /></Metadata><TypeSignature Language="C#" Value="public abstract class CodeActivity : System.Activities.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeActivity extends System.Activities.Activity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.CodeActivity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeActivity&#xA;Inherits Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeActivity abstract : System::Activities::Activity" />
  <TypeSignature Language="F#" Value="type CodeActivity = class&#xA;    inherit Activity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Uma classe abstrata para criar uma atividade personalizada com comportamento obrigatório definido com o método <see cref="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)" />, que fornece acesso à resolução de variável e argumento e a extensões.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como implementar um <xref:System.Activities.CodeActivity>-derivado a atividade.  
  
 [!code-csharp[ActivityAction#0](~/samples/snippets/csharp/VS_Snippets_CFX/activityaction/cs/messagebox.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.CodeActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Quando implementado em uma classe derivada, cria uma instância da classe derivada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CacheMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria e valida uma descrição dos argumentos, das variáveis, das atividades filho e dos representantes da atividade.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os autores de atividade personalizados podem fornecer a lógica de validação em uma substituição de <xref:System.Activities.CodeActivity.CacheMetadata%2A> de uma atividade. Nenhuma exceções que são geradas de <xref:System.Activities.CodeActivity.CacheMetadata%2A> não são tratados como erros de validação. Essas exceções escaparão de chamada para <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> e devem ser tratadas pelo chamador.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override sealed void CacheMetadata (System.Activities.ActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.ActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub CacheMetadata (metadata As ActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::ActivityMetadata metadata);" />
      <MemberSignature Language="F#" Value="override this.CacheMetadata : System.Activities.ActivityMetadata -&gt; unit" Usage="codeActivity.CacheMetadata metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.ActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">Não implementado.</param>
        <summary>Não implementado. Use <see cref="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" /> em seu lugar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os autores de atividade personalizados podem fornecer a lógica de validação em uma substituição de <xref:System.Activities.CodeActivity.CacheMetadata%2A> de uma atividade. Nenhuma exceções que são geradas de <xref:System.Activities.CodeActivity.CacheMetadata%2A> não são tratados como erros de validação. Essas exceções escaparão de chamada para <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> e devem ser tratadas pelo chamador.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected virtual void CacheMetadata (System.Activities.CodeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CacheMetadata(valuetype System.Activities.CodeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CacheMetadata (metadata As CodeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CacheMetadata(System::Activities::CodeActivityMetadata metadata);" />
      <MemberSignature Language="F#" Value="override this.CacheMetadata : System.Activities.CodeActivityMetadata -&gt; unit" Usage="codeActivity.CacheMetadata metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.CodeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">Os metadados da atividade que encapsulam os argumentos, as variáveis, as atividades filho e os representantes da atividade.</param>
        <summary>Cria e valida uma descrição dos argumentos, das variáveis, das atividades filho e dos representantes da atividade.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
O tempo de execução do fluxo de trabalho usa a implementação padrão de <xref:System.Activities.CodeActivity.CacheMetadata%2A> para garantir que a compilação correta de um fluxo de trabalho, bem como para gerenciar relações de tempo de execução e as regras de tempo de vida. A implementação padrão de <xref:System.Activities.CodeActivity.CacheMetadata%2A> examina os membros públicos do tipo de atividade usando o tipo <xref:System.ComponentModel.TypeDescriptor>. Esses membros públicos são do tipo <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, [IEnumerable\<variável >](xref:System.Collections.Generic.IEnumerable%601), <xref:System.Activities.Activity>, [IEnumerable\<atividade >](xref:System.Collections.Generic.IEnumerable%601), ou <xref:System.Activities.ActivityDelegate>. Você pode substituir esse método para personalizar a criação de descrição de tempo de execução da atividade e para fornecer a lógica de validação personalizada. Nenhuma exceções que são geradas de <xref:System.Activities.CodeActivity.CacheMetadata%2A> não são tratados como erros de validação. Essas exceções escaparão de chamada para <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> e devem ser tratadas pelo chamador.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected abstract void Execute (System.Activities.CodeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Execute(class System.Activities.CodeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Execute (context As CodeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Execute(System::Activities::CodeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Execute : System.Activities.CodeActivityContext -&gt; unit" Usage="codeActivity.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.CodeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">O contexto de execução sob a qual a atividade é executada.</param>
        <summary>Quando implementada em uma classe derivada, realiza a execução da atividade.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="protected override sealed Func&lt;System.Activities.Activity&gt; Implementation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;class System.Activities.Activity&gt; Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Activities.CodeActivity.Implementation" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Property Implementation As Func(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Func&lt;System::Activities::Activity ^&gt; ^ Implementation { Func&lt;System::Activities::Activity ^&gt; ^ get(); void set(Func&lt;System::Activities::Activity ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Implementation : Func&lt;System.Activities.Activity&gt; with get, set" Usage="System.Activities.CodeActivity.Implementation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.IgnoreDataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sem suporte.</summary>
        <value>Sempre retorna <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definir um valor para essa propriedade retorna um <xref:System.NotSupportedException>. <xref:System.Activities.CodeActivity> não permite definir a lógica de execução como uma atividade. Em vez disso, a lógica de execução deve ser definida no <xref:System.Activities.CodeActivity.Execute%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementationVersion">
      <MemberSignature Language="C#" Value="protected internal override sealed Version ImplementationVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ImplementationVersion" />
      <MemberSignature Language="DocId" Value="P:System.Activities.CodeActivity.ImplementationVersion" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Property ImplementationVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property Version ^ ImplementationVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImplementationVersion : Version with get, set" Usage="System.Activities.CodeActivity.ImplementationVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a versão de implementação da atividade.</summary>
        <value>A versão de implementação da atividade.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override sealed void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.UpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.CodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub OnCreateDynamicUpdateMap (metadata As UpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::UpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberSignature Language="F#" Value="override this.OnCreateDynamicUpdateMap : System.Activities.DynamicUpdate.UpdateMapMetadata * System.Activities.Activity -&gt; unit" Usage="codeActivity.OnCreateDynamicUpdateMap (metadata, originalActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.UpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata">Os metadados.</param>
        <param name="originalActivity">A atividade original.</param>
        <summary>Gera um evento durante a criação de um mapa para a atualização dinâmica.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>