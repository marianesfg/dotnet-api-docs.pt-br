<Type Name="ExclusiveHandle" FullName="System.Activities.ExclusiveHandle">
  <TypeSignature Language="C#" Value="public class ExclusiveHandle : System.Activities.Handle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExclusiveHandle extends System.Activities.Handle" />
  <TypeSignature Language="DocId" Value="T:System.Activities.ExclusiveHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class ExclusiveHandle&#xA;Inherits Handle" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExclusiveHandle : System::Activities::Handle" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Handle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="128df-101">Adiciona informações complementares a um indicador que permite que ele acesse um subconjunto de seus identificadores de escopo, exceto os identificadores que não são necessários.</span><span class="sxs-lookup"><span data-stu-id="128df-101">Adds supplementary information to a bookmark that enables it to access a subset of its scope handles, excluding handles that are not required.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExclusiveHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExclusiveHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExclusiveHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="128df-102">Cria uma nova instância da classe <see cref="T:System.Activities.ExclusiveHandle" />.</span><span class="sxs-lookup"><span data-stu-id="128df-102">Creates a new instance of the <see cref="T:System.Activities.ExclusiveHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialize">
      <MemberSignature Language="C#" Value="protected override void OnInitialize (System.Activities.HandleInitializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialize(class System.Activities.HandleInitializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExclusiveHandle.OnInitialize(System.Activities.HandleInitializationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialize (context As HandleInitializationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialize(System::Activities::HandleInitializationContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.HandleInitializationContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="128df-103">O ambiente no qual o identificador é criado.</span><span class="sxs-lookup"><span data-stu-id="128df-103">The environment in which the handle is created.</span></span></param>
        <summary><span data-ttu-id="128df-104">Cria uma lista de objetos <see cref="T:System.Activities.BookmarkScopeHandle" /> padrão usando as variáveis do identificador no contexto de inicialização do identificador especificado.</span><span class="sxs-lookup"><span data-stu-id="128df-104">Creates a list of default <see cref="T:System.Activities.BookmarkScopeHandle" /> objects from handle variables in the specified handle initialization context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterBookmarkScope">
      <MemberSignature Language="C#" Value="public void RegisterBookmarkScope (System.Activities.NativeActivityContext context, System.Activities.BookmarkScopeHandle bookmarkScopeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterBookmarkScope(class System.Activities.NativeActivityContext context, class System.Activities.BookmarkScopeHandle bookmarkScopeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExclusiveHandle.RegisterBookmarkScope(System.Activities.NativeActivityContext,System.Activities.BookmarkScopeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterBookmarkScope(System::Activities::NativeActivityContext ^ context, System::Activities::BookmarkScopeHandle ^ bookmarkScopeHandle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
        <Parameter Name="bookmarkScopeHandle" Type="System.Activities.BookmarkScopeHandle" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="128df-105">O ambiente no qual o identificador é criado.</span><span class="sxs-lookup"><span data-stu-id="128df-105">The environment in which the handle is created.</span></span></param>
        <param name="bookmarkScopeHandle"><span data-ttu-id="128df-106">O token usado para identificar e acessar um grupo de indicadores que operam sob o mesmo protocolo em uma operação de atividade de fluxo de trabalho.</span><span class="sxs-lookup"><span data-stu-id="128df-106">The token used to identify and access a group of bookmarks that operate under the same protocol in a workflow activity operation.</span></span></param>
        <summary><span data-ttu-id="128df-107">Adiciona o identificador de escopo de indicador especificado à <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de objetos <see cref="T:System.Activities.BookmarkScopeHandle" /> usando o contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="128df-107">Adds the specified bookmark scope handle to the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Activities.BookmarkScopeHandle" /> objects using the specified context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="128df-108">Se esse método é chamado depois que um bookmark foi criado sob esse escopo exclusivo, um <xref:System.InvalidOperationException> será lançada.</span><span class="sxs-lookup"><span data-stu-id="128df-108">If this method is called after a bookmark has been created under this exclusive scope, a <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredBookmarkScopes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.BookmarkScopeHandle&gt; RegisteredBookmarkScopes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.BookmarkScopeHandle&gt; RegisteredBookmarkScopes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.ExclusiveHandle.RegisteredBookmarkScopes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredBookmarkScopes As ReadOnlyCollection(Of BookmarkScopeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::BookmarkScopeHandle ^&gt; ^ RegisteredBookmarkScopes { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::BookmarkScopeHandle ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.BookmarkScopeHandle&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="128df-109">Obtém uma <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> nova ou existente de objetos <see cref="T:System.Activities.BookmarkScopeHandle" />.</span><span class="sxs-lookup"><span data-stu-id="128df-109">Gets a new or existing <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Activities.BookmarkScopeHandle" /> objects.</span></span></summary>
        <value><span data-ttu-id="128df-110">Uma coleção somente leitura de identificadores de escopo de indicador.</span><span class="sxs-lookup"><span data-stu-id="128df-110">A read-only collection of bookmark scope handles.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reinitialize">
      <MemberSignature Language="C#" Value="public void Reinitialize (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reinitialize(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExclusiveHandle.Reinitialize(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reinitialize (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reinitialize(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="128df-111">O ambiente no qual o identificador é criado.</span><span class="sxs-lookup"><span data-stu-id="128df-111">The environment in which the handle is created.</span></span></param>
        <summary><span data-ttu-id="128df-112">Define os identificadores de escopo do indicador registrado para o padrão.</span><span class="sxs-lookup"><span data-stu-id="128df-112">Sets the registered bookmark scope handles back to the defaults.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="128df-113">Se esse método é chamado quando existem indicadores registrados com o identificador exclusivo, um <xref:System.InvalidOperationException> será lançada.</span><span class="sxs-lookup"><span data-stu-id="128df-113">If this method is called when there are bookmarks registered with the exclusive handle, a <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>