<Type Name="NativeActivityMetadata" FullName="System.Activities.NativeActivityMetadata">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fc7c5629148c5d52574de9adc6ba5ff7e1d4967" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57924129" /></Metadata><TypeSignature Language="C#" Value="public struct NativeActivityMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit NativeActivityMetadata extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Activities.NativeActivityMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Structure NativeActivityMetadata" />
  <TypeSignature Language="C++ CLI" Value="public value class NativeActivityMetadata" />
  <TypeSignature Language="F#" Value="type NativeActivityMetadata = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="68b3e-101">Representa o conjunto de argumentos, atividades filhas, variáveis e representantes que uma <see cref="T:System.Activities.NativeActivity" /> configurada apresenta ao ambiente de execução.</span><span class="sxs-lookup"><span data-stu-id="68b3e-101">Represents the set of arguments, child activities, variables, and delegates that a configured <see cref="T:System.Activities.NativeActivity" /> introduces to the execution environment.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (System.Activities.RuntimeArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Activities.RuntimeArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(System::Activities::RuntimeArgument ^ argument);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : System.Activities.RuntimeArgument -&gt; unit" Usage="nativeActivityMetadata.AddArgument argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Activities.RuntimeArgument" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="68b3e-102">O argumento a ser adicionado à coleção.</span><span class="sxs-lookup"><span data-stu-id="68b3e-102">The argument to add to the collection.</span></span></param>
        <summary><span data-ttu-id="68b3e-103">Adiciona um argumento à coleção de argumentos de uma atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-103">Adds an argument to the collection of arguments of an activity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddChild">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68b3e-104">Adiciona a atividade especificada à lista de metadados de atividades filho.</span><span class="sxs-lookup"><span data-stu-id="68b3e-104">Adds the specified activity to the metadata's list of child activities.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Activities.Activity child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Activities.Activity child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Activities::Activity ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Activities.Activity -&gt; unit" Usage="nativeActivityMetadata.AddChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="68b3e-105">A atividade a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="68b3e-105">The activity to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-106">Adiciona a atividade especificada à lista de metadados de atividades filho.</span><span class="sxs-lookup"><span data-stu-id="68b3e-106">Adds the specified activity to the metadata's list of child activities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-107">Uma atividade adicionada usando <xref:System.Activities.NativeActivityMetadata.AddChild%2A> é uma atividade filho que a atividade pai pode agendar diretamente.</span><span class="sxs-lookup"><span data-stu-id="68b3e-107">An activity added using <xref:System.Activities.NativeActivityMetadata.AddChild%2A> is a child activity that the parent activity can schedule directly.</span></span> <span data-ttu-id="68b3e-108">Essas atividades devem ser fornecidas pelo consumidor da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-108">These activities are to be provided by the consumer of the activity.</span></span> <span data-ttu-id="68b3e-109">Um exemplo disso é o <xref:System.Activities.Statements.Sequence.Activities%2A> coleção de um <xref:System.Activities.Statements.Sequence> atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-109">An example of this is the <xref:System.Activities.Statements.Sequence.Activities%2A> collection of a <xref:System.Activities.Statements.Sequence> activity.</span></span> <span data-ttu-id="68b3e-110">Essas atividades (e todas as atividades elas adicionarem usando <xref:System.Activities.NativeActivityMetadata.AddChild%2A> ou <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A>) têm acesso a variáveis adicionados por meio de <xref:System.Activities.NativeActivityMetadata.AddVariable%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b3e-110">These activities (and any activities they add using <xref:System.Activities.NativeActivityMetadata.AddChild%2A> or <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A>) have access to variables added through <xref:System.Activities.NativeActivityMetadata.AddVariable%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Activities.Activity child, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Activities.Activity child, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As Activity, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Activities::Activity ^ child, System::Object ^ origin);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Activities.Activity * obj -&gt; unit" Usage="nativeActivityMetadata.AddChild (child, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="origin" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="68b3e-111">A atividade a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="68b3e-111">The activity to add.</span></span></param>
        <param name="origin"><span data-ttu-id="68b3e-112">A origem da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-112">The origin of the activity.</span></span></param>
        <summary><span data-ttu-id="68b3e-113">Adiciona a atividade especificada à lista de metadados de atividades filho.</span><span class="sxs-lookup"><span data-stu-id="68b3e-113">Adds the specified activity to the metadata's list of child activities.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDefaultExtensionProvider&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AddDefaultExtensionProvider&lt;T&gt; (Func&lt;T&gt; extensionProvider) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDefaultExtensionProvider&lt;class T&gt;(class System.Func`1&lt;!!T&gt; extensionProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDefaultExtensionProvider(Of T As Class) (extensionProvider As Func(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class void AddDefaultExtensionProvider(Func&lt;T&gt; ^ extensionProvider);" />
      <MemberSignature Language="F#" Value="member this.AddDefaultExtensionProvider : Func&lt;'T (requires 'T : null)&gt; -&gt; unit (requires 'T : null)" Usage="nativeActivityMetadata.AddDefaultExtensionProvider extensionProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="extensionProvider" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="68b3e-114">O tipo de provedor de extensão.</span><span class="sxs-lookup"><span data-stu-id="68b3e-114">The type of the extension provider.</span></span></typeparam>
        <param name="extensionProvider"><span data-ttu-id="68b3e-115">A função que retorna a extensão.</span><span class="sxs-lookup"><span data-stu-id="68b3e-115">The function that returns the extension.</span></span></param>
        <summary><span data-ttu-id="68b3e-116">Adiciona o provedor de extensão especificado à coleção de provedores de extensão padrão da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-116">Adds the specified extension provider to the collection of default extension providers for the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-117">Se o host não fornece uma extensão do tipo `T`, em seguida, esse provedor de extensão é avaliada para fornecer um.</span><span class="sxs-lookup"><span data-stu-id="68b3e-117">If the host does not provide an extension of type `T`, then this extension provider is evaluated to provide one.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddDelegate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68b3e-118">Adiciona o representante especificado à lista de metadados de representantes.</span><span class="sxs-lookup"><span data-stu-id="68b3e-118">Adds the specified delegate to the metadata's list of delegates.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddDelegate">
      <MemberSignature Language="C#" Value="public void AddDelegate (System.Activities.ActivityDelegate activityDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDelegate(class System.Activities.ActivityDelegate activityDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDelegate(System::Activities::ActivityDelegate ^ activityDelegate);" />
      <MemberSignature Language="F#" Value="member this.AddDelegate : System.Activities.ActivityDelegate -&gt; unit" Usage="nativeActivityMetadata.AddDelegate activityDelegate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDelegate" Type="System.Activities.ActivityDelegate" />
      </Parameters>
      <Docs>
        <param name="activityDelegate"><span data-ttu-id="68b3e-119">O representante a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-119">The delegate to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-120">Adiciona o representante especificado à lista de metadados de representantes.</span><span class="sxs-lookup"><span data-stu-id="68b3e-120">Adds the specified delegate to the metadata's list of delegates.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDelegate">
      <MemberSignature Language="C#" Value="public void AddDelegate (System.Activities.ActivityDelegate activityDelegate, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDelegate(class System.Activities.ActivityDelegate activityDelegate, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDelegate(System::Activities::ActivityDelegate ^ activityDelegate, System::Object ^ origin);" />
      <MemberSignature Language="F#" Value="member this.AddDelegate : System.Activities.ActivityDelegate * obj -&gt; unit" Usage="nativeActivityMetadata.AddDelegate (activityDelegate, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDelegate" Type="System.Activities.ActivityDelegate" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="origin" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="activityDelegate"><span data-ttu-id="68b3e-121">O representante a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-121">The delegate to add.</span></span></param>
        <param name="origin"><span data-ttu-id="68b3e-122">A origem do representante.</span><span class="sxs-lookup"><span data-stu-id="68b3e-122">The origin of the delegate.</span></span></param>
        <summary><span data-ttu-id="68b3e-123">Adiciona o representante especificado à lista de metadados de representantes.</span><span class="sxs-lookup"><span data-stu-id="68b3e-123">Adds the specified delegate to the metadata's list of delegates.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImplementationChild">
      <MemberSignature Language="C#" Value="public void AddImplementationChild (System.Activities.Activity implementationChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImplementationChild(class System.Activities.Activity implementationChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImplementationChild(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImplementationChild (implementationChild As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImplementationChild(System::Activities::Activity ^ implementationChild);" />
      <MemberSignature Language="F#" Value="member this.AddImplementationChild : System.Activities.Activity -&gt; unit" Usage="nativeActivityMetadata.AddImplementationChild implementationChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationChild" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="implementationChild"><span data-ttu-id="68b3e-124">A atividade a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="68b3e-124">The activity to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-125">Adiciona a atividade especificada à lista de metadados de atividades de implementação.</span><span class="sxs-lookup"><span data-stu-id="68b3e-125">Adds the specified activity to the metadata's list of implementation activities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-126">Uma atividade adicionada usando <xref:System.Activities.NativeActivityMetadata.AddImplementationChild%2A> é uma atividade filho que a atividade pai pode agendar diretamente.</span><span class="sxs-lookup"><span data-stu-id="68b3e-126">An activity added using <xref:System.Activities.NativeActivityMetadata.AddImplementationChild%2A> is a child activity that the parent activity can schedule directly.</span></span>  <span data-ttu-id="68b3e-127">Essas atividades são os detalhes de implementação da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-127">These activities are implementation details of the activity.</span></span> <span data-ttu-id="68b3e-128">Essas atividades (e todas as atividades elas adicionarem usando <xref:System.Activities.NativeActivityMetadata.AddChild%2A> ou <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A>) tem acesso para esta atividade argumentos, bem como variáveis adicionadas por meio de <xref:System.Activities.NativeActivityMetadata.AddImplementationVariable%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b3e-128">These activities (and any activities they add using <xref:System.Activities.NativeActivityMetadata.AddChild%2A> or <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A>) have access to this activity's arguments as well as variables added through <xref:System.Activities.NativeActivityMetadata.AddImplementationVariable%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImplementationDelegate">
      <MemberSignature Language="C#" Value="public void AddImplementationDelegate (System.Activities.ActivityDelegate implementationDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImplementationDelegate(class System.Activities.ActivityDelegate implementationDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImplementationDelegate(System.Activities.ActivityDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImplementationDelegate (implementationDelegate As ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImplementationDelegate(System::Activities::ActivityDelegate ^ implementationDelegate);" />
      <MemberSignature Language="F#" Value="member this.AddImplementationDelegate : System.Activities.ActivityDelegate -&gt; unit" Usage="nativeActivityMetadata.AddImplementationDelegate implementationDelegate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationDelegate" Type="System.Activities.ActivityDelegate" />
      </Parameters>
      <Docs>
        <param name="implementationDelegate"><span data-ttu-id="68b3e-129">O representante a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-129">The delegate to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-130">Adiciona o representante especificado à lista de metadados de representantes de implementação.</span><span class="sxs-lookup"><span data-stu-id="68b3e-130">Adds the specified delegate to the metadata's list of implementation delegates.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImplementationVariable">
      <MemberSignature Language="C#" Value="public void AddImplementationVariable (System.Activities.Variable implementationVariable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImplementationVariable(class System.Activities.Variable implementationVariable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImplementationVariable(System.Activities.Variable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImplementationVariable (implementationVariable As Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImplementationVariable(System::Activities::Variable ^ implementationVariable);" />
      <MemberSignature Language="F#" Value="member this.AddImplementationVariable : System.Activities.Variable -&gt; unit" Usage="nativeActivityMetadata.AddImplementationVariable implementationVariable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationVariable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="implementationVariable"><span data-ttu-id="68b3e-131">A variável a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="68b3e-131">The variable to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-132">Adiciona a variável especificada à coleção de metadados de variáveis de implementação.</span><span class="sxs-lookup"><span data-stu-id="68b3e-132">Adds the specified variable to the metadata's collection of implementation variables.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddImportedChild">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68b3e-133">Adiciona a atividade especificada à lista de metadados de atividades filho importadas.</span><span class="sxs-lookup"><span data-stu-id="68b3e-133">Adds the specified activity to the metadata's list of imported child activities.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddImportedChild">
      <MemberSignature Language="C#" Value="public void AddImportedChild (System.Activities.Activity importedChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedChild(class System.Activities.Activity importedChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedChild (importedChild As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedChild(System::Activities::Activity ^ importedChild);" />
      <MemberSignature Language="F#" Value="member this.AddImportedChild : System.Activities.Activity -&gt; unit" Usage="nativeActivityMetadata.AddImportedChild importedChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChild" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="importedChild"><span data-ttu-id="68b3e-134">A atividade a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="68b3e-134">The activity to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-135">Adiciona a atividade especificada à lista de metadados de atividades filho importadas.</span><span class="sxs-lookup"><span data-stu-id="68b3e-135">Adds the specified activity to the metadata's list of imported child activities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-136">Uma atividade filho importado é uma atividade filho que a atividade pai não agenda diretamente.</span><span class="sxs-lookup"><span data-stu-id="68b3e-136">An imported child activity is a child activity that the parent activity does not schedule directly.</span></span> <span data-ttu-id="68b3e-137">Em vez disso, em seguida, pai usa essa atividade para configurar alguma outra atividade filho.</span><span class="sxs-lookup"><span data-stu-id="68b3e-137">Rather, then parent uses this activity to configure some other child activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImportedChild">
      <MemberSignature Language="C#" Value="public void AddImportedChild (System.Activities.Activity importedChild, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedChild(class System.Activities.Activity importedChild, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedChild (importedChild As Activity, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedChild(System::Activities::Activity ^ importedChild, System::Object ^ origin);" />
      <MemberSignature Language="F#" Value="member this.AddImportedChild : System.Activities.Activity * obj -&gt; unit" Usage="nativeActivityMetadata.AddImportedChild (importedChild, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChild" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="origin" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="importedChild"><span data-ttu-id="68b3e-138">A atividade a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="68b3e-138">The activity to add.</span></span></param>
        <param name="origin"><span data-ttu-id="68b3e-139">A origem da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-139">The origin of the activity.</span></span></param>
        <summary><span data-ttu-id="68b3e-140">Adiciona a atividade especificada à lista de metadados de atividades filho importadas.</span><span class="sxs-lookup"><span data-stu-id="68b3e-140">Adds the specified activity to the metadata's list of imported child activities.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddImportedDelegate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68b3e-141">Adiciona o representante especificado à lista de metadados de representantes importados.</span><span class="sxs-lookup"><span data-stu-id="68b3e-141">Adds the specified delegate to the metadata's list of imported delegates.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddImportedDelegate">
      <MemberSignature Language="C#" Value="public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedDelegate(class System.Activities.ActivityDelegate importedDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedDelegate (importedDelegate As ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedDelegate(System::Activities::ActivityDelegate ^ importedDelegate);" />
      <MemberSignature Language="F#" Value="member this.AddImportedDelegate : System.Activities.ActivityDelegate -&gt; unit" Usage="nativeActivityMetadata.AddImportedDelegate importedDelegate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegate" Type="System.Activities.ActivityDelegate" />
      </Parameters>
      <Docs>
        <param name="importedDelegate"><span data-ttu-id="68b3e-142">O representante a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-142">The delegate to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-143">Adiciona o representante especificado à lista de metadados de representantes importados.</span><span class="sxs-lookup"><span data-stu-id="68b3e-143">Adds the specified delegate to the metadata's list of imported delegates.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImportedDelegate">
      <MemberSignature Language="C#" Value="public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedDelegate(class System.Activities.ActivityDelegate importedDelegate, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedDelegate (importedDelegate As ActivityDelegate, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedDelegate(System::Activities::ActivityDelegate ^ importedDelegate, System::Object ^ origin);" />
      <MemberSignature Language="F#" Value="member this.AddImportedDelegate : System.Activities.ActivityDelegate * obj -&gt; unit" Usage="nativeActivityMetadata.AddImportedDelegate (importedDelegate, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegate" Type="System.Activities.ActivityDelegate" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="origin" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="importedDelegate"><span data-ttu-id="68b3e-144">O representante a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-144">The delegate to add.</span></span></param>
        <param name="origin"><span data-ttu-id="68b3e-145">A origem do representante.</span><span class="sxs-lookup"><span data-stu-id="68b3e-145">The origin of the delegate.</span></span></param>
        <summary><span data-ttu-id="68b3e-146">Adiciona o representante especificado à lista de metadados de representantes importados.</span><span class="sxs-lookup"><span data-stu-id="68b3e-146">Adds the specified delegate to the metadata's list of imported delegates.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddValidationError">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68b3e-147">Adiciona um erro de validação à coleção de metadados de erros de validação.</span><span class="sxs-lookup"><span data-stu-id="68b3e-147">Adds a validation error to the metadata' collection of validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="68b3e-148">Para obter mais informações, consulte [Imperative Code-Based validação](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span><span class="sxs-lookup"><span data-stu-id="68b3e-148">For more information, see [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddValidationError">
      <MemberSignature Language="C#" Value="public void AddValidationError (System.Activities.Validation.ValidationError validationError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidationError(class System.Activities.Validation.ValidationError validationError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidationError(System::Activities::Validation::ValidationError ^ validationError);" />
      <MemberSignature Language="F#" Value="member this.AddValidationError : System.Activities.Validation.ValidationError -&gt; unit" Usage="nativeActivityMetadata.AddValidationError validationError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationError" Type="System.Activities.Validation.ValidationError" />
      </Parameters>
      <Docs>
        <param name="validationError"><span data-ttu-id="68b3e-149">O erro de validação a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-149">The validation error to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-150">Adiciona o erro de validação especificado à coleção de metadados de erros de validação.</span><span class="sxs-lookup"><span data-stu-id="68b3e-150">Adds the specified validation error to the metadata's collection of validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="68b3e-151">Para obter mais informações, consulte [Imperative Code-Based validação](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span><span class="sxs-lookup"><span data-stu-id="68b3e-151">For more information, see [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddValidationError">
      <MemberSignature Language="C#" Value="public void AddValidationError (string validationErrorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidationError(string validationErrorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddValidationError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValidationError (validationErrorMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidationError(System::String ^ validationErrorMessage);" />
      <MemberSignature Language="F#" Value="member this.AddValidationError : string -&gt; unit" Usage="nativeActivityMetadata.AddValidationError validationErrorMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationErrorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validationErrorMessage"><span data-ttu-id="68b3e-152">Uma mensagem que descreve o erro de validação.</span><span class="sxs-lookup"><span data-stu-id="68b3e-152">A message that describes the validation error.</span></span></param>
        <summary><span data-ttu-id="68b3e-153">Adiciona um erro de validação à coleção de metadados de erros de validação usando a descrição especificada.</span><span class="sxs-lookup"><span data-stu-id="68b3e-153">Adds a validation error to the metadata's collection of validation errors using the specified description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="68b3e-154">Para obter mais informações, consulte [Imperative Code-Based validação](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span><span class="sxs-lookup"><span data-stu-id="68b3e-154">For more information, see [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddVariable">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68b3e-155">Adiciona a variável especificada à coleção de metadados de variáveis.</span><span class="sxs-lookup"><span data-stu-id="68b3e-155">Adds the specified variable to the metadata's collection of variables.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddVariable">
      <MemberSignature Language="C#" Value="public void AddVariable (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddVariable(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVariable(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="member this.AddVariable : System.Activities.Variable -&gt; unit" Usage="nativeActivityMetadata.AddVariable variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="68b3e-156">A variável a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="68b3e-156">The variable to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-157">Adiciona a variável especificada à coleção de metadados de variáveis.</span><span class="sxs-lookup"><span data-stu-id="68b3e-157">Adds the specified variable to the metadata's collection of variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-158">Variáveis adicionadas usando esse método são consideradas parte da superfície de publicamente configuráveis da atividade, ou seja, eles devem ser fornecidas pelo consumidor da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-158">Variables added using this method are considered part of the activity's publicly configurable surface, that is, they are to be provided by the consumer of the activity.</span></span> <span data-ttu-id="68b3e-159">Implementação de uma atividade não pode acessar variáveis adicionadas usando esse método.</span><span class="sxs-lookup"><span data-stu-id="68b3e-159">An activity's implementation cannot access variables added using this method.</span></span> <span data-ttu-id="68b3e-160">Adicionado por meio de atividades <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A> ou <xref:System.Activities.NativeActivityMetadata.AddChild%2A> (e qualquer uma de suas atividades filho de não-implementação) pode acessar variáveis adicionadas usando esse método.</span><span class="sxs-lookup"><span data-stu-id="68b3e-160">Activities added through <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A> or <xref:System.Activities.NativeActivityMetadata.AddChild%2A> (and any of their non-implementation child activities) can access variables added using this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVariable">
      <MemberSignature Language="C#" Value="public void AddVariable (System.Activities.Variable variable, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddVariable(class System.Activities.Variable variable, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVariable(System::Activities::Variable ^ variable, System::Object ^ origin);" />
      <MemberSignature Language="F#" Value="member this.AddVariable : System.Activities.Variable * obj -&gt; unit" Usage="nativeActivityMetadata.AddVariable (variable, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="origin" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="68b3e-161">A variável a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="68b3e-161">The variable to add.</span></span></param>
        <param name="origin"><span data-ttu-id="68b3e-162">A origem da variável.</span><span class="sxs-lookup"><span data-stu-id="68b3e-162">The origin of the variable.</span></span></param>
        <summary><span data-ttu-id="68b3e-163">Adiciona a variável especificada à coleção de metadados de variáveis.</span><span class="sxs-lookup"><span data-stu-id="68b3e-163">Adds the specified variable to the metadata's collection of variables.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind (System.Activities.Argument binding, System.Activities.RuntimeArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind(class System.Activities.Argument binding, class System.Activities.RuntimeArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Bind(System::Activities::Argument ^ binding, System::Activities::RuntimeArgument ^ argument);" />
      <MemberSignature Language="F#" Value="member this.Bind : System.Activities.Argument * System.Activities.RuntimeArgument -&gt; unit" Usage="nativeActivityMetadata.Bind (binding, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Activities.Argument" />
        <Parameter Name="argument" Type="System.Activities.RuntimeArgument" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="68b3e-164">O <see cref="T:System.Activities.Argument" /> a ser associado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-164">The <see cref="T:System.Activities.Argument" /> to bind.</span></span></param>
        <param name="argument"><span data-ttu-id="68b3e-165">O <see cref="T:System.Activities.RuntimeArgument" /> a ser associado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-165">The <see cref="T:System.Activities.RuntimeArgument" /> to bind.</span></span></param>
        <summary><span data-ttu-id="68b3e-166">Associa o <see cref="T:System.Activities.Argument" /> especificado ao <see cref="T:System.Activities.RuntimeArgument" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-166">Binds the specified <see cref="T:System.Activities.Argument" /> to the specified <see cref="T:System.Activities.RuntimeArgument" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment">
      <MemberSignature Language="C#" Value="public System.Activities.LocationReferenceEnvironment Environment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.LocationReferenceEnvironment Environment" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivityMetadata.Environment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As LocationReferenceEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::LocationReferenceEnvironment ^ Environment { System::Activities::LocationReferenceEnvironment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Environment : System.Activities.LocationReferenceEnvironment" Usage="System.Activities.NativeActivityMetadata.Environment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.LocationReferenceEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68b3e-167">Obtém o <see cref="T:System.Activities.LocationReferenceEnvironment" /> de argumentos, as variáveis, os argumentos de representante ou os símbolos da atividade introduzidos por um <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="68b3e-167">Gets the activity's <see cref="T:System.Activities.LocationReferenceEnvironment" /> of arguments, variables, delegate arguments, or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></summary>
        <value><span data-ttu-id="68b3e-168">Ambiente de referência de local da atividade de argumentos, variáveis, argumentos de representante ou símbolos introduzidos por um <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="68b3e-168">The activity's location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="nativeActivityMetadata.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="68b3e-169">O objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-169">The object to compare.</span></span></param>
        <summary><span data-ttu-id="68b3e-170">Determina se o objeto especificado é igual a esta instância de metadados.</span><span class="sxs-lookup"><span data-stu-id="68b3e-170">Determines whether the specified object is equal to this metadata instance.</span></span></summary>
        <returns><span data-ttu-id="68b3e-171"><see langword="true" /> se o objeto especificado for igual a esta instância de metadados, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68b3e-171"><see langword="true" /> if the specified object is equal to this metadata instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgumentsWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt; GetArgumentsWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.RuntimeArgument&gt; GetArgumentsWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetArgumentsWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgumentsWithReflection () As Collection(Of RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::RuntimeArgument ^&gt; ^ GetArgumentsWithReflection();" />
      <MemberSignature Language="F#" Value="member this.GetArgumentsWithReflection : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt;" Usage="nativeActivityMetadata.GetArgumentsWithReflection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68b3e-172">Retorna uma coleção de argumentos obtidos por meio de reflexão.</span><span class="sxs-lookup"><span data-stu-id="68b3e-172">Returns a collection of arguments obtained by using reflection.</span></span></summary>
        <returns><span data-ttu-id="68b3e-173">Uma coleção de argumentos.</span><span class="sxs-lookup"><span data-stu-id="68b3e-173">A collection of arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-174">Esse método usa uma atividade <xref:System.ComponentModel.TypeDescriptor> para examinar todas as propriedades públicas do tipo <xref:System.Activities.Argument> e os retorna em uma coleção.</span><span class="sxs-lookup"><span data-stu-id="68b3e-174">This method uses an activity's <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; GetChildrenWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; GetChildrenWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetChildrenWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenWithReflection () As Collection(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ GetChildrenWithReflection();" />
      <MemberSignature Language="F#" Value="member this.GetChildrenWithReflection : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" Usage="nativeActivityMetadata.GetChildrenWithReflection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68b3e-175">Retorna uma coleção de atividades filhas usando a reflexão.</span><span class="sxs-lookup"><span data-stu-id="68b3e-175">Returns a collection of child activities using reflection.</span></span></summary>
        <returns><span data-ttu-id="68b3e-176">Uma coleção de atividades filhas.</span><span class="sxs-lookup"><span data-stu-id="68b3e-176">A collection of child activities.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-177">Esse método usa uma atividade <xref:System.ComponentModel.TypeDescriptor> para examinar todas as propriedades públicas do tipo <xref:System.Activities.Activity>, ou `IList<T>` ou `ICollection<T>` onde `T` deriva <xref:System.Activities.Activity>e os retorna em uma coleção.</span><span class="sxs-lookup"><span data-stu-id="68b3e-177">This method uses an activity's <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Activity>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Activity>, and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDelegatesWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; GetDelegatesWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; GetDelegatesWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetDelegatesWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDelegatesWithReflection () As Collection(Of ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ GetDelegatesWithReflection();" />
      <MemberSignature Language="F#" Value="member this.GetDelegatesWithReflection : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" Usage="nativeActivityMetadata.GetDelegatesWithReflection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68b3e-178">Retorna uma coleção de representantes usando reflexão.</span><span class="sxs-lookup"><span data-stu-id="68b3e-178">Returns a collection of delegates using reflection.</span></span></summary>
        <returns><span data-ttu-id="68b3e-179">Uma coleção de representantes.</span><span class="sxs-lookup"><span data-stu-id="68b3e-179">A collection of delegates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-180">Esse método usa uma atividade <xref:System.ComponentModel.TypeDescriptor> para examinar todas as propriedades públicas do tipo <xref:System.Activities.ActivityDelegate>, ou `IList<T>` ou `ICollection<T>` onde `T` deriva <xref:System.Activities.ActivityDelegate>e os retorna em uma coleção.</span><span class="sxs-lookup"><span data-stu-id="68b3e-180">This method uses an activity's <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.ActivityDelegate>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.ActivityDelegate>, and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="nativeActivityMetadata.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68b3e-181">Retorna um identificador exclusivo para esta instância de metadados.</span><span class="sxs-lookup"><span data-stu-id="68b3e-181">Returns a unique identifier for this metadata instance.</span></span></summary>
        <returns><span data-ttu-id="68b3e-182">Um inteiro que identifica exclusivamente esta instância de metadados.</span><span class="sxs-lookup"><span data-stu-id="68b3e-182">An integer that uniquely identifies this metadata instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariablesWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; GetVariablesWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; GetVariablesWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetVariablesWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVariablesWithReflection () As Collection(Of Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ GetVariablesWithReflection();" />
      <MemberSignature Language="F#" Value="member this.GetVariablesWithReflection : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;" Usage="nativeActivityMetadata.GetVariablesWithReflection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68b3e-183">Retorna uma coleção de variáveis usando reflexão.</span><span class="sxs-lookup"><span data-stu-id="68b3e-183">Returns a collection of variables using reflection.</span></span></summary>
        <returns><span data-ttu-id="68b3e-184">Uma coleção de variáveis.</span><span class="sxs-lookup"><span data-stu-id="68b3e-184">A collection of variables.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-185">Esse método usa uma atividade <xref:System.ComponentModel.TypeDescriptor> para examinar todas as propriedades públicas do tipo <xref:System.Activities.Variable>, ou `IList<T>` ou `ICollection<T>` onde `T` deriva <xref:System.Activities.Variable>e os retorna em uma coleção.</span><span class="sxs-lookup"><span data-stu-id="68b3e-185">This method uses an activity's <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Variable>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Variable>, and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasViolations">
      <MemberSignature Language="C#" Value="public bool HasViolations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasViolations" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivityMetadata.HasViolations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasViolations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasViolations { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasViolations : bool" Usage="System.Activities.NativeActivityMetadata.HasViolations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68b3e-186">Obtém um valor que indica se há erros de validação nos metadados.</span><span class="sxs-lookup"><span data-stu-id="68b3e-186">Gets a value that indicates whether there are any validation errors in the metadata.</span></span></summary>
        <value><span data-ttu-id="68b3e-187"><see langword="true" /> Se os erros de validação estiverem presentes; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68b3e-187"><see langword="true" /> if validation errors are present; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Activities.NativeActivityMetadata left, System.Activities.NativeActivityMetadata right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Activities.NativeActivityMetadata left, valuetype System.Activities.NativeActivityMetadata right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.op_Equality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As NativeActivityMetadata, right As NativeActivityMetadata) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Activities::NativeActivityMetadata left, System::Activities::NativeActivityMetadata right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Activities.NativeActivityMetadata * System.Activities.NativeActivityMetadata -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.NativeActivityMetadata" />
        <Parameter Name="right" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="68b3e-188">O primeiro item a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-188">The first item to compare.</span></span></param>
        <param name="right"><span data-ttu-id="68b3e-189">O segundo item a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-189">The second item to compare.</span></span></param>
        <summary><span data-ttu-id="68b3e-190">Retorna um valor que indica se as duas instâncias de metadados especificadas são iguais.</span><span class="sxs-lookup"><span data-stu-id="68b3e-190">Returns a value that indicates whether the two specified metadata instances are equal.</span></span></summary>
        <returns><span data-ttu-id="68b3e-191"><see langword="true" /> se os dois itens forem iguais, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68b3e-191"><see langword="true" /> if the two items are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Activities.NativeActivityMetadata left, System.Activities.NativeActivityMetadata right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Activities.NativeActivityMetadata left, valuetype System.Activities.NativeActivityMetadata right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.op_Inequality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As NativeActivityMetadata, right As NativeActivityMetadata) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Activities::NativeActivityMetadata left, System::Activities::NativeActivityMetadata right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Activities.NativeActivityMetadata * System.Activities.NativeActivityMetadata -&gt; bool" Usage="System.Activities.NativeActivityMetadata.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.NativeActivityMetadata" />
        <Parameter Name="right" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="68b3e-192">O primeiro item a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-192">The first item to compare.</span></span></param>
        <param name="right"><span data-ttu-id="68b3e-193">O segundo item a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="68b3e-193">The second item to compare.</span></span></param>
        <summary><span data-ttu-id="68b3e-194">Retorna um valor que indica se as duas instâncias de metadados especificadas não são iguais.</span><span class="sxs-lookup"><span data-stu-id="68b3e-194">Returns a value that indicates whether the two specified metadata instances are not equal.</span></span></summary>
        <returns><span data-ttu-id="68b3e-195"><see langword="true" /> se os dois itens não forem iguais, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68b3e-195"><see langword="true" /> if the two items are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireExtension">
      <MemberSignature Language="C#" Value="public void RequireExtension (Type extensionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireExtension(class System.Type extensionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.RequireExtension(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireExtension (extensionType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequireExtension(Type ^ extensionType);" />
      <MemberSignature Language="F#" Value="member this.RequireExtension : Type -&gt; unit" Usage="nativeActivityMetadata.RequireExtension extensionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extensionType"><span data-ttu-id="68b3e-196">O tipo da extensão.</span><span class="sxs-lookup"><span data-stu-id="68b3e-196">The type of the extension.</span></span></param>
        <summary><span data-ttu-id="68b3e-197">Especifica que a atividade requer uma extensão do tipo especificado em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="68b3e-197">Specifies that the activity requires an extension of the specified type at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-198">Se o host não fornece uma extensão do tipo especificado, a validação falhará.</span><span class="sxs-lookup"><span data-stu-id="68b3e-198">If the host fails to provide an extension of the specified type, validation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireExtension&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void RequireExtension&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireExtension&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.RequireExtension``1" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireExtension(Of T As Class) ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class void RequireExtension();" />
      <MemberSignature Language="F#" Value="member this.RequireExtension : unit -&gt; unit (requires 'T : null)" Usage="nativeActivityMetadata.RequireExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="68b3e-199">O tipo da extensão.</span><span class="sxs-lookup"><span data-stu-id="68b3e-199">The type of the extension.</span></span></typeparam>
        <summary><span data-ttu-id="68b3e-200">Especifica que a atividade requer uma extensão do tipo genérico especificado em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="68b3e-200">Specifies that the activity requires an extension of the specified generic type at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-201">Se o host não fornece uma extensão do tipo especificado, a validação falhará.</span><span class="sxs-lookup"><span data-stu-id="68b3e-201">If the host fails to provide an extension of the specified type, validation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetArgumentsCollection">
      <MemberSignature Language="C#" Value="public void SetArgumentsCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetArgumentsCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.RuntimeArgument&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetArgumentsCollection (arguments As Collection(Of RuntimeArgument))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetArgumentsCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::RuntimeArgument ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="member this.SetArgumentsCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt; -&gt; unit" Usage="nativeActivityMetadata.SetArgumentsCollection arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt;" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="68b3e-202">Os argumentos a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="68b3e-202">The arguments to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-203">Adiciona a coleção especificada de argumentos aos argumentos da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-203">Adds the specified collection of arguments to the activity's arguments.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildrenCollection">
      <MemberSignature Language="C#" Value="public void SetChildrenCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetChildrenCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetChildrenCollection (children As Collection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetChildrenCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="member this.SetChildrenCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; -&gt; unit" Usage="nativeActivityMetadata.SetChildrenCollection children" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="children" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="children"><span data-ttu-id="68b3e-204">As atividades a serem adicionadas.</span><span class="sxs-lookup"><span data-stu-id="68b3e-204">The activities to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-205">Adiciona a coleção especificada como atividades filhas da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-205">Adds the specified collection as child activities of the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-206">Isso é o equivalente a chamar <xref:System.Activities.NativeActivityMetadata.AddChild%2A> para cada item na coleção.</span><span class="sxs-lookup"><span data-stu-id="68b3e-206">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddChild%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDelegatesCollection">
      <MemberSignature Language="C#" Value="public void SetDelegatesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; delegates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDelegatesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; delegates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDelegatesCollection (delegates As Collection(Of ActivityDelegate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDelegatesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ delegates);" />
      <MemberSignature Language="F#" Value="member this.SetDelegatesCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; -&gt; unit" Usage="nativeActivityMetadata.SetDelegatesCollection delegates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegates" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" />
      </Parameters>
      <Docs>
        <param name="delegates"><span data-ttu-id="68b3e-207">Os representantes a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="68b3e-207">The delegates to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-208">Adiciona a coleção especificada como representantes da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-208">Adds the specified collection as delegates of the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-209">Isso é o equivalente a chamar <xref:System.Activities.NativeActivityMetadata.AddDelegate%2A> para cada item na coleção.</span><span class="sxs-lookup"><span data-stu-id="68b3e-209">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddDelegate%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImplementationChildrenCollection">
      <MemberSignature Language="C#" Value="public void SetImplementationChildrenCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; implementationChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImplementationChildrenCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; implementationChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImplementationChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImplementationChildrenCollection (implementationChildren As Collection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImplementationChildrenCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ implementationChildren);" />
      <MemberSignature Language="F#" Value="member this.SetImplementationChildrenCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; -&gt; unit" Usage="nativeActivityMetadata.SetImplementationChildrenCollection implementationChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationChildren" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="implementationChildren"><span data-ttu-id="68b3e-210">As atividades a serem adicionadas.</span><span class="sxs-lookup"><span data-stu-id="68b3e-210">The activities to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-211">Adiciona a coleção especificada como atividades filhas de implementação da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-211">Adds the specified collection as implementation child activities of the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-212">Isso é o equivalente a chamar <xref:System.Activities.NativeActivityMetadata.AddImplementationChild%2A> para cada item na coleção.</span><span class="sxs-lookup"><span data-stu-id="68b3e-212">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddImplementationChild%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImplementationDelegatesCollection">
      <MemberSignature Language="C#" Value="public void SetImplementationDelegatesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; implementationDelegates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImplementationDelegatesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; implementationDelegates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImplementationDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImplementationDelegatesCollection (implementationDelegates As Collection(Of ActivityDelegate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImplementationDelegatesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ implementationDelegates);" />
      <MemberSignature Language="F#" Value="member this.SetImplementationDelegatesCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; -&gt; unit" Usage="nativeActivityMetadata.SetImplementationDelegatesCollection implementationDelegates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationDelegates" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" />
      </Parameters>
      <Docs>
        <param name="implementationDelegates"><span data-ttu-id="68b3e-213">Os representantes a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="68b3e-213">The delegates to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-214">Adiciona a coleção especificada como representantes de implementação da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-214">Adds the specified collection as implementation delegates of the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-215">Isso é o equivalente a chamar <xref:System.Activities.NativeActivityMetadata.AddImplementationDelegate%2A> para cada item na coleção.</span><span class="sxs-lookup"><span data-stu-id="68b3e-215">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddImplementationDelegate%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImplementationVariablesCollection">
      <MemberSignature Language="C#" Value="public void SetImplementationVariablesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; implementationVariables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImplementationVariablesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; implementationVariables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImplementationVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImplementationVariablesCollection (implementationVariables As Collection(Of Variable))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImplementationVariablesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ implementationVariables);" />
      <MemberSignature Language="F#" Value="member this.SetImplementationVariablesCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; -&gt; unit" Usage="nativeActivityMetadata.SetImplementationVariablesCollection implementationVariables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationVariables" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;" />
      </Parameters>
      <Docs>
        <param name="implementationVariables"><span data-ttu-id="68b3e-216">Os representantes a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="68b3e-216">The delegates to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-217">Adiciona a coleção especificada como variáveis de implementação da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-217">Adds the specified collection as implementation variables of the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-218">Isso é o equivalente a chamar <xref:System.Activities.NativeActivityMetadata.AddImplementationVariable%2A> para cada item na coleção.</span><span class="sxs-lookup"><span data-stu-id="68b3e-218">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddImplementationVariable%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImportedChildrenCollection">
      <MemberSignature Language="C#" Value="public void SetImportedChildrenCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; importedChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedChildrenCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; importedChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImportedChildrenCollection (importedChildren As Collection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImportedChildrenCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ importedChildren);" />
      <MemberSignature Language="F#" Value="member this.SetImportedChildrenCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; -&gt; unit" Usage="nativeActivityMetadata.SetImportedChildrenCollection importedChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChildren" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="importedChildren"><span data-ttu-id="68b3e-219">As atividades a serem adicionadas.</span><span class="sxs-lookup"><span data-stu-id="68b3e-219">The activities to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-220">Adiciona a coleção especificada como atividades filhas importadas da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-220">Adds the specified collection as imported child activities of the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-221">Isso é o equivalente a chamar <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A> para cada item na coleção.</span><span class="sxs-lookup"><span data-stu-id="68b3e-221">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImportedDelegatesCollection">
      <MemberSignature Language="C#" Value="public void SetImportedDelegatesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; importedDelegates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedDelegatesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; importedDelegates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImportedDelegatesCollection (importedDelegates As Collection(Of ActivityDelegate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImportedDelegatesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ importedDelegates);" />
      <MemberSignature Language="F#" Value="member this.SetImportedDelegatesCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; -&gt; unit" Usage="nativeActivityMetadata.SetImportedDelegatesCollection importedDelegates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegates" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" />
      </Parameters>
      <Docs>
        <param name="importedDelegates"><span data-ttu-id="68b3e-222">Os representantes a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="68b3e-222">The delegates to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-223">Adiciona a coleção especificada como representantes importados da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-223">Adds the specified collection as imported delegates of the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b3e-224">Isso é o equivalente a chamar <xref:System.Activities.NativeActivityMetadata.AddImportedDelegate%2A> para cada item na coleção.</span><span class="sxs-lookup"><span data-stu-id="68b3e-224">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddImportedDelegate%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValidationErrorsCollection">
      <MemberSignature Language="C#" Value="public void SetValidationErrorsCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.ValidationError&gt; validationErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValidationErrorsCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Validation.ValidationError&gt; validationErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValidationErrorsCollection (validationErrors As Collection(Of ValidationError))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValidationErrorsCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Validation::ValidationError ^&gt; ^ validationErrors);" />
      <MemberSignature Language="F#" Value="member this.SetValidationErrorsCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.ValidationError&gt; -&gt; unit" Usage="nativeActivityMetadata.SetValidationErrorsCollection validationErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationErrors" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.ValidationError&gt;" />
      </Parameters>
      <Docs>
        <param name="validationErrors"><span data-ttu-id="68b3e-225">Os erros de validação a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="68b3e-225">The validation errors to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-226">Adiciona a coleção especificada de erros de validação à coleção de metadados de erros de validação.</span><span class="sxs-lookup"><span data-stu-id="68b3e-226">Adds the specified collection of validation errors to the metadata's collection of validation errors.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVariablesCollection">
      <MemberSignature Language="C#" Value="public void SetVariablesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVariablesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVariablesCollection (variables As Collection(Of Variable))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVariablesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="member this.SetVariablesCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; -&gt; unit" Usage="nativeActivityMetadata.SetVariablesCollection variables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;" />
      </Parameters>
      <Docs>
        <param name="variables"><span data-ttu-id="68b3e-227">Variáveis a serem adicionadas.</span><span class="sxs-lookup"><span data-stu-id="68b3e-227">The variables to add.</span></span></param>
        <summary><span data-ttu-id="68b3e-228">Adiciona a coleção especificada de variáveis às variáveis da atividade.</span><span class="sxs-lookup"><span data-stu-id="68b3e-228">Adds the specified collection of variables to the activity's variables.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>