<Type Name="ComContractElement" FullName="System.ServiceModel.Configuration.ComContractElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="569f3a43fadcc1e94c68b10dd97724b219793f53" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39809579" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ComContractElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComContractElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.ComContractElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComContractElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComContractElement sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type ComContractElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0d140-101">Especifica um contrato de serviço de integração COM+.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d140-101">Specifies a COM+ integration service contract.</span>
      </span>
      <span data-ttu-id="0d140-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d140-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d140-103">Contratos de serviço de integração COM+ são atualmente restritos ao "http://tempuri.org" namespace e o nome do contrato é derivado da interface COM suporte.</span><span class="sxs-lookup"><span data-stu-id="0d140-103">COM+ integration service contracts are currently restricted to the "http://tempuri.org" namespace, and the contract name is derived from the supporting COM interface.</span></span> <span data-ttu-id="0d140-104">No entanto, você pode especificar alternativas usando o `comContracts` seção no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="0d140-104">You can, however, specify alternatives by using the `comContracts` section in the configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d140-105">Você pode usar a configuração a seguir para especificar o namespace, nome do contrato e tipos definidos pelo usuário a serem incluídos.</span><span class="sxs-lookup"><span data-stu-id="0d140-105">You can use the following configuration to specify the namespace, contract name, and user defined types to be included.</span></span> <span data-ttu-id="0d140-106">Você também pode especificar outras configurações para um contrato de serviço</span><span class="sxs-lookup"><span data-stu-id="0d140-106">You can also specify other settings for a service contract</span></span>  
  
 [!code-xml[S_UEComContractElement#100](~/samples/snippets/csharp/VS_Snippets_CFX/s_uecomcontractelement/common/app.config#100)]   
  
 <span data-ttu-id="0d140-107">Quando o serviço é inicializado, os namespaces especificados e os nomes de contrato são aplicados as descrições de serviço gerado.</span><span class="sxs-lookup"><span data-stu-id="0d140-107">When the service is initialized, the specified namespaces and contract names are applied to the generated service descriptions.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d140-108">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Configuration.ComContractElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComContractElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComContractElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ComContractElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComContractElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d140-109">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Configuration.ComContractElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComContractElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComContractElement (string contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ComContractElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComContractElement(System::String ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Configuration.ComContractElement : string -&gt; System.ServiceModel.Configuration.ComContractElement" Usage="new System.ServiceModel.Configuration.ComContractElement contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="0d140-110">Uma cadeia de caracteres que contém o tipo de contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-110">A string that contains the type of contract.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d140-111">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Configuration.ComContractElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-111">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComContractElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contract">
      <MemberSignature Language="C#" Value="public string Contract { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Contract" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.Contract" />
      <MemberSignature Language="VB.NET" Value="Public Property Contract As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Contract { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Contract : string with get, set" Usage="System.ServiceModel.Configuration.ComContractElement.Contract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("contract", Options=System.Configuration.ConfigurationPropertyOptions.IsKey | System.Configuration.ConfigurationPropertyOptions.IsRequired)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Configuration.ConfigurationProperty("contract", Options=System.Configuration.ConfigurationPropertyOptions.IsRequired | System.Configuration.ConfigurationPropertyOptions.IsKey)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d140-112">Obtém ou define o tipo de contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-112">Gets or sets the contract type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d140-113">O tipo de contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-113">The contract type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExposedMethods">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.ComMethodElementCollection ExposedMethods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.ComMethodElementCollection ExposedMethods" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExposedMethods As ComMethodElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::ComMethodElementCollection ^ ExposedMethods { System::ServiceModel::Configuration::ComMethodElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExposedMethods : System.ServiceModel.Configuration.ComMethodElementCollection" Usage="System.ServiceModel.Configuration.ComContractElement.ExposedMethods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("exposedMethods", Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.ComMethodElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d140-114">Obtém uma coleção de métodos COM+ que são expostos quando a interface em um componente COM+ é exposta como um serviço Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-114">Gets a collection of COM+ methods that are exposed when the interface on a COM+ component is exposed as a Web service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d140-115">A coleção de métodos COM+ que são expostos quando a interface em um componente COM+ é exposta como um serviço Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-115">The collection of COM+ methods that are exposed when the interface on a COM+ component is exposed as a Web service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d140-116">A COM+ integration ferramenta de configuração (ComSvcConfig.exe) pode ser usada para adicionar métodos específicos de uma interface COM apareçam no contrato de serviço gerado.</span><span class="sxs-lookup"><span data-stu-id="0d140-116">The COM+ integration configuration tool (ComSvcConfig.exe) can be used to add specific methods from a COM interface to appear on the generated service contract.</span></span>  
  
 <span data-ttu-id="0d140-117">Por exemplo, você pode usar o comando a seguir para adicionar os três métodos nomeados do `IFinances` interface COM no `ItemOrders.Financial` componente, o contrato de serviço gerado.</span><span class="sxs-lookup"><span data-stu-id="0d140-117">For example, you can use the following command to add the three named methods from the `IFinances` COM interface on the `ItemOrders.Financial` component, to the generated service contract.</span></span>  
  
```  
ComSvcConfig.exe /i /application:OnlineStore /contract:ItemOrders.Financial,IFinances.{TransferFunds,AddFunds,RemoveFunds} /hosting:complus  
```  
  
 <span data-ttu-id="0d140-118">Quando você executa a ferramenta ComSvcConfig.exe, em seguida, gera o seguinte contrato de serviço, listando os métodos mencionados anteriormente como `exposedMethod` elementos.</span><span class="sxs-lookup"><span data-stu-id="0d140-118">When you run the ComSvcConfig.exe tool, it then generates the following service contract listing the previously mentioned methods as `exposedMethod` elements.</span></span>  
  
 [!code-xml[S_UEComContractElement#101](~/samples/snippets/csharp/VS_Snippets_CFX/s_uecomcontractelement/common/app2.config#101)]   
  
 <span data-ttu-id="0d140-119">No momento da inicialização de serviço, o tempo de execução tenta gerar um contrato de serviço ao refletir sobre e adicionar somente os métodos incluídos na lista de `exposedMethod` elementos.</span><span class="sxs-lookup"><span data-stu-id="0d140-119">At service initialization time, the runtime attempts to generate a service contract by reflecting over and adding only the methods included in the list of `exposedMethod` elements.</span></span> <span data-ttu-id="0d140-120">Um rastreamento é produzido para cada método de interface que não está incluído no contrato de serviço.</span><span class="sxs-lookup"><span data-stu-id="0d140-120">A trace is produced for every interface method that is not included on the service contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.Configuration.ComContractElement.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.StringValidator(MinLength=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d140-121">Obtém ou define o nome do contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-121">Gets or sets the contract name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d140-122">O nome do contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-122">The contract name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.Configuration.ComContractElement.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("namespace", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.StringValidator(MinLength=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d140-123">Obtém ou define o namespace do contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-123">Gets or sets the contract namespace.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d140-124">O namespace de contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-124">The contract namespace.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistableTypes">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.ComPersistableTypeElementCollection PersistableTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.ComPersistableTypeElementCollection PersistableTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.PersistableTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistableTypes As ComPersistableTypeElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::ComPersistableTypeElementCollection ^ PersistableTypes { System::ServiceModel::Configuration::ComPersistableTypeElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PersistableTypes : System.ServiceModel.Configuration.ComPersistableTypeElementCollection" Usage="System.ServiceModel.Configuration.ComContractElement.PersistableTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("persistableTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.ComPersistableTypeElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d140-125">Obtém todos os tipos persistentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-125">Gets all the persistable types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d140-126">Os tipos persistentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-126">The persistable types.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.ServiceModel.Configuration.ComContractElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresSession">
      <MemberSignature Language="C#" Value="public bool RequiresSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresSession" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiresSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresSession { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequiresSession : bool with get, set" Usage="System.ServiceModel.Configuration.ComContractElement.RequiresSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("requiresSession", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d140-127">Obtém ou define um valor booliano que especifica se o contrato só pode ser usado em associações de sessão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-127">Gets or sets a Boolean value that specifies whether the contract can only be used on sessionful bindings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d140-128">
            <see langword="true" /> Se o contrato só pode ser usado em associações de sessão; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-128">
              <see langword="true" /> if the contract can only be used on sessionful bindings; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0d140-129">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-129">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d140-130">Quando o serviço é inicializado, o integration runtime garante que essa configuração é consistente com o tipo de associação a ser usada.</span><span class="sxs-lookup"><span data-stu-id="0d140-130">When the service is initialized, the integration runtime ensures that this setting is consistent with the type of binding to be used.</span></span> <span data-ttu-id="0d140-131">Uma exceção será gerada se um ou mais das associações para o contrato estão em conflito.</span><span class="sxs-lookup"><span data-stu-id="0d140-131">An exception is generated if one or more of the bindings for the contract are in conflict.</span></span> <span data-ttu-id="0d140-132">Se essa propriedade for `false`, um canal unidirecional está em uso e houver [parâmetros out], também será gerada uma exceção.</span><span class="sxs-lookup"><span data-stu-id="0d140-132">If this property is `false`, a one-way channel is in use and there are any [out] parameters, an exception is also generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserDefinedTypes">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.ComUdtElementCollection UserDefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.ComUdtElementCollection UserDefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserDefinedTypes As ComUdtElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::ComUdtElementCollection ^ UserDefinedTypes { System::ServiceModel::Configuration::ComUdtElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserDefinedTypes : System.ServiceModel.Configuration.ComUdtElementCollection" Usage="System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("userDefinedTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.ComUdtElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d140-133">Obtém uma coleção de UDTs (tipos definidos pelo usuário) que deve ser incluída no contrato de serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-133">Gets a collection of User Defined Types (UDT) that is to be included in the service contract.</span>
          </span>
          <span data-ttu-id="0d140-134">Essa classe não pode ser herdada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-134">This class cannot be inherited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d140-135">A coleção de tipos de definido pelo usuário (UDT).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d140-135">The collection of User Defined Types (UDT).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d140-136">O tempo de execução de integração COM+ cria serviços inspecionando a biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="0d140-136">The COM+ integration runtime creates services by inspecting the type library.</span></span> <span data-ttu-id="0d140-137">Quando um componente COM+ contém métodos que passam uma VARIANTE, o sistema não pode determinar os tipos reais a serem passados antes do tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="0d140-137">When a COM+ component contains methods that pass a VARIANT, the system cannot determine the actual types to be passed prior to runtime.</span></span> <span data-ttu-id="0d140-138">Portanto, quando você tentar passar um usuário definido pelo tipo (UDT) dentro de uma VARIANTE, ele falhará porque não é um tipo conhecido para serialização.</span><span class="sxs-lookup"><span data-stu-id="0d140-138">Therefore, when you attempt to pass a User Defined Type (UDT) within a VARIANT, it fails because it is not a known type for serialization.</span></span>  
  
 <span data-ttu-id="0d140-139">Para contornar esse problema, você pode adicionar os UDTs ao arquivo de configuração para que eles possam ser incluídos como tipos conhecidos no contrato de serviço apropriado.</span><span class="sxs-lookup"><span data-stu-id="0d140-139">To circumvent this problem, you can add the UDTs to the configuration file so that they can be included as known types on the appropriate service contract.</span></span> <span data-ttu-id="0d140-140">Para fazer isso, você precisa que identificar exclusivamente o UDT e o contrato (s), ou seja, as interfaces COM original usam-o.</span><span class="sxs-lookup"><span data-stu-id="0d140-140">In order to do so, you have to uniquely identify the UDT and the contract(s), that is, the original COM interface(s) that uses it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d140-141">O exemplo a seguir demonstra como adicionar dois UDTs específicos para o <`userDefinedTypes`> seção do arquivo de configuração para essa finalidade.</span><span class="sxs-lookup"><span data-stu-id="0d140-141">The following example demonstrates adding two specific UDTs to the <`userDefinedTypes`> section of the configuration file for this purpose.</span></span>  
  
 [!code-xml[S_UEComContractElement#102](~/samples/snippets/csharp/VS_Snippets_CFX/s_uecomcontractelement/common/app3.config#102)]   
  
 <span data-ttu-id="0d140-142">Os atributos da <`userDefinedType`> elemento são definidos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="0d140-142">The attributes of the <`userDefinedType`> element are defined as follows:</span></span>  
  
-   <span data-ttu-id="0d140-143">`typeName`: Um atributo opcional que fornece o nome de tipo legível.</span><span class="sxs-lookup"><span data-stu-id="0d140-143">`typeName`: An optional attribute that provides the readable type name.</span></span> <span data-ttu-id="0d140-144">Isso não é usado pelo tempo de execução, mas ajuda a distinguir os tipos de um leitor.</span><span class="sxs-lookup"><span data-stu-id="0d140-144">This is not used by the runtime but helps a reader to distinguish the types.</span></span>  
  
-   <span data-ttu-id="0d140-145">`typeLibID`: Uma cadeia de caracteres GUID que especifica a biblioteca de tipos registrada que define o tipo.</span><span class="sxs-lookup"><span data-stu-id="0d140-145">`typeLibID`: A GUID string that specifies the registered type library that defines the type.</span></span>  
  
-   <span data-ttu-id="0d140-146">`typeLibVersion`: Uma cadeia de caracteres que especifica a versão da biblioteca de tipo que define o tipo.</span><span class="sxs-lookup"><span data-stu-id="0d140-146">`typeLibVersion`: A string that specifies the type library version that defines the type.</span></span>  
  
-   <span data-ttu-id="0d140-147">`typeDefID`: Uma cadeia de caracteres GUID que especifica o tipo UDT específico dentro da biblioteca de tipos registrada.</span><span class="sxs-lookup"><span data-stu-id="0d140-147">`typeDefID`: A GUID string that specifies the specific UDT type within the registered type library.</span></span>  
  
 <span data-ttu-id="0d140-148">Quando o serviço é inicializado, o integration runtime procura os tipos especificados e os adiciona à coleção de tipos conhecidos para os contratos especificados.</span><span class="sxs-lookup"><span data-stu-id="0d140-148">When the service is initialized, the integration runtime looks up the specified types and adds them to the known types collection for the specified contracts.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>