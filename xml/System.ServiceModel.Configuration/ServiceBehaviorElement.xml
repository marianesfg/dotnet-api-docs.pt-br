<Type Name="ServiceBehaviorElement" FullName="System.ServiceModel.Configuration.ServiceBehaviorElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a3e48e5b2393037678177183b34d7b5a2f3558b9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36619212" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceBehaviorElement : System.ServiceModel.Configuration.NamedServiceModelExtensionCollectionElement&lt;System.ServiceModel.Configuration.BehaviorExtensionElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceBehaviorElement extends System.ServiceModel.Configuration.NamedServiceModelExtensionCollectionElement`1&lt;class System.ServiceModel.Configuration.BehaviorExtensionElement&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.ServiceBehaviorElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceBehaviorElement&#xA;Inherits NamedServiceModelExtensionCollectionElement(Of BehaviorExtensionElement)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceBehaviorElement : System::ServiceModel::Configuration::NamedServiceModelExtensionCollectionElement&lt;System::ServiceModel::Configuration::BehaviorExtensionElement ^&gt;" />
  <TypeSignature Language="F#" Value="type ServiceBehaviorElement = class&#xA;    inherit NamedServiceModelExtensionCollectionElement&lt;BehaviorExtensionElement&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.NamedServiceModelExtensionCollectionElement&lt;System.ServiceModel.Configuration.BehaviorExtensionElement&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TServiceModelExtensionElement">System.ServiceModel.Configuration.BehaviorExtensionElement</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa um elemento de configuração que contém uma lista de comportamentos de serviço que são aplicados a todos os serviços WCF (Windows Communication Foundation) no computador.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Configuration.ServiceBehaviorElement" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBehaviorElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ServiceBehaviorElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceBehaviorElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Configuration.ServiceBehaviorElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBehaviorElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ServiceBehaviorElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceBehaviorElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Configuration.ServiceBehaviorElement : string -&gt; System.ServiceModel.Configuration.ServiceBehaviorElement" Usage="new System.ServiceModel.Configuration.ServiceBehaviorElement name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Um nome exclusivo do elemento de comportamento.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Configuration.ServiceBehaviorElement" /> com o nome especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override void Add (System.ServiceModel.Configuration.BehaviorExtensionElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Add(class System.ServiceModel.Configuration.BehaviorExtensionElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ServiceBehaviorElement.Add(System.ServiceModel.Configuration.BehaviorExtensionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Add (element As BehaviorExtensionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Add(System::ServiceModel::Configuration::BehaviorExtensionElement ^ element);" />
      <MemberSignature Language="F#" Value="override this.Add : System.ServiceModel.Configuration.BehaviorExtensionElement -&gt; unit" Usage="serviceBehaviorElement.Add element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.ServiceModel.Configuration.BehaviorExtensionElement" />
      </Parameters>
      <Docs>
        <param name="element">Um <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" /> a ser adicionado.</param>
        <summary>Adiciona um novo elemento de comportamento a esta seção.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">O tipo especificado por <paramref name="element" /> é inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanAdd">
      <MemberSignature Language="C#" Value="public override bool CanAdd (System.ServiceModel.Configuration.BehaviorExtensionElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanAdd(class System.ServiceModel.Configuration.BehaviorExtensionElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ServiceBehaviorElement.CanAdd(System.ServiceModel.Configuration.BehaviorExtensionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanAdd (element As BehaviorExtensionElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanAdd(System::ServiceModel::Configuration::BehaviorExtensionElement ^ element);" />
      <MemberSignature Language="F#" Value="override this.CanAdd : System.ServiceModel.Configuration.BehaviorExtensionElement -&gt; bool" Usage="serviceBehaviorElement.CanAdd element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.ServiceModel.Configuration.BehaviorExtensionElement" />
      </Parameters>
      <Docs>
        <param name="element">Um <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" /> a ser adicionado.</param>
        <summary>Adiciona um novo elemento de comportamento a esta seção e retorna um valor que indica se a operação é bem-sucedida.</summary>
        <returns>
          <see langword="true" /> se a operação for bem-sucedida; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">O tipo especificado por <paramref name="element" /> é inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeElement">
      <MemberSignature Language="C#" Value="protected override void DeserializeElement (System.Xml.XmlReader reader, bool serializeCollectionKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DeserializeElement(class System.Xml.XmlReader reader, bool serializeCollectionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ServiceBehaviorElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DeserializeElement (reader As XmlReader, serializeCollectionKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DeserializeElement(System::Xml::XmlReader ^ reader, bool serializeCollectionKey);" />
      <MemberSignature Language="F#" Value="override this.DeserializeElement : System.Xml.XmlReader * bool -&gt; unit" Usage="serviceBehaviorElement.DeserializeElement (reader, serializeCollectionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="serializeCollectionKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">Um <see cref="T:System.Xml.XmlReader" /> que lê do arquivo de configuração.</param>
        <param name="serializeCollectionKey">
          <see langword="true" /> para serializar apenas as propriedades de chave da coleção; caso contrário, <see langword="false" />.</param>
        <summary>Lê o XML do arquivo de configuração.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>