<Type Name="AlternationConverter" FullName="System.Windows.Controls.AlternationConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75e62b9546c79c899787e67328179785cebd00cb" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53224820" /></Metadata><TypeSignature Language="C#" Value="public class AlternationConverter : System.Windows.Data.IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AlternationConverter extends System.Object implements class System.Windows.Data.IValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.AlternationConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class AlternationConverter&#xA;Implements IValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class AlternationConverter : System::Windows::Data::IValueConverter" />
  <TypeSignature Language="F#" Value="type AlternationConverter = class&#xA;    interface IValueConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Data.IValueConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("Values")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Converte um inteiro de e para um objeto aplicando o inteiro como um índice para uma lista de objetos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o <xref:System.Windows.Controls.AlternationConverter> para associar uma propriedade a ser alternados de valores. Por exemplo, se você desejar itens um <xref:System.Windows.Controls.ListBox> para alternar planos de fundo azuis claras e azuis, você pode fazer o seguinte:  
  
-   Criar uma <xref:System.Windows.Controls.AlternationConverter> e adicione uma azul <xref:System.Windows.Media.SolidColorBrush> e um azul claro <xref:System.Windows.Media.SolidColorBrush> ao seu <xref:System.Windows.Controls.AlternationConverter.Values%2A> propriedade.  
  
-   Em um <xref:System.Windows.Style> para <xref:System.Windows.Controls.ListBoxItem>, associar a <xref:System.Windows.Controls.Control.Background%2A> propriedade <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> e atribuir o conversor que você criou para o <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=nameWithType> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir cria uma <xref:System.Windows.Controls.ListBox> e usa dois <xref:System.Windows.Controls.AlternationConverter> objetos a serem alternativo a <xref:System.Windows.Controls.Control.Background%2A> e <xref:System.Windows.Controls.Control.FontStyle%2A> dos itens.  
  
 [!code-xaml[AlternationIndexSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternationConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AlternationConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Controls.AlternationConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object o, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (o As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Convert(System::Object ^ o, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="alternationConverter.Convert (o, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="o">O inteiro a ser usado para localizar um objeto na propriedade <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</param>
        <param name="targetType">O tipo da propriedade de destino da associação.</param>
        <param name="parameter">O parâmetro de conversor a ser usado.</param>
        <param name="culture">A cultura a ser usada no conversor.</param>
        <summary>Converte um inteiro em um objeto na lista <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</summary>
        <returns>O objeto que está na posição do módulo <paramref name="o" /> do número de itens em <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object o, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (o As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertBack(System::Object ^ o, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="alternationConverter.ConvertBack (o, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="o">O objeto a ser encontrado na propriedade <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</param>
        <param name="targetType">O tipo da propriedade de destino da associação.</param>
        <param name="parameter">O parâmetro de conversor a ser usado.</param>
        <param name="culture">A cultura a ser usada no conversor.</param>
        <summary>Converte um objeto na lista <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> em um inteiro.</summary>
        <returns>O índice do <paramref name="o" />, se ele estiver em <see cref="P:System.Windows.Controls.AlternationConverter.Values" />, ou -1, se o não existir em <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.IList Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Values" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.AlternationConverter.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Values { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.IList" Usage="System.Windows.Controls.AlternationConverter.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma lista de objetos que o <see cref="T:System.Windows.Controls.AlternationConverter" /> retorna quando um inteiro é passado para o método <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />.</summary>
        <value>Uma lista de objetos que o <see cref="T:System.Windows.Controls.AlternationConverter" /> retorna quando um inteiro é passado para o <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> método.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você usa o <xref:System.Windows.Controls.AlternationConverter> para associar uma propriedade a ser alternados de valores, o <xref:System.Windows.Controls.AlternationConverter.Values%2A> propriedade contém os objetos que são atribuídos à propriedade.  Por exemplo, se você desejar itens uma <xref:System.Windows.Controls.ListBox> para alternar planos de fundo azuis claras e azuis, você adiciona uma azul <xref:System.Windows.Media.SolidColorBrush> e um azul claro <xref:System.Windows.Media.SolidColorBrush> para <xref:System.Windows.Controls.AlternationConverter.Values%2A>.  
  
   
  
## Examples  
 O exemplo a seguir cria uma <xref:System.Windows.Controls.ListBox> e usa dois <xref:System.Windows.Controls.AlternationConverter> objetos a serem alternativo a <xref:System.Windows.Controls.Control.Background%2A> e <xref:System.Windows.Controls.Control.FontStyle%2A> dos itens.  
  
 [!code-xaml[AlternationIndexSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>