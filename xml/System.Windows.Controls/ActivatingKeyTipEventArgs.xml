<Type Name="ActivatingKeyTipEventArgs" FullName="System.Windows.Controls.ActivatingKeyTipEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="767d9fd236c6a66c87f7dd93397debd7595316e3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30617550" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActivatingKeyTipEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActivatingKeyTipEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ActivatingKeyTipEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ActivatingKeyTipEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivatingKeyTipEventArgs : System::Windows::RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0c031-101">Fornece dados para o evento de <see cref="E:System.Windows.Controls.KeyTipService.ActivatingKeyTip" /> .</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c031-101">Provides data for the <see cref="E:System.Windows.Controls.KeyTipService.ActivatingKeyTip" /> event.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivatingKeyTipEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ActivatingKeyTipEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivatingKeyTipEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c031-102">Inicializa uma nova instância da classe <see cref="T:System.Windows.Controls.ActivatingKeyTipEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-102">Initializes a new instance of the <see cref="T:System.Windows.Controls.ActivatingKeyTipEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ActivatingKeyTipEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">
          <span data-ttu-id="0c031-103">O manipulador de eventos a ser invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-103">The event handler to invoke.</span>
          </span>
        </param>
        <param name="genericTarget">
          <span data-ttu-id="0c031-104">O destino no qual o manipulador é invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-104">The target on which the handler is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c031-105">Invoca o manipulador de eventos especificado no objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-105">Invokes the specified event handler on the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c031-106">Essa implementação converte o manipulador genérico para um <xref:System.Windows.Controls.ActivatingKeyTipEventHandler> de instância e invoca.</span><span class="sxs-lookup"><span data-stu-id="0c031-106">This implementation casts the generic handler to an <xref:System.Windows.Controls.ActivatingKeyTipEventHandler> instance and invokes it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyTipHorizontalOffset">
      <MemberSignature Language="C#" Value="public double KeyTipHorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 KeyTipHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipHorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyTipHorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double KeyTipHorizontalOffset { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c031-107">Obtém ou define o deslocamento horizontal do posicionamento horizontal especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-107">Gets or sets the horizontal offset from the specified horizontal placement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c031-108">A quantidade para deslocar o KeyTip horizontalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-108">The amount to offset the KeyTip horizontally.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c031-109">A propriedade é definida como um valor que é avaliado como infinito positivo ou negativo ou que não é um número.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-109">The property is set to a value that either evaluates to negative or positive infinity, or is not a number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="KeyTipHorizontalPlacement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.KeyTipHorizontalPlacement KeyTipHorizontalPlacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.KeyTipHorizontalPlacement KeyTipHorizontalPlacement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipHorizontalPlacement" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyTipHorizontalPlacement As KeyTipHorizontalPlacement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::KeyTipHorizontalPlacement KeyTipHorizontalPlacement { System::Windows::Controls::KeyTipHorizontalPlacement get(); void set(System::Windows::Controls::KeyTipHorizontalPlacement value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.KeyTipHorizontalPlacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c031-110">Obtém ou define o posicionamento horizontal para a Dica de Tecla em relação ao elemento de destino de posicionamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-110">Gets or sets the horizontal placement for the KeyTip relative to the placement target element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c031-111">O posicionamento horizontal para KeyTip em relação ao elemento de destino de posicionamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-111">The horizontal placement for the KeyTip relative to the placement target element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyTipVerticalOffset">
      <MemberSignature Language="C#" Value="public double KeyTipVerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 KeyTipVerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyTipVerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double KeyTipVerticalOffset { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c031-112">Obtém ou define o deslocamento vertical do posicionamento vertical especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-112">Gets or sets the vertical offset from the specified vertical placement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c031-113">A quantidade para deslocar o KeyTip verticalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-113">The amount to offset the KeyTip vertically.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c031-114">A propriedade é definida como um valor que é avaliado como infinito positivo ou negativo ou que não é um número.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-114">The property is set to a value that either evaluates to negative or positive infinity, or is not a number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="KeyTipVerticalPlacement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.KeyTipVerticalPlacement KeyTipVerticalPlacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.KeyTipVerticalPlacement KeyTipVerticalPlacement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVerticalPlacement" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyTipVerticalPlacement As KeyTipVerticalPlacement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::KeyTipVerticalPlacement KeyTipVerticalPlacement { System::Windows::Controls::KeyTipVerticalPlacement get(); void set(System::Windows::Controls::KeyTipVerticalPlacement value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.KeyTipVerticalPlacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c031-115">Obtém ou define o posicionamento vertical para a Dica de Tecla em relação ao elemento de destino de posicionamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-115">Gets or sets the vertical placement for the KeyTip relative to the placement target element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c031-116">O posicionamento vertical para KeyTip em relação ao elemento de destino de posicionamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-116">The vertical placement for the KeyTip relative to the placement target element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyTipVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility KeyTipVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility KeyTipVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyTipVisibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility KeyTipVisibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c031-117">Obtém ou define um valor que indica se a Dica de Chave é exibida e está acessível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-117">Gets or sets the value that indicates whether the KeyTip is displayed and accessible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c031-118">O valor que indica se o KeyTip é exibidos e acessível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-118">The value that indicates whether the KeyTip is displayed and accessible.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c031-119">Quando o <xref:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVisibility%2A> está definida como <xref:System.Windows.Visibility.Visible>, o KeyTip está visível e acessível.</span><span class="sxs-lookup"><span data-stu-id="0c031-119">When the <xref:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVisibility%2A> property is set to <xref:System.Windows.Visibility.Visible>, the KeyTip is visible and accessible.</span></span> <span data-ttu-id="0c031-120">Quando o <xref:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVisibility%2A> está definida como <xref:System.Windows.Visibility.Hidden>, o KeyTip é oculto, mas ainda pode ser acessado.</span><span class="sxs-lookup"><span data-stu-id="0c031-120">When the <xref:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVisibility%2A> property is set to <xref:System.Windows.Visibility.Hidden>, the KeyTip is hidden but still accessible.</span></span> <span data-ttu-id="0c031-121">Quando o <xref:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVisibility%2A> está definida como <xref:System.Windows.Visibility.Collapsed>, o KeyTip não está visível e não está acessível.</span><span class="sxs-lookup"><span data-stu-id="0c031-121">When the <xref:System.Windows.Controls.ActivatingKeyTipEventArgs.KeyTipVisibility%2A> property is set to <xref:System.Windows.Visibility.Collapsed>, the KeyTip is not visible and not accessible.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ActivatingKeyTipEventArgs.PlacementTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementTarget As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ PlacementTarget { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c031-122">Obtém ou define o elemento de interface do usuário que serve como o destino para colocar a Dica de Chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-122">Gets or sets the user interface element that serves as the target for placing the KeyTip.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c031-123">O elemento que serve como o destino para colocar o KeyTip.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c031-123">The element that serves as the target for placing the KeyTip.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>