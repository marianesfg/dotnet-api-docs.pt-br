<Type Name="PageRange" FullName="System.Windows.Controls.PageRange">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0affc6a67a43899c92d8797f08acf22303de6cb1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37580250" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct PageRange" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit PageRange extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.PageRange" />
  <TypeSignature Language="VB.NET" Value="Public Structure PageRange" />
  <TypeSignature Language="C++ CLI" Value="public value class PageRange" />
  <TypeSignature Language="F#" Value="type PageRange = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f002c-101">Specifies a range of pages.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f002c-101">Specifies a range of pages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f002c-102"><xref:System.Windows.Controls.PageRange> define um intervalo de páginas que devem ser processadas em uma operação, como impressão.</span><span class="sxs-lookup"><span data-stu-id="f002c-102"><xref:System.Windows.Controls.PageRange> defines a range of pages that should be processed in an operation such as  printing.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f002c-103">Initializes a new instance of the <see cref="T:System.Windows.Controls.PageRange" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-103">Initializes a new instance of the <see cref="T:System.Windows.Controls.PageRange" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRange (int page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (page As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRange(int page);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.PageRange : int -&gt; System.Windows.Controls.PageRange" Usage="new System.Windows.Controls.PageRange page" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="page" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="f002c-104">The page that is printed or processed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-104">The page that is printed or processed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f002c-105">Initializes a new instance of the <see cref="T:System.Windows.Controls.PageRange" /> class that includes only the single specified page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-105">Initializes a new instance of the <see cref="T:System.Windows.Controls.PageRange" /> class that includes only the single specified page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f002c-106">O `page` valor do parâmetro é baseado em 1; número da página 1 é a primeira página.</span><span class="sxs-lookup"><span data-stu-id="f002c-106">The `page` parameter value is 1-based; page number 1 is the first page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.PageRange.PageFrom" />
        <altmember cref="P:System.Windows.Controls.PageRange.PageTo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRange (int pageFrom, int pageTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 pageFrom, int32 pageTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pageFrom As Integer, pageTo As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRange(int pageFrom, int pageTo);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.PageRange : int * int -&gt; System.Windows.Controls.PageRange" Usage="new System.Windows.Controls.PageRange (pageFrom, pageTo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pageFrom" Type="System.Int32" />
        <Parameter Name="pageTo" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pageFrom">
          <span data-ttu-id="f002c-107">The first page of the range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-107">The first page of the range.</span>
          </span>
        </param>
        <param name="pageTo">
          <span data-ttu-id="f002c-108">The last page of the range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-108">The last page of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f002c-109">Initializes a new instance of the <see cref="T:System.Windows.Controls.PageRange" /> class with the specified first and last pages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-109">Initializes a new instance of the <see cref="T:System.Windows.Controls.PageRange" /> class with the specified first and last pages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f002c-110">O `pageFrom` e `PageTo` valores de parâmetro são baseados em 1; número da página 1 é a primeira página.</span><span class="sxs-lookup"><span data-stu-id="f002c-110">The `pageFrom` and `PageTo` parameter values are 1-based; page number 1 is the first page.</span></span>  
  
 <span data-ttu-id="f002c-111">Uma vez que o intervalo inclui tanto o "de" e "para" páginas, o número total de páginas é "<xref:System.Windows.Controls.PageRange.PageTo%2A>  -  <xref:System.Windows.Controls.PageRange.PageFrom%2A> + 1".</span><span class="sxs-lookup"><span data-stu-id="f002c-111">Since the range includes both the "from" and "to" pages, the total number of pages is "<xref:System.Windows.Controls.PageRange.PageTo%2A> - <xref:System.Windows.Controls.PageRange.PageFrom%2A> + 1".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.PageRange.PageFrom" />
        <altmember cref="P:System.Windows.Controls.PageRange.PageTo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f002c-112">Tests for equality with a <see cref="T:System.Windows.Controls.PageRange" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-112">Tests for equality with a <see cref="T:System.Windows.Controls.PageRange" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="pageRange.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="f002c-113">The object tested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-113">The object tested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f002c-114">Tests whether an object of unknown type is equal to this <see cref="T:System.Windows.Controls.PageRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-114">Tests whether an object of unknown type is equal to this <see cref="T:System.Windows.Controls.PageRange" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f002c-115">
            <see langword="true" /> if the object is of type <see cref="T:System.Windows.Controls.PageRange" /> and is equal to this <see cref="T:System.Windows.Controls.PageRange" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-115">
              <see langword="true" /> if the object is of type <see cref="T:System.Windows.Controls.PageRange" /> and is equal to this <see cref="T:System.Windows.Controls.PageRange" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Controls.PageRange pageRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Controls.PageRange pageRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Controls::PageRange pageRange);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Controls.PageRange -&gt; bool" Usage="pageRange.Equals pageRange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageRange" Type="System.Windows.Controls.PageRange" />
      </Parameters>
      <Docs>
        <param name="pageRange">
          <span data-ttu-id="f002c-116">The <see cref="T:System.Windows.Controls.PageRange" /> tested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-116">The <see cref="T:System.Windows.Controls.PageRange" /> tested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f002c-117">Tests whether a <see cref="T:System.Windows.Controls.PageRange" /> is equal to this <see cref="T:System.Windows.Controls.PageRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-117">Tests whether a <see cref="T:System.Windows.Controls.PageRange" /> is equal to this <see cref="T:System.Windows.Controls.PageRange" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f002c-118">
            <see langword="true" /> if the two <see cref="T:System.Windows.Controls.PageRange" /> objects are equal; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-118">
              <see langword="true" /> if the two <see cref="T:System.Windows.Controls.PageRange" /> objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="pageRange.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f002c-119">Gets the hash code value for the <see cref="T:System.Windows.Controls.PageRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-119">Gets the hash code value for the <see cref="T:System.Windows.Controls.PageRange" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f002c-120">The hash code value for the <see cref="T:System.Windows.Controls.PageRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-120">The hash code value for the <see cref="T:System.Windows.Controls.PageRange" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.PageRange pr1, System.Windows.Controls.PageRange pr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Controls.PageRange pr1, valuetype System.Windows.Controls.PageRange pr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (pr1 As PageRange, pr2 As PageRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Controls::PageRange pr1, System::Windows::Controls::PageRange pr2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Controls.PageRange * System.Windows.Controls.PageRange -&gt; bool" Usage="pr1 = pr2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pr1" Type="System.Windows.Controls.PageRange" />
        <Parameter Name="pr2" Type="System.Windows.Controls.PageRange" />
      </Parameters>
      <Docs>
        <param name="pr1">
          <span data-ttu-id="f002c-121">The first <see cref="T:System.Windows.Controls.PageRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-121">The first <see cref="T:System.Windows.Controls.PageRange" />.</span>
          </span>
        </param>
        <param name="pr2">
          <span data-ttu-id="f002c-122">The second <see cref="T:System.Windows.Controls.PageRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-122">The second <see cref="T:System.Windows.Controls.PageRange" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f002c-123">Defines the "==" operator for testing whether two specified <see cref="T:System.Windows.Controls.PageRange" /> objects are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-123">Defines the "==" operator for testing whether two specified <see cref="T:System.Windows.Controls.PageRange" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f002c-124">
            <see langword="true" /> if the two <see cref="T:System.Windows.Controls.PageRange" /> objects are equal; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-124">
              <see langword="true" /> if the two <see cref="T:System.Windows.Controls.PageRange" /> objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="f002c-125">É o método equivalente para esse operador <xref:System.Windows.Controls.PageRange.Equals*?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f002c-125">The equivalent method for this operator is <xref:System.Windows.Controls.PageRange.Equals*?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)" />
        <altmember cref="Overload:System.Windows.Controls.PageRange.Equals" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.PageRange pr1, System.Windows.Controls.PageRange pr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Controls.PageRange pr1, valuetype System.Windows.Controls.PageRange pr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (pr1 As PageRange, pr2 As PageRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Controls::PageRange pr1, System::Windows::Controls::PageRange pr2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Controls.PageRange * System.Windows.Controls.PageRange -&gt; bool" Usage="System.Windows.Controls.PageRange.op_Inequality (pr1, pr2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pr1" Type="System.Windows.Controls.PageRange" />
        <Parameter Name="pr2" Type="System.Windows.Controls.PageRange" />
      </Parameters>
      <Docs>
        <param name="pr1">
          <span data-ttu-id="f002c-126">The first <see cref="T:System.Windows.Controls.PageRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-126">The first <see cref="T:System.Windows.Controls.PageRange" />.</span>
          </span>
        </param>
        <param name="pr2">
          <span data-ttu-id="f002c-127">The second <see cref="T:System.Windows.Controls.PageRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-127">The second <see cref="T:System.Windows.Controls.PageRange" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f002c-128">Defines the "!=" operator for testing whether two specified <see cref="T:System.Windows.Controls.PageRange" /> objects are *not* equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-128">Defines the "!=" operator for testing whether two specified <see cref="T:System.Windows.Controls.PageRange" /> objects are *not* equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f002c-129">
            <see langword="true" /> if the two <see cref="T:System.Windows.Controls.PageRange" /> objects are *not* equal; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-129">
              <see langword="true" /> if the two <see cref="T:System.Windows.Controls.PageRange" /> objects are *not* equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="f002c-130">O método equivalente para esse operador é a negação do <xref:System.Windows.Controls.PageRange.Equals%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f002c-130">The equivalent method for this operator is the negation of <xref:System.Windows.Controls.PageRange.Equals%2A?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)" />
        <altmember cref="Overload:System.Windows.Controls.PageRange.Equals" />
      </Docs>
    </Member>
    <Member MemberName="PageFrom">
      <MemberSignature Language="C#" Value="public int PageFrom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageFrom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PageRange.PageFrom" />
      <MemberSignature Language="VB.NET" Value="Public Property PageFrom As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageFrom { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageFrom : int with get, set" Usage="System.Windows.Controls.PageRange.PageFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f002c-131">Gets or sets the page number of the first page in the range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-131">Gets or sets the page number of the first page in the range.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f002c-132">O número de página com base em 1 da primeira página no intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-132">The 1-based page number of the first page in the range.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f002c-133">O <xref:System.Windows.Controls.PageRange.PageFrom%2A> propriedade é baseado em 1; número da página 1 é a primeira página.</span><span class="sxs-lookup"><span data-stu-id="f002c-133">The <xref:System.Windows.Controls.PageRange.PageFrom%2A> property is 1-based; page number 1 is the first page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.PageRange.PageTo" />
      </Docs>
    </Member>
    <Member MemberName="PageTo">
      <MemberSignature Language="C#" Value="public int PageTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageTo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PageRange.PageTo" />
      <MemberSignature Language="VB.NET" Value="Public Property PageTo As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageTo { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageTo : int with get, set" Usage="System.Windows.Controls.PageRange.PageTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f002c-134">Gets or sets the page number of the last page in the range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-134">Gets or sets the page number of the last page in the range.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f002c-135">O número de página com base em 1 da última página no intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-135">The 1-based page number of the last page in the range.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f002c-136">O <xref:System.Windows.Controls.PageRange.PageTo%2A> propriedade é baseado em 1; número da página 1 é a primeira página.</span><span class="sxs-lookup"><span data-stu-id="f002c-136">The <xref:System.Windows.Controls.PageRange.PageTo%2A> property is 1-based; page number 1 is the first page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.PageRange.PageFrom" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="pageRange.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f002c-137">Gets a string representation of the range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-137">Gets a string representation of the range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f002c-138">A string that represents the range of pages in the format "<see cref="P:System.Windows.Controls.PageRange.PageFrom" /><c>-</c><see cref="P:System.Windows.Controls.PageRange.PageTo" />".</span>
          <span class="sxs-lookup">
            <span data-stu-id="f002c-138">A string that represents the range of pages in the format "<see cref="P:System.Windows.Controls.PageRange.PageFrom" /><c>-</c><see cref="P:System.Windows.Controls.PageRange.PageTo" />".</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>