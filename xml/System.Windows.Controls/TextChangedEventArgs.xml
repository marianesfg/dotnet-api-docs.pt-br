<Type Name="TextChangedEventArgs" FullName="System.Windows.Controls.TextChangedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65c8d706da124f225acf3b5b20bc289c20515f5d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37522283" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextChangedEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextChangedEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TextChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TextChangedEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextChangedEventArgs : System::Windows::RoutedEventArgs" />
  <TypeSignature Language="F#" Value="type TextChangedEventArgs = class&#xA;    inherit RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece dados para o evento de <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir exibe o número de vezes que o texto em um <xref:System.Windows.Controls.TextBox> alterações. Abaixo está o código XAML para o exemplo.  
  
 [!code-xaml[TextBoxMiscSnippets_snip#DetectChangedTextExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/detectchangedtextexample.xaml#detectchangedtextexamplewholepage)]  
  
 Abaixo está o código anterior para o exemplo.  
  
 [!code-csharp[TextBoxMiscSnippets_snip#DetectChangedTextCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/detectchangedtextexample.xaml.cs#detectchangedtextcodeexamplewholepage)]
 [!code-vb[TextBoxMiscSnippets_snip#DetectChangedTextCodeExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/visualbasic/detectchangedtextexample.xaml.vb#detectchangedtextcodeexamplewholepage)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Controls.TextChangedEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextChangedEventArgs (System.Windows.RoutedEvent id, System.Windows.Controls.UndoAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent id, valuetype System.Windows.Controls.UndoAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As RoutedEvent, action As UndoAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextChangedEventArgs(System::Windows::RoutedEvent ^ id, System::Windows::Controls::UndoAction action);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.TextChangedEventArgs : System.Windows.RoutedEvent * System.Windows.Controls.UndoAction -&gt; System.Windows.Controls.TextChangedEventArgs" Usage="new System.Windows.Controls.TextChangedEventArgs (id, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Windows.RoutedEvent" />
        <Parameter Name="action" Type="System.Windows.Controls.UndoAction" />
      </Parameters>
      <Docs>
        <param name="id">The event [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</param>
        <param name="action">A <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> causada pela alteração de texto.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Controls.TextChangedEventArgs" />, usando a ID de evento e a ação de desfazer especificadas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextChangedEventArgs (System.Windows.RoutedEvent id, System.Windows.Controls.UndoAction action, System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt; changes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent id, valuetype System.Windows.Controls.UndoAction action, class System.Collections.Generic.ICollection`1&lt;class System.Windows.Controls.TextChange&gt; changes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction,System.Collections.Generic.ICollection{System.Windows.Controls.TextChange})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As RoutedEvent, action As UndoAction, changes As ICollection(Of TextChange))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextChangedEventArgs(System::Windows::RoutedEvent ^ id, System::Windows::Controls::UndoAction action, System::Collections::Generic::ICollection&lt;System::Windows::Controls::TextChange ^&gt; ^ changes);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.TextChangedEventArgs : System.Windows.RoutedEvent * System.Windows.Controls.UndoAction * System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt; -&gt; System.Windows.Controls.TextChangedEventArgs" Usage="new System.Windows.Controls.TextChangedEventArgs (id, action, changes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Windows.RoutedEvent" />
        <Parameter Name="action" Type="System.Windows.Controls.UndoAction" />
        <Parameter Name="changes" Type="System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt;" />
      </Parameters>
      <Docs>
        <param name="id">The event [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</param>
        <param name="action">A <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> causada pela alteração de texto.</param>
        <param name="changes">As alterações que ocorreram durante este evento. Para obter mais informações, consulte <see cref="P:System.Windows.Controls.TextChangedEventArgs.Changes" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Controls.TextChangedEventArgs" />, usando a ID de evento, a ação de desfazer e as alterações de texto especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.TextChangedEventArgs.%23ctor%2A> é introduzido no .NET Framework versão 3.5.  Para saber mais, confira [Versões e dependências](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Changes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt; Changes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Windows.Controls.TextChange&gt; Changes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextChangedEventArgs.Changes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Changes As ICollection(Of TextChange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Windows::Controls::TextChange ^&gt; ^ Changes { System::Collections::Generic::ICollection&lt;System::Windows::Controls::TextChange ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Changes : System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt;" Usage="System.Windows.Controls.TextChangedEventArgs.Changes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de objetos que contém informações sobre as alterações que ocorreram.</summary>
        <value>Uma coleção de objetos que contém informações sobre as alterações que ocorreram.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Há um <xref:System.Windows.Controls.TextChange> objeto para cada alteração consecutiva para o controle. Mais de uma alteração consecutiva pode ocorrer durante uma ocorrência da <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> evento quando a alteração envolve alterar a estrutura do documento subjacente.  
  
 Por exemplo, suponha que um <xref:System.Windows.Controls.RichTextBox> contém a cadeia de caracteres `"This is some text."` a estrutura do <xref:System.Windows.Controls.RichTextBox.Document%2A?displayProperty=nameWithType> é `<Paragraph><Run>This is some text.</Run></Paragraph>`. Se o usuário coloca em negrito as palavras `"is some"`, a estrutura do subjacente <xref:System.Windows.Documents.FlowDocument> muda para `<Paragraph><Run>This </Run><Run  FontWeight="Bold">is some</Run><Run> text.</Run></Paragraph>`. Há, na verdade, quatro alterações que ocorreram como resultado da ação do usuário:  
  
1.  O `<Run>` símbolo é removido e adicionado novamente antes da palavra `This`.  
  
2.  Os símbolos `</Run><Run>` são adicionados após a palavra `This`.  
  
3.  Os símbolos `</Run><Run>` são adicionados após a palavra `some`.  
  
4.  O `</Run>` símbolo é removido e adicionado novamente após a palavra `Text`.  
  
 Em geral, a seguir sempre será verdadeira:  
  
-   As alterações que ocorrem os resultados do documento em um estado válido.  
  
-   A coleção é ordenada consecutivamente, relacionados ao qual ocorreu a alteração no controle.  Por exemplo, uma <xref:System.Windows.Controls.TextChange> objeto que representa uma alteração na posição 2 está antes de uma <xref:System.Windows.Controls.TextChange> objeto que representa uma alteração na posição 10.  
  
-   Dois <xref:System.Windows.Controls.TextChange> objetos não representam uma área com sobreposição.  O valor de <xref:System.Windows.Controls.TextChange.Offset%2A> mais o valor de <xref:System.Windows.Controls.TextChange.AddedLength%2A> de um <xref:System.Windows.Controls.TextChange> objeto é sempre menor ou igual ao valor de <xref:System.Windows.Controls.TextChange.Offset%2A> da próxima <xref:System.Windows.Controls.TextChange> objeto na coleção. Da mesma forma, o valor de <xref:System.Windows.Controls.TextChange.Offset%2A> mais o valor de <xref:System.Windows.Controls.TextChange.RemovedLength%2A> de um <xref:System.Windows.Controls.TextChange> objeto é sempre menor ou igual ao valor de <xref:System.Windows.Controls.TextChange.Offset%2A> da próxima <xref:System.Windows.Controls.TextChange> objeto na coleção.  
  
-   A coleção reflete as alterações ocorreram, mesmo se parece não haver nenhuma alteração líquida. No exemplo anterior, nenhuma alteração primeira ou o quarta resulta em uma alteração net, porque cada simplesmente removido e adicionado novamente a `<Run>` e `</Run>` símbolos, respectivamente. Mas os símbolos foram realmente removidos e adicionados, para que sejam incluídos na coleção.  
  
 Se o <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> evento ocorre como resultado de uma alteração de propriedade <xref:System.Windows.Controls.TextChangedEventArgs.Changes%2A> é uma coleção vazia.  No exemplo anterior, se o usuário coloca em negrito a cadeia de caracteres inteira, o <xref:System.Windows.Documents.TextElement.FontWeight%2A> propriedade do <xref:System.Windows.Documents.Run> é definido como <xref:System.Windows.FontWeights.Bold%2A>, mas nada é adicionado ou removido do documento, portanto, <xref:System.Windows.Controls.TextChangedEventArgs.Changes%2A> está vazio.  
  
 <xref:System.Windows.Controls.TextChangedEventArgs.Changes%2A> é introduzido no .NET Framework versão 3.5.  Para saber mais, confira [Versões e dependências](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="textChangedEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">O manipulador a ser invocado.</param>
        <param name="genericTarget">O objeto atual ao longo da rota do evento.</param>
        <summary>Executa a conversão de tipo adequada para chamar o representante <see cref="T:System.Windows.Controls.TextChangedEventHandler" /> fortemente tipado para o evento <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoAction">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.UndoAction UndoAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.UndoAction UndoAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UndoAction As UndoAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::UndoAction UndoAction { System::Windows::Controls::UndoAction get(); };" />
      <MemberSignature Language="F#" Value="member this.UndoAction : System.Windows.Controls.UndoAction" Usage="System.Windows.Controls.TextChangedEventArgs.UndoAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UndoAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a explicação de como a pilha de desfazer é causada ou afetada por esta alteração de texto</summary>
        <value>O <see cref="T:System.Windows.Controls.UndoAction" /> apropriado para essa alteração de texto.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>