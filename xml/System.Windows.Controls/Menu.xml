<Type Name="Menu" FullName="System.Windows.Controls.Menu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d4b8eda1b128606db24c15ccf8bef79c660ce78" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Menu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Menu extends System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Windows::Controls::Primitives::MenuBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c0683-101">Representa um controle de menu do Windows que lhe permite organizar hierarquicamente elementos associados a comandos e manipuladores de eventos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0683-101">Represents a Windows menu control that enables you to hierarchically organize elements associated with commands and event handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0683-102">O <xref:System.Windows.Controls.Menu> controle apresenta uma lista de itens que especificam comandos ou opções para um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="c0683-102">The <xref:System.Windows.Controls.Menu> control presents a list of items that specify commands or options for an application.</span></span> <span data-ttu-id="c0683-103">Normalmente, clicando em um item em um menu abre um submenu ou faz com que um aplicativo executar um comando.</span><span class="sxs-lookup"><span data-stu-id="c0683-103">Typically, clicking an item on a menu opens a submenu or causes an application to carry out a command.</span></span>  
  
 <span data-ttu-id="c0683-104"><xref:System.Windows.Controls.Menu> é um <xref:System.Windows.Controls.ItemsControl>, que significa que ele pode conter uma coleção de objetos de qualquer tipo (como cadeia de caracteres, imagem ou painel).</span><span class="sxs-lookup"><span data-stu-id="c0683-104"><xref:System.Windows.Controls.Menu> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="c0683-105">Para obter mais informações, consulte a classe <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="c0683-105">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span> <span data-ttu-id="c0683-106">O <xref:System.Windows.Controls.MenuItem> é o tipo mais comum de item em uma <xref:System.Windows.Controls.Menu>.</span><span class="sxs-lookup"><span data-stu-id="c0683-106">The <xref:System.Windows.Controls.MenuItem> is the most common type of item in a <xref:System.Windows.Controls.Menu>.</span></span> <span data-ttu-id="c0683-107">Um <xref:System.Windows.Controls.MenuItem> pode conter itens filho.</span><span class="sxs-lookup"><span data-stu-id="c0683-107">A <xref:System.Windows.Controls.MenuItem> can contain child items.</span></span> <span data-ttu-id="c0683-108">Os itens filhos aparecerá em um submenu quando o usuário escolhe um pai <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="c0683-108">The child items will appear in a submenu when the user chooses a parent <xref:System.Windows.Controls.MenuItem>.</span></span>  
  
## <a name="customizing-the-menu-control"></a><span data-ttu-id="c0683-109">Personalizando o controle de Menu</span><span class="sxs-lookup"><span data-stu-id="c0683-109">Customizing the Menu Control</span></span>  
 <span data-ttu-id="c0683-110">Para aplicar as mesmas configurações de propriedade a vários <xref:System.Windows.Controls.Menu> controles, use o <xref:System.Windows.FrameworkElement.Style%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="c0683-110">To apply the same property settings to multiple <xref:System.Windows.Controls.Menu> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="c0683-111">Você pode modificar o padrão <xref:System.Windows.Controls.ControlTemplate> para que o controle uma aparência exclusiva.</span><span class="sxs-lookup"><span data-stu-id="c0683-111">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="c0683-112">Para obter mais informações sobre como criar um <xref:System.Windows.Controls.ControlTemplate>, consulte [Personalizando a aparência de um controle existente, criando um ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="c0683-112">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="c0683-113">Para ver as partes e os estados que são específicos para o <xref:System.Windows.Controls.Menu>, consulte [modelos e estilos de Menu](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="c0683-113">To see the parts and states that are specific to the <xref:System.Windows.Controls.Menu>, see [Menu Styles and Templates](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="c0683-114">Propriedades de dependência para este controle podem ser definidas pelo estilo padrão do controle.</span><span class="sxs-lookup"><span data-stu-id="c0683-114">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="c0683-115">Se uma propriedade é definida por um estilo padrão, a propriedade pode ser alterada de seu valor padrão quando o controle é exibido no aplicativo.</span><span class="sxs-lookup"><span data-stu-id="c0683-115">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="c0683-116">O estilo padrão é determinado pelo qual tema de área de trabalho é usado quando o aplicativo está em execução.</span><span class="sxs-lookup"><span data-stu-id="c0683-116">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="c0683-117">Para obter mais informações, consulte [padrão WPF temas](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="c0683-117">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0683-118">Definir uma propriedade visual só terá efeito se essa propriedade estiver presente em ambos <xref:System.Windows.Controls.Menu> controle do modelo padrão e é definido usando um.</span><span class="sxs-lookup"><span data-stu-id="c0683-118">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.Menu> control's default template and is set by using a .</span></span> <span data-ttu-id="c0683-119">Você pode encontrar uma lista de propriedades visuais na seção "Alterando o Visual estrutura de um controle de" [Personalizando a aparência de um controle existente, criando um ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="c0683-119">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0683-120">Inicializa uma nova instância da classe <see cref="T:System.Windows.Controls.Menu" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-120">Initializes a new instance of the <see cref="T:System.Windows.Controls.Menu" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleMouseButton">
      <MemberSignature Language="C#" Value="protected override void HandleMouseButton (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HandleMouseButton(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HandleMouseButton (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HandleMouseButton(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c0683-121">Um <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-121">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0683-122">Chamado quando qualquer botão do mouse é pressionado ou liberado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-122">Called when any mouse button is pressed or released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenu">
      <MemberSignature Language="C#" Value="public bool IsMainMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMainMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Menu.IsMainMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMainMenu As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMainMenu { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0683-123">Obtém ou define um valor que indica se este <see cref="T:System.Windows.Controls.Menu" /> recebe uma notificação de ativação do menu principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-123">Gets or sets a value that indicates whether this <see cref="T:System.Windows.Controls.Menu" /> receives a main menu activation notification.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0683-124">
            <see langword="true" /> Se o menu de receber uma notificação de ativação do menu principal; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-124">
              <see langword="true" /> if the menu receives a main menu activation notification; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c0683-125">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-125">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0683-126">Se houver várias <xref:System.Windows.Controls.Menu> controles em uma página, <xref:System.Windows.Controls.Menu> controles que não devem receber notificações de teclas ALT ou F10 devem definir essa propriedade como `false`.</span><span class="sxs-lookup"><span data-stu-id="c0683-126">If there are multiple <xref:System.Windows.Controls.Menu> controls on a page, <xref:System.Windows.Controls.Menu> controls that should not receive ALT or F10 key notifications should set this property to `false`.</span></span>  
  
<a name="dependencyPropertyInfo_IsMainMenu"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c0683-127">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="c0683-127">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c0683-128">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="c0683-128">Identifier field</span></span>|<xref:System.Windows.Controls.Menu.IsMainMenuProperty>|  
|<span data-ttu-id="c0683-129">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="c0683-129">Metadata properties set to `true`</span></span>|<span data-ttu-id="c0683-130">Nenhum</span><span class="sxs-lookup"><span data-stu-id="c0683-130">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c0683-131">O exemplo a seguir mostra como usar o <xref:System.Windows.Controls.Menu.IsMainMenu%2A> propriedade para criar um <xref:System.Windows.Controls.Menu> que não receberá uma notificação de ativação.</span><span class="sxs-lookup"><span data-stu-id="c0683-131">The following example shows how to use the <xref:System.Windows.Controls.Menu.IsMainMenu%2A> property to create a <xref:System.Windows.Controls.Menu> that does not receive activation notification.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#MenuIsMainMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/pane1.xaml#menuismainmenu)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenuProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMainMenuProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMainMenuProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Menu.IsMainMenuProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMainMenuProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMainMenuProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0683-132">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Menu.IsMainMenu" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-132">Identifies the <see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0683-133">Fornece uma implementação <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> apropriada para este controle, como parte da infraestrutura de automação de [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-133">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0683-134">A implementação de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específica ao tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-134">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c0683-135">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-135">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0683-136">Chamado quando a propriedade <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> é definida para <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-136">Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c0683-137">Um <see cref="T:System.Windows.Input.KeyEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-137">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0683-138">Responde ao evento <see cref="E:System.Windows.ContentElement.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-138">Responds to the <see cref="E:System.Windows.ContentElement.KeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c0683-139">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-139">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0683-140">Manipula o evento roteado <see cref="E:System.Windows.UIElement.TextInput" /> que ocorre quando o menu recebe entrada de texto de qualquer dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-140">Handles the <see cref="E:System.Windows.UIElement.TextInput" /> routed event that occurs when the menu receives text input from any device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0683-141">Esta implementação não altera o estado manipulado (o <xref:System.Windows.RoutedEventArgs.Handled%2A> propriedade) da <xref:System.Windows.UIElement.TextInput> dados de evento.</span><span class="sxs-lookup"><span data-stu-id="c0683-141">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.TextInput> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c0683-142">Se você substituir <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />, sempre chamar a implementação base sua <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /> implementação.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c0683-142">If you override <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="c0683-143">Falha ao chamar a implementação base impede que as classes base manipular o evento com um manipulador de classe, que pode alterar o comportamento de tempo de execução da classe final.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c0683-143">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="c0683-144">Você pode chamar a implementação base antes ou depois do tratamento especial, dependendo dos seus requisitos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c0683-144">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="c0683-145">O elemento usado para exibir o item especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-145">The element used to display the specified item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="c0683-146">O item a ser exibido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-146">The item to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0683-147">Prepara o elemento especificado para exibir o item especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0683-147">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0683-148">Preparar o elemento pode envolver a aplicação de estilos, associações, de configuração e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="c0683-148">Preparing the element might involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>