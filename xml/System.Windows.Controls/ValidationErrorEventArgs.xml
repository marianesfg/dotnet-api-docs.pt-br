<Type Name="ValidationErrorEventArgs" FullName="System.Windows.Controls.ValidationErrorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8e1ba2369b0a5f7d6ebcc33e68e9a8d2de57285f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ValidationErrorEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationErrorEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidationErrorEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationErrorEventArgs : System::Windows::RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5e984-101">Fornece informações para o evento anexado <see cref="E:System.Windows.Controls.Validation.Error" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5e984-101">Provides information for the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.Controls.ValidationError" />
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationErrorEventAction Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ValidationErrorEventAction Action" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationErrorEventArgs.Action" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Action As ValidationErrorEventAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationErrorEventAction Action { System::Windows::Controls::ValidationErrorEventAction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationErrorEventAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e984-102">Obtém um valor que indica se o erro é um erro novo ou um erro existente que agora foi limpo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e984-102">Gets a value that indicates whether the error is a new error or an existing error that has now been cleared.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5e984-103">Um <see cref="T:System.Windows.Controls.ValidationErrorEventAction" /> valor que indica se o erro é um erro de novo ou existente de erro agora foi limpo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e984-103">A <see cref="T:System.Windows.Controls.ValidationErrorEventAction" /> value that indicates whether the error is a new error or an existing error that has now been cleared.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationError Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ValidationError Error" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationErrorEventArgs.Error" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Error As ValidationError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationError ^ Error { System::Windows::Controls::ValidationError ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e984-104">Obtém o erro que causou esse evento <see cref="E:System.Windows.Controls.Validation.Error" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e984-104">Gets the error that caused this <see cref="E:System.Windows.Controls.Validation.Error" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5e984-105">O <see cref="T:System.Windows.Controls.ValidationError" /> objeto que causou essa <see cref="E:System.Windows.Controls.Validation.Error" /> eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e984-105">The <see cref="T:System.Windows.Controls.ValidationError" /> object that caused this <see cref="E:System.Windows.Controls.Validation.Error" /> event.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationErrorEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">
          <span data-ttu-id="5e984-106">O manipulador genérico a ser chamado de uma forma específica ao tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e984-106">The generic handler to call in a type-specific way.</span>
          </span>
        </param>
        <param name="genericTarget">
          <span data-ttu-id="5e984-107">O objeto no qual invocar o manipulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e984-107">The object to invoke the handler on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e984-108">Invoca o manipulador especificado de uma maneira específica ao tipo no objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e984-108">Invokes the specified handler in a type-specific way on the specified object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>