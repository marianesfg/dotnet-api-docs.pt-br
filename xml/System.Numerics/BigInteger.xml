<Type Name="BigInteger" FullName="System.Numerics.BigInteger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="543603710cce3c1d634b60d8e3346e2c1552d821" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52372518" /></Metadata><TypeSignature Language="C#" Value="public struct BigInteger : IComparable, IComparable&lt;System.Numerics.BigInteger&gt;, IEquatable&lt;System.Numerics.BigInteger&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit BigInteger extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IEquatable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.BigInteger" />
  <TypeSignature Language="VB.NET" Value="Public Structure BigInteger&#xA;Implements IComparable, IComparable(Of BigInteger), IEquatable(Of BigInteger), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class BigInteger : IComparable, IComparable&lt;System::Numerics::BigInteger&gt;, IEquatable&lt;System::Numerics::BigInteger&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type BigInteger = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Numerics</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Numerics</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c19c5-101">Representa um inteiro com sinal arbitrariamente grande.</span><span class="sxs-lookup"><span data-stu-id="c19c5-101">Represents an arbitrarily large signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-102">O <xref:System.Numerics.BigInteger> tipo é um tipo imutável que representa um inteiro arbitrariamente grande cujo valor, em teoria tem sem limites superiores ou inferiores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-102">The <xref:System.Numerics.BigInteger> type is an immutable type that represents an arbitrarily large integer whose value in theory has no upper or lower bounds.</span></span> <span data-ttu-id="c19c5-103">Os membros de <xref:System.Numerics.BigInteger> tipo muito semelhantes dos outros tipos integrais (o <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, e <xref:System.UInt64> tipos).</span><span class="sxs-lookup"><span data-stu-id="c19c5-103">The members of the <xref:System.Numerics.BigInteger> type closely parallel those of other integral types (the <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> types).</span></span> <span data-ttu-id="c19c5-104">Esse tipo é diferente de outros tipos integrais na [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], que tem um intervalo indicado por seus `MinValue` e `MaxValue` propriedades.</span><span class="sxs-lookup"><span data-stu-id="c19c5-104">This type differs from the other integral types in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], which have a range indicated by their `MinValue` and `MaxValue` properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c19c5-105">Porque o <xref:System.Numerics.BigInteger> tipo é imutável (consulte [Mutabilidade e a estrutura de BigInteger](#mutability)) e porque não há limites superiores ou inferiores, tem um <xref:System.OutOfMemoryException> pode ser gerada para qualquer operação que faz com que um <xref:System.Numerics.BigInteger> valor cresça demais grande.</span><span class="sxs-lookup"><span data-stu-id="c19c5-105">Because the <xref:System.Numerics.BigInteger> type is immutable (see [Mutability and the BigInteger Structure](#mutability)) and because it has no upper or lower bounds, an <xref:System.OutOfMemoryException> can be thrown for any operation that causes a <xref:System.Numerics.BigInteger> value to grow too large.</span></span>  
  
## <a name="instantiating-a-biginteger-object"></a><span data-ttu-id="c19c5-106">Criando uma instância de um objeto BigInteger</span><span class="sxs-lookup"><span data-stu-id="c19c5-106">Instantiating a BigInteger Object</span></span>  
 <span data-ttu-id="c19c5-107">Você pode instanciar um <xref:System.Numerics.BigInteger> objeto de várias maneiras:</span><span class="sxs-lookup"><span data-stu-id="c19c5-107">You can instantiate a <xref:System.Numerics.BigInteger> object in several ways:</span></span>  
  
-   <span data-ttu-id="c19c5-108">Você pode usar o `new` palavra-chave e forneça qualquer valor integral ou de ponto flutuante como um parâmetro para o <xref:System.Numerics.BigInteger> construtor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-108">You can use the `new` keyword and provide any integral or floating-point value as a parameter to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="c19c5-109">(Valores de ponto flutuante são truncadas antes que eles forem atribuídos a <xref:System.Numerics.BigInteger>.) O exemplo a seguir ilustra como usar o `new` palavra-chave para criar uma instância <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-109">(Floating-point values are truncated before they are assigned to the <xref:System.Numerics.BigInteger>.) The following example illustrates how to use the `new` keyword to instantiate <xref:System.Numerics.BigInteger> values.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#1)]
     [!code-vb[System.Numerics.BigInteger.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#1)]  
  
-   <span data-ttu-id="c19c5-110">Você pode declarar um <xref:System.Numerics.BigInteger> variável e atribuir um valor, assim como você faria com qualquer tipo numérico, desde que esse valor é um tipo integral.</span><span class="sxs-lookup"><span data-stu-id="c19c5-110">You can declare a <xref:System.Numerics.BigInteger> variable and assign it a value just as you would any numeric type, as long as that value is an integral type.</span></span> <span data-ttu-id="c19c5-111">O exemplo a seguir usa a atribuição para criar uma <xref:System.Numerics.BigInteger> valor de um <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-111">The following example uses assignment to create a <xref:System.Numerics.BigInteger> value from an <xref:System.Int64>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#2)]
     [!code-vb[System.Numerics.BigInteger.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#2)]  
  
-   <span data-ttu-id="c19c5-112">Você pode atribuir um valor decimal ou de ponto flutuante para um <xref:System.Numerics.BigInteger> objeto se você converter o valor ou convertê-lo pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="c19c5-112">You can assign a decimal or floating-point value to a <xref:System.Numerics.BigInteger> object if you cast the value or convert it first.</span></span> <span data-ttu-id="c19c5-113">O exemplo a seguir converte a (em c#) ou converte (no Visual Basic) explicitamente uma <xref:System.Double> e uma <xref:System.Decimal> valor para um <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-113">The following example explicitly casts (in C#) or converts (in Visual Basic) a <xref:System.Double> and a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#3)]
     [!code-vb[System.Numerics.BigInteger.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#3)]  
  
 <span data-ttu-id="c19c5-114">Esses métodos permitem que você criar uma instância de um <xref:System.Numerics.BigInteger> somente tipos de objeto cujo valor está no intervalo de um dos numérico existente.</span><span class="sxs-lookup"><span data-stu-id="c19c5-114">These methods enable you to instantiate a <xref:System.Numerics.BigInteger> object whose value is in the range of one of the existing numeric types only.</span></span> <span data-ttu-id="c19c5-115">Você pode instanciar um <xref:System.Numerics.BigInteger> objeto cujo valor pode exceder o intervalo dos tipos numéricos existentes em uma das três maneiras:</span><span class="sxs-lookup"><span data-stu-id="c19c5-115">You can instantiate a <xref:System.Numerics.BigInteger> object whose value can exceed the range of the existing numeric types in one of three ways:</span></span>  
  
-   <span data-ttu-id="c19c5-116">Você pode usar o `new` palavra-chave e forneça uma matriz de bytes de qualquer tamanho para o <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> construtor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-116">You can use the `new` keyword and provide a byte array of any size to the <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="c19c5-117">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="c19c5-117">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#4)]
     [!code-vb[System.Numerics.BigInteger.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#4)]  
  
-   <span data-ttu-id="c19c5-118">Você pode chamar o <xref:System.Numerics.BigInteger.Parse%2A> ou <xref:System.Numerics.BigInteger.TryParse%2A> métodos para converter a representação de cadeia de caracteres de um número para um <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-118">You can call the <xref:System.Numerics.BigInteger.Parse%2A> or <xref:System.Numerics.BigInteger.TryParse%2A> methods to convert the string representation of a number to a <xref:System.Numerics.BigInteger>.</span></span> <span data-ttu-id="c19c5-119">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="c19c5-119">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#5)]
     [!code-vb[System.Numerics.BigInteger.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#5)]  
  
-   <span data-ttu-id="c19c5-120">Você pode chamar um `static` (`Shared` no Visual Basic) <xref:System.Numerics.BigInteger> método que executa alguma operação em uma expressão numérica e retorna um calculado <xref:System.Numerics.BigInteger> resultado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-120">You can call a `static` (`Shared` in Visual Basic) <xref:System.Numerics.BigInteger> method that performs some operation on a numeric expression and returns a calculated <xref:System.Numerics.BigInteger> result.</span></span> <span data-ttu-id="c19c5-121">O exemplo a seguir faz isso por cubing <xref:System.UInt64.MaxValue?displayProperty=nameWithType> e atribuir o resultado para um <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-121">The following example does this by cubing <xref:System.UInt64.MaxValue?displayProperty=nameWithType> and assigning the result to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#6)]
     [!code-vb[System.Numerics.BigInteger.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#6)]  
  
 <span data-ttu-id="c19c5-122">O valor não inicializado de um <xref:System.Numerics.BigInteger> é <xref:System.Numerics.BigInteger.Zero%2A>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-122">The uninitialized value of a <xref:System.Numerics.BigInteger> is <xref:System.Numerics.BigInteger.Zero%2A>.</span></span>  
  
## <a name="performing-operations-on-biginteger-values"></a><span data-ttu-id="c19c5-123">Realizando operações em valores BigInteger</span><span class="sxs-lookup"><span data-stu-id="c19c5-123">Performing Operations on BigInteger Values</span></span>  
 <span data-ttu-id="c19c5-124">Você pode usar um <xref:System.Numerics.BigInteger> como você usaria qualquer outro tipo integral da instância.</span><span class="sxs-lookup"><span data-stu-id="c19c5-124">You can use a <xref:System.Numerics.BigInteger> instance as you would use any other integral type.</span></span> <span data-ttu-id="c19c5-125"><xref:System.Numerics.BigInteger> sobrecarrega os operadores numéricos padrão para que você possa executar operações matemáticas básicas, como adição, subtração, divisão, multiplicação, subtração, negação e negação unária.</span><span class="sxs-lookup"><span data-stu-id="c19c5-125"><xref:System.Numerics.BigInteger> overloads the standard numeric operators to enable you to perform basic mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</span></span> <span data-ttu-id="c19c5-126">Você também pode usar os operadores numéricos padrão para comparar dois <xref:System.Numerics.BigInteger> valores entre si.</span><span class="sxs-lookup"><span data-stu-id="c19c5-126">You can also use the standard numeric operators to compare two <xref:System.Numerics.BigInteger> values with each other.</span></span> <span data-ttu-id="c19c5-127">Como os outros tipos integrais <xref:System.Numerics.BigInteger> também dá suporte à operação bit a bit `And`, `Or`, `XOr`, esquerda shift e operadores de deslocamento para a direita.</span><span class="sxs-lookup"><span data-stu-id="c19c5-127">Like the other integral types, <xref:System.Numerics.BigInteger> also supports the bitwise `And`, `Or`, `XOr`, left shift, and right shift operators.</span></span> <span data-ttu-id="c19c5-128">Para idiomas que não dão suporte a operadores personalizados, o <xref:System.Numerics.BigInteger> estrutura também fornece métodos equivalentes para executar operações matemáticas.</span><span class="sxs-lookup"><span data-stu-id="c19c5-128">For languages that do not support custom operators, the <xref:System.Numerics.BigInteger> structure also provides equivalent methods for performing mathematical operations.</span></span> <span data-ttu-id="c19c5-129">Eles incluem <xref:System.Numerics.BigInteger.Add%2A>, <xref:System.Numerics.BigInteger.Divide%2A>, <xref:System.Numerics.BigInteger.Multiply%2A>, <xref:System.Numerics.BigInteger.Negate%2A>, <xref:System.Numerics.BigInteger.Subtract%2A>e muitas outras.</span><span class="sxs-lookup"><span data-stu-id="c19c5-129">These include <xref:System.Numerics.BigInteger.Add%2A>, <xref:System.Numerics.BigInteger.Divide%2A>, <xref:System.Numerics.BigInteger.Multiply%2A>, <xref:System.Numerics.BigInteger.Negate%2A>, <xref:System.Numerics.BigInteger.Subtract%2A>, and several others.</span></span>  
  
 <span data-ttu-id="c19c5-130">Número de membros do <xref:System.Numerics.BigInteger> estrutura correspondem diretamente aos membros de outros tipos integrais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-130">Many members of the <xref:System.Numerics.BigInteger> structure correspond directly to members of the other integral types.</span></span> <span data-ttu-id="c19c5-131">Além disso, <xref:System.Numerics.BigInteger> adiciona membros, como o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-131">In addition, <xref:System.Numerics.BigInteger> adds members such as the following:</span></span>  
  
-   <span data-ttu-id="c19c5-132"><xref:System.Numerics.BigInteger.Sign%2A>, que retorna um valor que indica o sinal de um <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-132"><xref:System.Numerics.BigInteger.Sign%2A>, which returns a value that indicates the sign of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="c19c5-133"><xref:System.Numerics.BigInteger.Abs%2A>, que retorna o valor absoluto de um <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-133"><xref:System.Numerics.BigInteger.Abs%2A>, which returns the absolute value of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="c19c5-134"><xref:System.Numerics.BigInteger.DivRem%2A>, que retorna o quociente e o restante de uma operação de divisão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-134"><xref:System.Numerics.BigInteger.DivRem%2A>, which returns both the quotient and remainder of a division operation.</span></span>  
  
-   <span data-ttu-id="c19c5-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>, que retorna o máximo divisor comum de dois <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>, which returns the greatest common divisor of two <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="c19c5-136">Muitos desses membros adicionais correspondem aos membros do <xref:System.Math> classe, que fornece a funcionalidade para trabalhar com os tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-136">Many of these additional members correspond to the members of the <xref:System.Math> class, which provides the functionality to work with the primitive numeric types.</span></span>  
  
<a name="mutability"></a>   
## <a name="mutability-and-the-biginteger-structure"></a><span data-ttu-id="c19c5-137">Mutabilidade e a estrutura de BigInteger</span><span class="sxs-lookup"><span data-stu-id="c19c5-137">Mutability and the BigInteger Structure</span></span>  
 <span data-ttu-id="c19c5-138">O exemplo a seguir instancia um <xref:System.Numerics.BigInteger> de objeto e, em seguida, incrementa o valor em um.</span><span class="sxs-lookup"><span data-stu-id="c19c5-138">The following example instantiates a <xref:System.Numerics.BigInteger> object and then increments its value by one.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#1)]  
  
 <span data-ttu-id="c19c5-139">Embora esse exemplo é exibido modificar o valor do objeto existente, isso não é o caso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-139">Although this example appears to modify the value of the existing object, this is not the case.</span></span> <span data-ttu-id="c19c5-140"><xref:System.Numerics.BigInteger> objetos são imutáveis, o que significa que, internamente, o common language runtime, na verdade, cria um novo <xref:System.Numerics.BigInteger> de objeto e atribui um valor maior do que seu valor anterior.</span><span class="sxs-lookup"><span data-stu-id="c19c5-140"><xref:System.Numerics.BigInteger> objects are immutable, which means that internally, the common language runtime actually creates a new <xref:System.Numerics.BigInteger> object and assigns it a value one greater than its previous value.</span></span> <span data-ttu-id="c19c5-141">Esse novo objeto é retornado ao chamador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-141">This new object is then returned to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c19c5-142">Os tipos numéricos no .NET Framework também são imutáveis.</span><span class="sxs-lookup"><span data-stu-id="c19c5-142">The other numeric types in the .NET Framework are also immutable.</span></span> <span data-ttu-id="c19c5-143">No entanto, porque o <xref:System.Numerics.BigInteger> tipo tem sem limites superiores ou inferiores, seus valores podem ficar muito grandes e ter um impacto mensurável no desempenho.</span><span class="sxs-lookup"><span data-stu-id="c19c5-143">However, because the <xref:System.Numerics.BigInteger> type has no upper or lower bounds, its values can grow extremely large and have a measurable impact on performance.</span></span>  
  
 <span data-ttu-id="c19c5-144">Embora esse processo é transparente para o chamador, incorre em uma penalidade de desempenho.</span><span class="sxs-lookup"><span data-stu-id="c19c5-144">Although this process is transparent to the caller, it does incur a performance penalty.</span></span> <span data-ttu-id="c19c5-145">Em alguns casos, especialmente quando repetidas operações são executadas em um loop em grandes <xref:System.Numerics.BigInteger> valores, essa penalidade de desempenho pode ser significativa.</span><span class="sxs-lookup"><span data-stu-id="c19c5-145">In some cases, especially when repeated operations are performed in a loop on very large <xref:System.Numerics.BigInteger> values, that performance penalty can be significant.</span></span> <span data-ttu-id="c19c5-146">Por exemplo, no exemplo a seguir, uma operação é executada repetidamente até um milhão de vezes e um <xref:System.Numerics.BigInteger> valor é incrementado em um sempre que a operação seja bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-146">For example, in the following example, an operation is performed repetitively up to a million times, and a <xref:System.Numerics.BigInteger> value is incremented by one every time the operation succeeds.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#12)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#12)]  
  
 <span data-ttu-id="c19c5-147">Nesse caso, você pode melhorar o desempenho executando todas as atribuições de intermediárias para um <xref:System.Int32> variável.</span><span class="sxs-lookup"><span data-stu-id="c19c5-147">In such a case, you can improve performance by performing all intermediate assignments to an <xref:System.Int32> variable.</span></span> <span data-ttu-id="c19c5-148">O valor final da variável, em seguida, pode ser atribuído para o <xref:System.Numerics.BigInteger> objeto quando o loop é encerrado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-148">The final value of the variable can then be assigned to the <xref:System.Numerics.BigInteger> object when the loop exits.</span></span> <span data-ttu-id="c19c5-149">O exemplo a seguir fornece uma ilustração.</span><span class="sxs-lookup"><span data-stu-id="c19c5-149">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#3)]  
  
## <a name="working-with-byte-arrays-and-hexadecimal-strings"></a><span data-ttu-id="c19c5-150">Trabalhando com matrizes de bytes e cadeias de caracteres hexadecimais</span><span class="sxs-lookup"><span data-stu-id="c19c5-150">Working with Byte Arrays and Hexadecimal Strings</span></span>  
 <span data-ttu-id="c19c5-151">Se você converter <xref:System.Numerics.BigInteger> valores a matrizes de bytes, ou se você converter matrizes de bytes para <xref:System.Numerics.BigInteger> valores, você deve considerar a ordem de bytes.</span><span class="sxs-lookup"><span data-stu-id="c19c5-151">If you convert <xref:System.Numerics.BigInteger> values to byte arrays, or if you convert byte arrays to <xref:System.Numerics.BigInteger> values, you must consider the order of bytes.</span></span> <span data-ttu-id="c19c5-152">O <xref:System.Numerics.BigInteger> estrutura espera que os bytes individuais em uma matriz de bytes para aparecer em ordem little endian (ou seja, os bytes de ordem inferior do valor precedem os bytes de ordem mais alta).</span><span class="sxs-lookup"><span data-stu-id="c19c5-152">The <xref:System.Numerics.BigInteger> structure expects the individual bytes in a byte array to appear in little-endian order (that is, the lower-order bytes of the value precede the higher-order bytes).</span></span> <span data-ttu-id="c19c5-153">Você pode ir e voltar uma <xref:System.Numerics.BigInteger> valor chamando o <xref:System.Numerics.BigInteger.ToByteArray%2A> método e, em seguida, passando o byte resultante de matriz para o <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> construtor, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-153">You can round-trip a <xref:System.Numerics.BigInteger> value by calling the <xref:System.Numerics.BigInteger.ToByteArray%2A> method and then passing the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#1)]  
  
 <span data-ttu-id="c19c5-154">Para criar uma instância de um <xref:System.Numerics.BigInteger> valor de uma matriz de bytes que representa um valor de outro tipo integral, você pode passar o valor integral para o <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> método e, em seguida, passe o byte resultante de matriz para o <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-154">To instantiate a <xref:System.Numerics.BigInteger> value from a byte array that represents a value of some other integral type, you can pass the integral value to the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method, and then pass the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span> <span data-ttu-id="c19c5-155">O exemplo a seguir instancia um <xref:System.Numerics.BigInteger> valor de uma matriz de bytes que representa um <xref:System.Int16> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-155">The following example instantiates a <xref:System.Numerics.BigInteger> value from a byte array that represents an <xref:System.Int16> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#2)]  
  
 <span data-ttu-id="c19c5-156">O <xref:System.Numerics.BigInteger> estrutura pressupõe que os valores negativos são armazenados usando a representação de complemento de dois.</span><span class="sxs-lookup"><span data-stu-id="c19c5-156">The <xref:System.Numerics.BigInteger> structure assumes that negative values are stored by using two's complement representation.</span></span> <span data-ttu-id="c19c5-157">Porque o <xref:System.Numerics.BigInteger> estrutura representa um valor numérico com nenhum comprimento fixo, o <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> construtor sempre interpreta o bit mais significativo do último byte na matriz como um bit de sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-157">Because the <xref:System.Numerics.BigInteger> structure represents a numeric value with no fixed length, the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor always interprets the most significant bit of the last byte in the array as a sign bit.</span></span> <span data-ttu-id="c19c5-158">Para impedir que o <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> construtor de confuso de dois complemento representação de um valor negativo com a representação de sinal e magnitude de um valor positivo, positivo valores em que a maioria dos bits significativa do último byte na matriz de bytes seria normalmente conjunto deve incluir um byte adicional, cujo valor é 0.</span><span class="sxs-lookup"><span data-stu-id="c19c5-158">To prevent the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor from confusing the two's complement representation of a negative value with the sign and magnitude representation of a positive value, positive values in which the most significant bit of the last byte in the byte array would ordinarily be set should include an additional byte whose value is 0.</span></span> <span data-ttu-id="c19c5-159">Por exemplo, 0xC0 0xBD 0xF0 0xFF é a representação hexadecimal de little endian de-1,000,000 ou 4,293,967,296.</span><span class="sxs-lookup"><span data-stu-id="c19c5-159">For example, 0xC0 0xBD 0xF0 0xFF is the little-endian hexadecimal representation of either -1,000,000 or 4,293,967,296.</span></span> <span data-ttu-id="c19c5-160">Como o bit mais significativo do último byte nessa matriz está em, o valor da matriz de bytes poderia ser interpretado pelo <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> construtor como-1,000,000.</span><span class="sxs-lookup"><span data-stu-id="c19c5-160">Because the most significant bit of the last byte in this array is on, the value of the byte array would be interpreted by the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor as -1,000,000.</span></span> <span data-ttu-id="c19c5-161">Para instanciar um <xref:System.Numerics.BigInteger> cujo valor é positivo, uma matriz de bytes cujos elementos são 0xC0 0xBD 0xF0 0xFF 0x00 deve ser passado para o construtor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-161">To instantiate a <xref:System.Numerics.BigInteger> whose value is positive, a byte array whose elements are 0xC0 0xBD 0xF0 0xFF 0x00 must be passed to the constructor.</span></span> <span data-ttu-id="c19c5-162">O exemplo a seguir ilustra essa situação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-162">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#3)]  
  
 <span data-ttu-id="c19c5-163">Matrizes de bytes criados pelo <xref:System.Numerics.BigInteger.ToByteArray%2A> método dos valores positivos de incluir esse valor extra zero byte.</span><span class="sxs-lookup"><span data-stu-id="c19c5-163">Byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method from positive values include this extra zero-value byte.</span></span> <span data-ttu-id="c19c5-164">Portanto, o <xref:System.Numerics.BigInteger> estrutura pode valores de ida e volta com êxito, atribuí-los para e, em seguida, restaurá-los de matrizes de bytes, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-164">Therefore, the <xref:System.Numerics.BigInteger> structure can successfully round-trip values by assigning them to, and then restoring them from, byte arrays, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#4)]  
  
 <span data-ttu-id="c19c5-165">No entanto, talvez seja necessário adicionar esse byte adicional do valor de zero para matrizes de bytes que são criados dinamicamente pelo desenvolvedor ou que são retornados por métodos que convertem inteiros sem sinal em matrizes de bytes (como <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType>, <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType>, e <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="c19c5-165">However, you may need to add this additional zero-value byte to byte arrays that are created dynamically by the developer or that are returned by methods that convert unsigned integers to byte arrays (such as <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType>, <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType>, and <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="c19c5-166">Ao analisar uma cadeia de caracteres hexadecimal, o <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> e <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> métodos supõem que, se o bit mais significativo do primeiro byte na cadeia de caracteres é definido, ou se o primeiro dígito hexadecimal da cadeia de caracteres representa os quatro bits inferiores de um valor de byte, o valor é representado usando a representação de complemento de dois.</span><span class="sxs-lookup"><span data-stu-id="c19c5-166">When parsing a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> and <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods assume that if the most significant bit of the first byte in the string is set, or if the first hexadecimal digit of the string represents the lower four bits of a byte value, the value is represented by using two's complement representation.</span></span> <span data-ttu-id="c19c5-167">Por exemplo, "FF01" e "F01" representam o valor decimal-255.</span><span class="sxs-lookup"><span data-stu-id="c19c5-167">For example, both "FF01" and "F01" represent the decimal value -255.</span></span> <span data-ttu-id="c19c5-168">Para diferenciar positivo de valores negativos, a valores positivos devem incluir um zero à esquerda.</span><span class="sxs-lookup"><span data-stu-id="c19c5-168">To differentiate positive from negative values, positive values should include a leading zero.</span></span> <span data-ttu-id="c19c5-169">As sobrecargas relevantes a <xref:System.Numerics.BigInteger.ToString%2A> método, quando eles são passados a cadeia de caracteres de formato "X", adicione um zero à esquerda para a cadeia de caracteres hexadecimal retornado para valores positivos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-169">The relevant overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, when they are passed the "X" format string, add a leading zero to the returned hexadecimal string for positive values.</span></span> <span data-ttu-id="c19c5-170">Isso torna possível a ida e volta <xref:System.Numerics.BigInteger> valores usando o <xref:System.Numerics.BigInteger.ToString%2A> e <xref:System.Numerics.BigInteger.Parse%2A> métodos, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-170">This makes it possible to round-trip <xref:System.Numerics.BigInteger> values by using the <xref:System.Numerics.BigInteger.ToString%2A> and <xref:System.Numerics.BigInteger.Parse%2A> methods, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#5)]  
  
 <span data-ttu-id="c19c5-171">No entanto, as cadeias de caracteres hexadecimais é criado chamando o `ToString` métodos de outros tipos integrais ou as sobrecargas do <xref:System.Convert.ToString%2A> método que incluem um `toBase` parâmetro não indicam o sinal do valor ou o tipo de dados de origem do qual a cadeia de caracteres hexadecimal foi derivada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-171">However, the hexadecimal strings created by calling the `ToString` methods of the other integral types or the overloads of the <xref:System.Convert.ToString%2A> method that include a `toBase` parameter do not indicate the sign of the value or the source data type from which the hexadecimal string was derived.</span></span> <span data-ttu-id="c19c5-172">Criando uma instância com êxito um <xref:System.Numerics.BigInteger> valor de uma cadeia de caracteres requer alguma lógica adicional.</span><span class="sxs-lookup"><span data-stu-id="c19c5-172">Successfully instantiating a <xref:System.Numerics.BigInteger> value from such a string requires some additional logic.</span></span> <span data-ttu-id="c19c5-173">O exemplo a seguir fornece uma implementação possível.</span><span class="sxs-lookup"><span data-stu-id="c19c5-173">The following example provides one possible implementation.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-174">Inicializa uma nova instância da estrutura <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-174">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : byte[] -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-175">Uma matriz de valores de bytes em ordem little endian.</span><span class="sxs-lookup"><span data-stu-id="c19c5-175">An array of byte values in little-endian order.</span></span></param>
        <summary><span data-ttu-id="c19c5-176">Inicializa uma nova instância da estrutura <see cref="T:System.Numerics.BigInteger" /> usando os valores de uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="c19c5-176">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using the values in a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-177">Os bytes individuais no `value` matriz deve estar em ordem little endian, de byte de ordem mais baixa para o byte de ordem mais alta.</span><span class="sxs-lookup"><span data-stu-id="c19c5-177">The individual bytes in the `value` array should be in little-endian order, from lowest-order byte to highest-order byte.</span></span> <span data-ttu-id="c19c5-178">Por exemplo, o valor numérico 1.000.000.000.000 é representado como mostrado na tabela a seguir:</span><span class="sxs-lookup"><span data-stu-id="c19c5-178">For example, the numeric value 1,000,000,000,000 is represented as shown in the following table:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c19c5-179">Cadeia de caracteres hexadecimal</span><span class="sxs-lookup"><span data-stu-id="c19c5-179">Hexadecimal string</span></span>|<span data-ttu-id="c19c5-180">E8D4A51000</span><span class="sxs-lookup"><span data-stu-id="c19c5-180">E8D4A51000</span></span>|  
|<span data-ttu-id="c19c5-181">Matriz de bytes (menor índice pela primeira vez)</span><span class="sxs-lookup"><span data-stu-id="c19c5-181">Byte array (lowest index first)</span></span>|<span data-ttu-id="c19c5-182">00 10 A5 D4 E8 00</span><span class="sxs-lookup"><span data-stu-id="c19c5-182">00 10 A5 D4 E8 00</span></span>|  
  
 <span data-ttu-id="c19c5-183">A maioria dos métodos que convertem valores numéricos em matrizes de bytes, como <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> e <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>, retornar matrizes de bytes em ordem little endian.</span><span class="sxs-lookup"><span data-stu-id="c19c5-183">Most methods that convert numeric values to byte arrays, such as <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> and <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>, return byte arrays in little-endian order.</span></span>  
  
 <span data-ttu-id="c19c5-184">O construtor espera valores positivos na matriz de bytes para usar a representação de sinal e magnitude e valores negativos para usar a representação de complemento de dois.</span><span class="sxs-lookup"><span data-stu-id="c19c5-184">The constructor expects positive values in the byte array to use sign-and-magnitude representation, and negative values to use two's complement representation.</span></span> <span data-ttu-id="c19c5-185">Em outras palavras, se a ordem mais alta de bits do byte de ordem mais alta na `value` for definido, resultante <xref:System.Numerics.BigInteger> valor é negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-185">In other words, if the highest-order bit of the highest-order byte in `value` is set, the resulting <xref:System.Numerics.BigInteger> value is negative.</span></span> <span data-ttu-id="c19c5-186">Dependendo da fonte da matriz de bytes, isso pode causar um valor positivo ser interpretado incorretamente como um valor negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-186">Depending on the source of the byte array, this may cause a positive value to be misinterpreted as a negative value.</span></span> <span data-ttu-id="c19c5-187">Normalmente, as matrizes de bytes são gerados das seguintes maneiras:</span><span class="sxs-lookup"><span data-stu-id="c19c5-187">Byte arrays are typically generated in the following ways:</span></span>  
  
-   <span data-ttu-id="c19c5-188">Chamando o <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-188">By calling the <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c19c5-189">Como esse método retorna uma matriz de bytes com o bit de ordem mais alta do byte de ordem mais alta no conjunto de matriz como zero para valores positivos, não há nenhuma chance de interpretação incorreta de um valor positivo como negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-189">Because this method returns a byte array with the highest-order bit of the highest-order byte in the array set to zero for positive values, there is no chance of misinterpreting a positive value as negative.</span></span> <span data-ttu-id="c19c5-190">Sem modificações matrizes de bytes criados pelo <xref:System.Numerics.BigInteger.ToByteArray%2A> método sempre com êxito de ida e volta quando eles são passados para o <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-190">Unmodified byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method always successfully round-trip when they are passed to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
-   <span data-ttu-id="c19c5-191">Chamando o <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> método e passá-lo em um inteiro com sinal como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="c19c5-191">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it a signed integer as a parameter.</span></span> <span data-ttu-id="c19c5-192">Como inteiros com sinal de manipular a representação de sinal e magnitude e a representação de complemento de dois, não há nenhuma chance de interpretação incorreta de um valor positivo como negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-192">Because signed integers handle both sign-and-magnitude representation and two's complement representation, there is no chance of misinterpreting a positive value as negative.</span></span>  
  
-   <span data-ttu-id="c19c5-193">Chamando o <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> método e passá-lo em um inteiro sem sinal como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="c19c5-193">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it an unsigned integer as a parameter.</span></span> <span data-ttu-id="c19c5-194">Como números inteiros sem sinal são representados por seu magnitude apenas, valores positivos podem ser interpretados incorretamente como valores negativos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-194">Because unsigned integers are represented by their magnitude only, positive values can be misinterpreted as negative values.</span></span> <span data-ttu-id="c19c5-195">Para evitar essa má interpretação, você pode adicionar um valor de zero byte ao final da matriz.</span><span class="sxs-lookup"><span data-stu-id="c19c5-195">To prevent this misinterpretation, you can add a zero-byte value to the end of the array.</span></span> <span data-ttu-id="c19c5-196">O exemplo na próxima seção fornece uma ilustração.</span><span class="sxs-lookup"><span data-stu-id="c19c5-196">The example in the next section provides an illustration.</span></span>  
  
-   <span data-ttu-id="c19c5-197">Criando uma matriz de bytes ou estática ou dinamicamente sem necessariamente chamar qualquer um dos métodos anteriores ou modificando uma matriz de bytes existente.</span><span class="sxs-lookup"><span data-stu-id="c19c5-197">By creating a byte array either dynamically or statically without necessarily calling any of the previous methods, or by modifying an existing byte array.</span></span> <span data-ttu-id="c19c5-198">Para impedir que valores positivos serem mal interpretados como valores negativos, você pode adicionar um valor de zero byte ao final da matriz.</span><span class="sxs-lookup"><span data-stu-id="c19c5-198">To prevent positive values from being misinterpreted as negative values, you can add a zero-byte value to the end of the array.</span></span>  
  
 <span data-ttu-id="c19c5-199">Se `value` está vazio <xref:System.Byte> array, a nova <xref:System.Numerics.BigInteger> objeto é inicializado como um valor de <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-199">If `value` is an empty <xref:System.Byte> array, the new <xref:System.Numerics.BigInteger> object is initialized to a value of <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c19c5-200">Se `value` está `null`, o construtor gerará um <xref:System.ArgumentNullException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-200">If `value` is `null`, the constructor throws an <xref:System.ArgumentNullException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-201">O exemplo a seguir instancia um <xref:System.Numerics.BigInteger> objeto a partir de uma matriz de bytes de elemento de 5 cujo valor é {5, 4, 3, 2, 1}.</span><span class="sxs-lookup"><span data-stu-id="c19c5-201">The following example instantiates a <xref:System.Numerics.BigInteger> object from a 5-element byte array whose value is {5, 4, 3, 2, 1}.</span></span> <span data-ttu-id="c19c5-202">Em seguida, ele exibe o <xref:System.Numerics.BigInteger> valor, representado como números decimais e hexadecimais, no console.</span><span class="sxs-lookup"><span data-stu-id="c19c5-202">It then displays the <xref:System.Numerics.BigInteger> value, represented as both decimal and hexadecimal numbers, to the console.</span></span> <span data-ttu-id="c19c5-203">Uma comparação de matriz de entrada com a saída de texto deixa claro por que essa sobrecarga da <xref:System.Numerics.BigInteger> construtor de classe cria um <xref:System.Numerics.BigInteger> objeto cujo valor é 4328719365 (ou 0x102030405).</span><span class="sxs-lookup"><span data-stu-id="c19c5-203">A comparison of the input array with the text output makes it clear why this overload of the <xref:System.Numerics.BigInteger> class constructor creates a <xref:System.Numerics.BigInteger> object whose value is 4328719365 (or 0x102030405).</span></span> <span data-ttu-id="c19c5-204">O primeiro elemento da matriz de bytes, cujo valor é 5, define o valor do byte de ordem mais baixa a <xref:System.Numerics.BigInteger> objeto, que é 0x05.</span><span class="sxs-lookup"><span data-stu-id="c19c5-204">The first element of the byte array, whose value is 5, defines the value of the lowest-order byte of the <xref:System.Numerics.BigInteger> object, which is 0x05.</span></span> <span data-ttu-id="c19c5-205">O segundo elemento da matriz de bytes, cujo valor é 4, define o valor do segundo byte do <xref:System.Numerics.BigInteger> objeto, que é 0x04 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="c19c5-205">The second element of the byte array, whose value is 4, defines the value of the second byte of the <xref:System.Numerics.BigInteger> object, which is 0x04, and so on.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ctors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#1)]  
  
 <span data-ttu-id="c19c5-206">O exemplo a seguir instancia um positivo e negativo <xref:System.Numerics.BigInteger> o valor, passa para o <xref:System.Numerics.BigInteger.ToByteArray%2A> método e, em seguida, restaura o original <xref:System.Numerics.BigInteger> valores da matriz de bytes resultante.</span><span class="sxs-lookup"><span data-stu-id="c19c5-206">The following example instantiates a positive and a negative <xref:System.Numerics.BigInteger> value, passes them to the <xref:System.Numerics.BigInteger.ToByteArray%2A> method, and then restores the original <xref:System.Numerics.BigInteger> values from the resulting byte array.</span></span> <span data-ttu-id="c19c5-207">Observe que os dois valores são representados pelo matrizes de byte idênticos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-207">Note that the two values are represented by identical byte arrays.</span></span> <span data-ttu-id="c19c5-208">A única diferença entre eles é no bit mais significativo do último elemento na matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="c19c5-208">The only difference between them is in the most significant bit of the last element in the byte array.</span></span> <span data-ttu-id="c19c5-209">Esse bit estiver definido (o valor do byte é 0xFF), se a matriz é criada a partir de um negativo <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-209">This bit is set (the value of the byte is 0xFF) if the array is created from a negative <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="c19c5-210">O bits não estiver definido (o valor do byte é zero), se a matriz é criada a partir de um positivo <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-210">The bit is not set (the value of the byte is zero), if the array is created from a positive <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.ctors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#2)]  
  
 <span data-ttu-id="c19c5-211">O exemplo a seguir ilustra como certificar-se de que um valor positivo não é incorretamente instanciado como um valor negativo com a adição de um byte cujo valor é zero para o final da matriz.</span><span class="sxs-lookup"><span data-stu-id="c19c5-211">The following example illustrates how to make sure that a positive value is not incorrectly instantiated as a negative value by adding a byte whose value is zero to the end of the array.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ctors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c19c5-212"><paramref name="value" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-212"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.ToByteArray" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::Decimal value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : decimal -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-213">Um número decimal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-213">A decimal number.</span></span></param>
        <summary><span data-ttu-id="c19c5-214">Inicializa uma nova instância da estrutura <see cref="T:System.Numerics.BigInteger" /> usando um valor <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-214">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-215">O resultado de chamar este construtor é idêntico ao atribuir explicitamente um <xref:System.Decimal> de valor para um <xref:System.Numerics.BigInteger> variável.</span><span class="sxs-lookup"><span data-stu-id="c19c5-215">The result of calling this constructor is identical to explicitly assigning a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger> variable.</span></span>  
  
 <span data-ttu-id="c19c5-216">Chamar esse construtor pode causar perda de dados; qualquer parte fracionária `value` é truncado ao instanciar um <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-216">Calling this constructor can cause data loss; any fractional part of `value` is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-217">O exemplo a seguir ilustra o uso do <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> construtor para instanciar um <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-217">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="c19c5-218">Ele define uma matriz de <xref:System.Decimal> valores e, em seguida, passa cada valor com o <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-218">It defines an array of <xref:System.Decimal> values, and then passes each value to the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor.</span></span> <span data-ttu-id="c19c5-219">Observe que o <xref:System.Decimal> valor é truncado em vez de arredondados quando ele é atribuído a <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-219">Note that the <xref:System.Decimal> value is truncated instead of rounded when it is assigned to the <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ctors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(double value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : double -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-220">Um valor de ponto flutuante de precisão dupla.</span><span class="sxs-lookup"><span data-stu-id="c19c5-220">A double-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="c19c5-221">Inicializa uma nova instância de estrutura <see cref="T:System.Numerics.BigInteger" /> usando um valor de ponto flutuante de precisão dupla.</span><span class="sxs-lookup"><span data-stu-id="c19c5-221">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a double-precision floating-point value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-222">Qualquer parte fracionária de `value` parâmetro é truncado ao instanciar um <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-222">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="c19c5-223">Devido à falta de precisão do <xref:System.Double> tipo de dados, chamar este construtor pode causar perda de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-223">Because of the lack of precision of the <xref:System.Double> data type, calling this constructor can cause data loss.</span></span>  
  
 <span data-ttu-id="c19c5-224">O <xref:System.Numerics.BigInteger> valor que resulta de chamar este construtor é idêntico ao valor que resulta da atribuir explicitamente um <xref:System.Double> valor para um <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-224">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Double> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-225">O exemplo a seguir ilustra o uso do <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> construtor para instanciar um <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-225">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="c19c5-226">Ele também ilustra que a perda de precisão que pode ocorrer quando você usa o <xref:System.Double> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-226">It also illustrates the loss of precision that may occur when you use the <xref:System.Double> data type.</span></span> <span data-ttu-id="c19c5-227">Um <xref:System.Double> é atribuído um valor grande, o que é então atribuído a um <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-227">A <xref:System.Double> is assigned a large value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="c19c5-228">Como mostra a saída, essa atribuição envolve uma perda de precisão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-228">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="c19c5-229">Os dois valores, em seguida, são incrementados em um.</span><span class="sxs-lookup"><span data-stu-id="c19c5-229">Both values are then incremented by one.</span></span> <span data-ttu-id="c19c5-230">A saída mostra que o <xref:System.Numerics.BigInteger> objeto reflete o valor alterado, enquanto o <xref:System.Double> do objeto não.</span><span class="sxs-lookup"><span data-stu-id="c19c5-230">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Double> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#5)]
 [!code-vb[System.Numerics.BigInteger.ctors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c19c5-231">O valor de <paramref name="value" /> é <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-231">The value of <paramref name="value" /> is <see cref="F:System.Double.NaN" />.</span></span>  
  
<span data-ttu-id="c19c5-232">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-232">-or-</span></span> 
<span data-ttu-id="c19c5-233">O valor de <paramref name="value" /> é <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-233">The value of <paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span></span>  
  
<span data-ttu-id="c19c5-234">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-234">-or-</span></span> 
<span data-ttu-id="c19c5-235">O valor de <paramref name="value" /> é <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-235">The value of <paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(int value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : int -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-236">Um inteiro com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-236">A 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="c19c5-237">Inicializa uma nova instância da estrutura <see cref="T:System.Numerics.BigInteger" /> usando um valor inteiro com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-237">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 32-bit signed integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-238">Não há nenhuma perda de precisão ao instanciar um <xref:System.Numerics.BigInteger> objeto usando este construtor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-238">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="c19c5-239">O <xref:System.Numerics.BigInteger> valor que resulta de chamar este construtor é idêntico ao valor resultante da atribuição de um <xref:System.Int32> valor para um <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-239">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
 <span data-ttu-id="c19c5-240">O <xref:System.Numerics.BigInteger> estrutura não tem construtores com um parâmetro do tipo <xref:System.Byte>, <xref:System.Int16>, <xref:System.SByte>, ou <xref:System.UInt16>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-240">The <xref:System.Numerics.BigInteger> structure does not include constructors with a parameter of type <xref:System.Byte>, <xref:System.Int16>, <xref:System.SByte>, or <xref:System.UInt16>.</span></span> <span data-ttu-id="c19c5-241">No entanto, o <xref:System.Int32> tipo dá suporte à conversão implícita de inteiros assinados e não assinados de 8 bits e 16 bits inteiros com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-241">However, the <xref:System.Int32> type supports the implicit conversion of 8-bit and 16-bit signed and unsigned integers to signed 32-bit integers.</span></span> <span data-ttu-id="c19c5-242">Como resultado, esse construtor é chamado se `value` é qualquer um desses quatro tipos integrais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-242">As a result, this constructor is called if `value` is any one of these four integral types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-243">A exemplo a seguir chama o <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> construtor para instanciar <xref:System.Numerics.BigInteger> valores de uma matriz de inteiros de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-243">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 32-bit integers.</span></span> <span data-ttu-id="c19c5-244">Ele também usa a conversão implícita para atribuir cada valor de inteiro de 32 bits para um <xref:System.Numerics.BigInteger> variável.</span><span class="sxs-lookup"><span data-stu-id="c19c5-244">It also uses implicit conversion to assign each 32-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="c19c5-245">Ele então compara os dois valores para estabelecer que resultante <xref:System.Numerics.BigInteger> valores são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-245">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.ctors#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(long value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : int64 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-246">Um inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-246">A 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="c19c5-247">Inicializa uma nova instância da estrutura <see cref="T:System.Numerics.BigInteger" /> usando um valor inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-247">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 64-bit signed integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-248">Não há nenhuma perda de precisão ao instanciar um <xref:System.Numerics.BigInteger> objeto usando este construtor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-248">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="c19c5-249">O <xref:System.Numerics.BigInteger> valor que resulta de chamar este construtor é idêntico ao valor resultante da atribuição de um <xref:System.Int64> valor para um <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-249">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-250">A exemplo a seguir chama o <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> construtor para instanciar <xref:System.Numerics.BigInteger> valores de uma matriz de inteiros de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-250">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 64-bit integers.</span></span> <span data-ttu-id="c19c5-251">Ele também usa a conversão implícita para atribuir cada valor de inteiro de 64 bits com um <xref:System.Numerics.BigInteger> variável.</span><span class="sxs-lookup"><span data-stu-id="c19c5-251">It also uses implicit conversion to assign each 64-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="c19c5-252">Ele então compara os dois valores para estabelecer que resultante <xref:System.Numerics.BigInteger> valores são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-252">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#7)]
 [!code-vb[System.Numerics.BigInteger.ctors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(float value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : single -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-253">Um valor de ponto flutuante de precisão simples.</span><span class="sxs-lookup"><span data-stu-id="c19c5-253">A single-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="c19c5-254">Inicializa uma nova instância da estrutura <see cref="T:System.Numerics.BigInteger" /> usando um valor de ponto flutuante de precisão simples.</span><span class="sxs-lookup"><span data-stu-id="c19c5-254">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a single-precision floating-point value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-255">Qualquer parte fracionária de `value` parâmetro é truncado ao instanciar um <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-255">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="c19c5-256">Devido à falta de precisão do <xref:System.Single> tipo de dados, chamar este construtor pode resultar em perda de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-256">Because of the lack of precision of the <xref:System.Single> data type, calling this constructor can result in data loss.</span></span>  
  
 <span data-ttu-id="c19c5-257">O <xref:System.Numerics.BigInteger> valor que resulta de chamar este construtor é idêntico ao valor que resulta da atribuir explicitamente um <xref:System.Single> valor para um <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-257">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Single> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-258">O exemplo a seguir ilustra o uso do <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> construtor para instanciar um <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-258">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="c19c5-259">Ele também ilustra que a perda de precisão que pode ocorrer quando você usa o <xref:System.Single> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-259">It also illustrates the loss of precision that may occur when you use the <xref:System.Single> data type.</span></span> <span data-ttu-id="c19c5-260">Um <xref:System.Single> é atribuído um valor negativo grande, que é então atribuído a um <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-260">A <xref:System.Single> is assigned a large negative value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="c19c5-261">Como mostra a saída, essa atribuição envolve uma perda de precisão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-261">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="c19c5-262">Os dois valores, em seguida, são incrementados em um.</span><span class="sxs-lookup"><span data-stu-id="c19c5-262">Both values are then incremented by one.</span></span> <span data-ttu-id="c19c5-263">A saída mostra que o <xref:System.Numerics.BigInteger> objeto reflete o valor alterado, enquanto o <xref:System.Single> do objeto não.</span><span class="sxs-lookup"><span data-stu-id="c19c5-263">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Single> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#8)]
 [!code-vb[System.Numerics.BigInteger.ctors#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c19c5-264">O valor de <paramref name="value" /> é <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-264">The value of <paramref name="value" /> is <see cref="F:System.Single.NaN" />.</span></span>  
  
<span data-ttu-id="c19c5-265">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-265">-or-</span></span> 
<span data-ttu-id="c19c5-266">O valor de <paramref name="value" /> é <see cref="F:System.Single.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-266">The value of <paramref name="value" /> is <see cref="F:System.Single.NegativeInfinity" />.</span></span>  
  
<span data-ttu-id="c19c5-267">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-267">-or-</span></span> 
<span data-ttu-id="c19c5-268">O valor de <paramref name="value" /> é <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-268">The value of <paramref name="value" /> is <see cref="F:System.Single.PositiveInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : uint32 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-269">Um valor inteiro de 32 bits sem sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-269">An unsigned 32-bit integer value.</span></span></param>
        <summary><span data-ttu-id="c19c5-270">Inicializa uma nova instância da estrutura <see cref="T:System.Numerics.BigInteger" /> usando um valor inteiro de 32 bits sem sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-270">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using an unsigned 32-bit integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-271">Não há nenhuma perda de precisão ao instanciar um <xref:System.Numerics.BigInteger> usando este construtor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-271">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="c19c5-272">O <xref:System.Numerics.BigInteger> valor que resulta de chamar este construtor é idêntico ao valor resultante da atribuição de um <xref:System.UInt32> valor para um <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-272">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-273">O exemplo a seguir usa o <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> construtor e uma instrução de atribuição para inicializar <xref:System.Numerics.BigInteger> valores de uma matriz de inteiros sem sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-273">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> constructor and an assignment statement to initialize <xref:System.Numerics.BigInteger> values from an array of unsigned 32-bit integers.</span></span> <span data-ttu-id="c19c5-274">Em seguida, compara os dois valores para demonstrar que os dois métodos de inicializar um <xref:System.Numerics.BigInteger> valor produz resultados idênticos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-274">It then compares the two values to demonstrate that the two methods of initializing a <xref:System.Numerics.BigInteger> value produce identical results.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#9)]
 [!code-vb[System.Numerics.BigInteger.ctors#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#9)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : uint64 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-275">Um inteiro de 64 bits sem sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-275">An unsigned 64-bit integer.</span></span></param>
        <summary><span data-ttu-id="c19c5-276">Inicializa uma nova instância da estrutura <see cref="T:System.Numerics.BigInteger" /> com um valor inteiro de 64 bits sem sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-276">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure with an unsigned 64-bit integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-277">Não há nenhuma perda de precisão ao instanciar um <xref:System.Numerics.BigInteger> usando este construtor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-277">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="c19c5-278">O <xref:System.Numerics.BigInteger> valor que resulta de chamar este construtor é idêntico ao valor resultante da atribuição de um <xref:System.UInt64> valor para um <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-278">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-279">O exemplo a seguir usa o <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> construtor para instanciar uma <xref:System.Numerics.BigInteger> objeto cujo valor é igual a <xref:System.UInt64.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-279">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object whose value is equal to <xref:System.UInt64.MaxValue>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#10)]
 [!code-vb[System.Numerics.BigInteger.ctors#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ReadOnlySpan&lt;byte&gt; value, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ReadOnlySpan(Of Byte), Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : ReadOnlySpan&lt;byte&gt; * bool * bool -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger (value, isUnsigned, isBigEndian)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="isUnsigned" Type="System.Boolean" />
        <Parameter Name="isBigEndian" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Abs (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Abs(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Abs(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Abs : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-280">Um número.</span><span class="sxs-lookup"><span data-stu-id="c19c5-280">A number.</span></span></param>
        <summary><span data-ttu-id="c19c5-281">Obtém o valor absoluto de um objeto <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-281">Gets the absolute value of a <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <returns><span data-ttu-id="c19c5-282">O valor absoluto de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-282">The absolute value of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-283">O valor absoluto de um número é esse número sem sinal, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-283">The absolute value of a number is that number without its sign, as shown in the following table.</span></span>  
  
|<span data-ttu-id="c19c5-284">Parâmetro `value`</span><span class="sxs-lookup"><span data-stu-id="c19c5-284">`value` parameter</span></span>|<span data-ttu-id="c19c5-285">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="c19c5-285">Return value</span></span>|  
|-----------------------|------------------|  
|<span data-ttu-id="c19c5-286">`value` >= 0</span><span class="sxs-lookup"><span data-stu-id="c19c5-286">`value` >= 0</span></span>|`value`|  
|<span data-ttu-id="c19c5-287">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="c19c5-287">`value` < 0</span></span>|<span data-ttu-id="c19c5-288">`value` \* -1</span><span class="sxs-lookup"><span data-stu-id="c19c5-288">`value` \* -1</span></span>|  
  
 <span data-ttu-id="c19c5-289">O <xref:System.Numerics.BigInteger.Abs%2A> método é equivalente de <xref:System.Math.Abs%2A?displayProperty=nameWithType> método para os tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-289">The <xref:System.Numerics.BigInteger.Abs%2A> method is equivalent to the <xref:System.Math.Abs%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-290">O exemplo a seguir usa o <xref:System.Numerics.BigInteger.Abs%2A> método para converter um <xref:System.Numerics.BigInteger> valor de representação de complemento de dois a representação de sinal e magnitude antes serializando-o para um arquivo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-290">The following example uses the <xref:System.Numerics.BigInteger.Abs%2A> method to convert a <xref:System.Numerics.BigInteger> value from two's complement representation to sign-and-magnitude representation before serializing it to a file.</span></span> <span data-ttu-id="c19c5-291">Os dados no arquivo, em seguida, são desserializados e atribuídos a um novo <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-291">Data in the file is then deserialized and assigned to a new <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Abs(System.SByte)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Add (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Add(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Add(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Add (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-292">O primeiro valor a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-292">The first value to add.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-293">O segundo valor a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-293">The second value to add.</span></span></param>
        <summary><span data-ttu-id="c19c5-294">Adiciona dois valores de <see cref="T:System.Numerics.BigInteger" /> e retorna o resultado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-294">Adds two <see cref="T:System.Numerics.BigInteger" /> values and returns the result.</span></span></summary>
        <returns><span data-ttu-id="c19c5-295">A soma de <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-295">The sum of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-296">Idiomas que não dão suporte a sobrecarga de operador ou operadores personalizados podem usar o <xref:System.Numerics.BigInteger.Add%2A> método para executar a adição usando <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-296">Languages that do not support operator overloading or custom operators can use the <xref:System.Numerics.BigInteger.Add%2A> method to perform addition using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="c19c5-297">O <xref:System.Numerics.BigInteger.Add%2A> método é um substituto úteis para o operador de adição ao instanciar um <xref:System.Numerics.BigInteger> variável atribuindo a ela uma soma que resulta da adição, conforme mostrado no exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-297">The <xref:System.Numerics.BigInteger.Add%2A> method is a useful substitute for the addition operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a sum that results from addition, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (left As BigInteger, right As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; int" Usage="System.Numerics.BigInteger.Compare (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-298">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-298">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-299">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-299">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-300">Compara dois valores <see cref="T:System.Numerics.BigInteger" /> e retorna um inteiro que indica se o primeiro valor é menor que, igual a ou maior que o segundo valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-300">Compares two <see cref="T:System.Numerics.BigInteger" /> values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-301">Um inteiro assinado que indica os valores relativos de <paramref name="left" /> e <paramref name="right" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-301">A signed integer that indicates the relative values of <paramref name="left" /> and <paramref name="right" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="c19c5-302">Valor</span><span class="sxs-lookup"><span data-stu-id="c19c5-302">Value</span></span> 
 </term><description> <span data-ttu-id="c19c5-303">Condição</span><span class="sxs-lookup"><span data-stu-id="c19c5-303">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="c19c5-304">Menor que zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-304">Less than zero</span></span> 
 </term><description><span data-ttu-id="c19c5-305"><paramref name="left" /> é menor que <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-305"><paramref name="left" /> is less than <paramref name="right" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c19c5-306">Zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-306">Zero</span></span> 
 </term><description><span data-ttu-id="c19c5-307"><paramref name="left" /> é igual a <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-307"><paramref name="left" /> equals <paramref name="right" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c19c5-308">Maior que zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-308">Greater than zero</span></span> 
 </term><description><span data-ttu-id="c19c5-309"><paramref name="left" /> é maior que <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-309"><paramref name="left" /> is greater than <paramref name="right" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-310">Embora o <xref:System.Numerics.BigInteger> tipo não tem nenhum intervalo fixo, as comparações de <xref:System.Numerics.BigInteger> valores não são caracterizados por falta de precisão que caracteriza a comparação dos números de ponto flutuante.</span><span class="sxs-lookup"><span data-stu-id="c19c5-310">Although the <xref:System.Numerics.BigInteger> type has no fixed range, comparisons of <xref:System.Numerics.BigInteger> values are not characterized by the lack of precision that characterizes the comparison of floating-point numbers.</span></span> <span data-ttu-id="c19c5-311">O exemplo a seguir compara duas <xref:System.Numerics.BigInteger> valores que diferem por um e que cada têm 1,896 dígitos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-311">The following example compares two <xref:System.Numerics.BigInteger> values that differ by one and that each have 1,896 digits.</span></span> <span data-ttu-id="c19c5-312">O <xref:System.Numerics.BigInteger.Compare%2A> método relata corretamente se os dois valores não são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-312">The <xref:System.Numerics.BigInteger.Compare%2A> method correctly reports that the two values are not equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.CompareTo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-313">Compara o valor desta instância com outro valor e retorna um inteiro que indica se o valor desta instância é menor, igual ou maior que o outro valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-313">Compares the value of this instance with another value and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the other value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(long other);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : int64 -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="c19c5-314">O inteiro com sinal de 64 bits para comparar.</span><span class="sxs-lookup"><span data-stu-id="c19c5-314">The signed 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-315">Compara essa instância a um inteiro com sinal de 64 bits e retorna um inteiro que indica se o valor dessa instância é menor, igual ou maior que o valor do inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-315">Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="c19c5-316">Um valor de inteiro com sinal que indica a relação desta instância com <paramref name="other" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-316">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="c19c5-317">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="c19c5-317">Return value</span></span> 
 </term><description> <span data-ttu-id="c19c5-318">Descrição</span><span class="sxs-lookup"><span data-stu-id="c19c5-318">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="c19c5-319">Menor que zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-319">Less than zero</span></span> 
 </term><description> <span data-ttu-id="c19c5-320">A instância atual é menor que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-320">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c19c5-321">Zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-321">Zero</span></span> 
 </term><description> <span data-ttu-id="c19c5-322">A instância atual é igual a <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-322">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c19c5-323">Maior que zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-323">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="c19c5-324">A instância atual é maior que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-324">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-325">Se `other` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando o <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-325">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-326">O exemplo a seguir ilustra o resultado de chamar o <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> método com valores inteiros.</span><span class="sxs-lookup"><span data-stu-id="c19c5-326">The following example illustrates the result of calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method with integral values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#3)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Numerics::BigInteger other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : System.Numerics.BigInteger -&gt; int&#xA;override this.CompareTo : System.Numerics.BigInteger -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="c19c5-327">O objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-327">The object to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-328">Compara esta instância a um segundo <see cref="T:System.Numerics.BigInteger" /> e retorna um inteiro que indica se o valor desta instância é menor, igual ou maior que o valor do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-328">Compares this instance to a second <see cref="T:System.Numerics.BigInteger" /> and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="c19c5-329">Um valor de inteiro com sinal que indica a relação desta instância com <paramref name="other" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-329">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="c19c5-330">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="c19c5-330">Return value</span></span> 
 </term><description> <span data-ttu-id="c19c5-331">Descrição</span><span class="sxs-lookup"><span data-stu-id="c19c5-331">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="c19c5-332">Menor que zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-332">Less than zero</span></span> 
 </term><description> <span data-ttu-id="c19c5-333">A instância atual é menor que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-333">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c19c5-334">Zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-334">Zero</span></span> 
 </term><description> <span data-ttu-id="c19c5-335">A instância atual é igual a <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-335">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c19c5-336">Maior que zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-336">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="c19c5-337">A instância atual é maior que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-337">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-338">Essa sobrecarga da <xref:System.Numerics.BigInteger.CompareTo%2A> método implementa o <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-338">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c19c5-339">Ele é usado por objetos de coleção genérica para ordenar os itens na coleção.</span><span class="sxs-lookup"><span data-stu-id="c19c5-339">It is used by generic collection objects to order the items in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-340">O exemplo a seguir ilustra o uso do <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> método para solicitar uma lista de `StarInfo` objetos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-340">The following example illustrates the use of the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> method to order a list of `StarInfo` objects.</span></span> <span data-ttu-id="c19c5-341">Cada `StarInfo` objeto fornece informações sobre o nome de uma estrela e sua distância da Terra em milhas.</span><span class="sxs-lookup"><span data-stu-id="c19c5-341">Each `StarInfo` object provides information about a star's name and its distance from the Earth in miles.</span></span> <span data-ttu-id="c19c5-342">`StarInfo` implementa o <xref:System.IComparable%601> da interface, que permite que `StarInfo` objetos a serem classificados pelas classes de coleção genérica.</span><span class="sxs-lookup"><span data-stu-id="c19c5-342">`StarInfo` implements the <xref:System.IComparable%601> interface, which enables `StarInfo` objects to be sorted by generic collection classes.</span></span> <span data-ttu-id="c19c5-343">Sua <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> implementação simplesmente encapsula uma chamada para <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-343">Its <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> implementation just wraps a call to <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#1)]  
  
 <span data-ttu-id="c19c5-344">O código a seguir, em seguida, cria uma instância de quatro `StarInfo` objetos e os armazena em um genérico <xref:System.Collections.Generic.List%601> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-344">The following code then instantiates four `StarInfo` objects and stores them in a generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="c19c5-345">Após o <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> método é chamado, `StarInfo` objetos são exibidos em ordem de sua distância da Terra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-345">After the <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> method is called, `StarInfo` objects are displayed in order of their distance from the Earth.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="bigInteger.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c19c5-346">O objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-346">The object to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-347">Compara esta instância a um objeto especificado e retorna um inteiro que indica se o valor desta instância é menor, igual ou maior que o valor do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-347">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="c19c5-348">Um inteiro com sinal que indica a relação da instância atual com o parâmetro <paramref name="obj" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-348">A signed integer that indicates the relationship of the current instance to the <paramref name="obj" /> parameter, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="c19c5-349">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="c19c5-349">Return value</span></span> 
 </term><description> <span data-ttu-id="c19c5-350">Descrição</span><span class="sxs-lookup"><span data-stu-id="c19c5-350">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="c19c5-351">Menor que zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-351">Less than zero</span></span> 
 </term><description> <span data-ttu-id="c19c5-352">A instância atual é menor que <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-352">The current instance is less than <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c19c5-353">Zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-353">Zero</span></span> 
 </term><description> <span data-ttu-id="c19c5-354">A instância atual é igual a <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-354">The current instance equals <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c19c5-355">Maior que zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-355">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="c19c5-356">A instância atual é maior do que <paramref name="obj" /> ou o parâmetro <paramref name="obj" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-356">The current instance is greater than <paramref name="obj" />, or the <paramref name="obj" /> parameter is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-357">Essa sobrecarga da <xref:System.Numerics.BigInteger.CompareTo%2A> método implementa o <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-357">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c19c5-358">Ele é usado por objetos de coleção não genéricas para ordenar os itens na coleção.</span><span class="sxs-lookup"><span data-stu-id="c19c5-358">It is used by non-generic collection objects to order the items in the collection.</span></span>  
  
 <span data-ttu-id="c19c5-359">O `obj` parâmetro deve ser um dos seguintes:</span><span class="sxs-lookup"><span data-stu-id="c19c5-359">The `obj` parameter must be one of the following:</span></span>  
  
-   <span data-ttu-id="c19c5-360">Um objeto cujo tipo de tempo de execução é <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-360">An object whose run-time type is <xref:System.Numerics.BigInteger>.</span></span>  
  
-   <span data-ttu-id="c19c5-361">Uma <xref:System.Object> variável cujo valor é `null`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-361">An <xref:System.Object> variable whose value is `null`.</span></span> <span data-ttu-id="c19c5-362">Se o valor da `obj` parâmetro é `null`, o método retorna 1, que indica que a instância atual é maior do que `obj`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-362">If the value of the `obj` parameter is `null`, the method returns 1, which indicates that that the current instance is greater than `obj`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-363">A exemplo a seguir chama o <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> método para comparar um <xref:System.Numerics.BigInteger> valor com cada elemento em uma matriz de objetos</span><span class="sxs-lookup"><span data-stu-id="c19c5-363">The following example calls the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method to compare a <xref:System.Numerics.BigInteger> value with each element in an object array</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c19c5-364"><paramref name="obj" /> não é um <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-364"><paramref name="obj" /> is not a <see cref="T:System.Numerics.BigInteger" />.</span></span></exception>
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::UInt64 other);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : uint64 -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="c19c5-365">O inteiro sem sinal de 64 bits para comparar.</span><span class="sxs-lookup"><span data-stu-id="c19c5-365">The unsigned 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-366">Compara essa instância a um inteiro sem sinal de 64 bits e retorna um inteiro que indica se o valor dessa instância é menor, igual ou maior que o valor do inteiro sem sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-366">Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="c19c5-367">Um inteiro com sinal que indica o valor relativo dessa instância e <paramref name="other" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-367">A signed integer that indicates the relative value of this instance and <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="c19c5-368">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="c19c5-368">Return value</span></span> 
 </term><description> <span data-ttu-id="c19c5-369">Descrição</span><span class="sxs-lookup"><span data-stu-id="c19c5-369">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="c19c5-370">Menor que zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-370">Less than zero</span></span> 
 </term><description> <span data-ttu-id="c19c5-371">A instância atual é menor que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-371">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c19c5-372">Zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-372">Zero</span></span> 
 </term><description> <span data-ttu-id="c19c5-373">A instância atual é igual a <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-373">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c19c5-374">Maior que zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-374">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="c19c5-375">A instância atual é maior que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-375">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Divide (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Divide(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Divide(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Divide (dividend, divisor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="c19c5-376">O valor a ser dividido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-376">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="c19c5-377">O valor pelo qual dividir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-377">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="c19c5-378">Divide um valor <see cref="T:System.Numerics.BigInteger" /> em outro e retorna o resultado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-378">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another and returns the result.</span></span></summary>
        <returns><span data-ttu-id="c19c5-379">O quociente da divisão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-379">The quotient of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-380">O <xref:System.Numerics.BigInteger.Divide%2A> método executa a divisão de inteiro; qualquer resto que resulta da divisão é descartado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-380">The <xref:System.Numerics.BigInteger.Divide%2A> method performs integer division; any remainder that results from the division is discarded.</span></span> <span data-ttu-id="c19c5-381">Para executar a divisão de inteiros, preservando o resto, chamar o <xref:System.Numerics.BigInteger.DivRem%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-381">To perform integer division while preserving the remainder, call the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span> <span data-ttu-id="c19c5-382">Para recuperar apenas o resto, chame o <xref:System.Numerics.BigInteger.Remainder%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-382">To retrieve only the remainder, call the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="c19c5-383">O <xref:System.Numerics.BigInteger.Divide%2A> método pode ser usado por idiomas que não dão suporte a sobrecarga de operador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-383">The <xref:System.Numerics.BigInteger.Divide%2A> method can be used by languages that do not support operator overloading.</span></span> <span data-ttu-id="c19c5-384">Seu comportamento é idêntico à divisão usando o operador de divisão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-384">Its behavior is identical to division using the division operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-385">O exemplo a seguir cria uma matriz de <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-385">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-386">Ele usa, em seguida, cada elemento como o quociente em uma operação de divisão que usa o <xref:System.Numerics.BigInteger.Divide%2A> método, o operador de divisão (/) e o <xref:System.Numerics.BigInteger.DivRem%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-386">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="c19c5-387"><paramref name="divisor" /> é 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="c19c5-387"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger DivRem (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor, out System.Numerics.BigInteger remainder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger DivRem(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor, [out] valuetype System.Numerics.BigInteger&amp; remainder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (dividend As BigInteger, divisor As BigInteger, ByRef remainder As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger DivRem(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor, [Runtime::InteropServices::Out] System::Numerics::BigInteger % remainder);" />
      <MemberSignature Language="F#" Value="static member DivRem : System.Numerics.BigInteger * System.Numerics.BigInteger *  -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.DivRem (dividend, divisor, remainder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
        <Parameter Name="remainder" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="c19c5-388">O valor a ser dividido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-388">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="c19c5-389">O valor pelo qual dividir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-389">The value to divide by.</span></span></param>
        <param name="remainder"><span data-ttu-id="c19c5-390">Quando este método retorna, contém um valor <see cref="T:System.Numerics.BigInteger" /> que representa o restante da divisão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-390">When this method returns, contains a <see cref="T:System.Numerics.BigInteger" /> value that represents the remainder from the division.</span></span> <span data-ttu-id="c19c5-391">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-391">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="c19c5-392">Divide um valor <see cref="T:System.Numerics.BigInteger" /> por outro, retorna o resultado e retorna o restante em um parâmetro de saída.</span><span class="sxs-lookup"><span data-stu-id="c19c5-392">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another, returns the result, and returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="c19c5-393">O quociente da divisão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-393">The quotient of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-394">Esse método preserva o quociente e o resto que resulta da divisão de inteiros.</span><span class="sxs-lookup"><span data-stu-id="c19c5-394">This method preserves both the quotient and the remainder that results from integer division.</span></span> <span data-ttu-id="c19c5-395">Se você não estiver interessado no restante, use o <xref:System.Numerics.BigInteger.Divide%2A> método ou o operador de divisão; se você estiver apenas interessado no restante, use o <xref:System.Numerics.BigInteger.Remainder%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-395">If you are not interested in the remainder, use the <xref:System.Numerics.BigInteger.Divide%2A> method or the division operator; if you are only interested in the remainder, use the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="c19c5-396">O sinal do retornado `remainder` valor é o mesmo que o sinal do `dividend` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="c19c5-396">The sign of the returned `remainder` value is the same as the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="c19c5-397">O comportamento do <xref:System.Numerics.BigInteger.DivRem%2A> método é idêntico do <xref:System.Math.DivRem%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-397">The behavior of the <xref:System.Numerics.BigInteger.DivRem%2A> method is identical to that of the <xref:System.Math.DivRem%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-398">O exemplo a seguir cria uma matriz de <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-398">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-399">Ele usa, em seguida, cada elemento como o quociente em uma operação de divisão que usa o <xref:System.Numerics.BigInteger.Divide%2A> método, o operador de divisão (/) e o <xref:System.Numerics.BigInteger.DivRem%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-399">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="c19c5-400"><paramref name="divisor" /> é 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="c19c5-400"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-401">Retorna um valor que indica se dois valores numéricos são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-401">Returns a value that indicates whether two numeric values are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(long other);" />
      <MemberSignature Language="F#" Value="override this.Equals : int64 -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="c19c5-402">O valor inteiro com sinal de 64 bits para comparar.</span><span class="sxs-lookup"><span data-stu-id="c19c5-402">The signed 64-bit integer value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-403">Retorna um valor que indica se a instância atual e um inteiro com sinal de 64 bits têm o mesmo valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-403">Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-404"><see langword="true" /> se o inteiro com sinal de 64 bits e a instância atual tiverem o mesmo valor; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-404"><see langword="true" /> if the signed 64-bit integer and the current instance have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-405">Se `other` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-405">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the method is called.</span></span>  
  
 <span data-ttu-id="c19c5-406">Para determinar a relação entre os dois objetos em vez de apenas Testando a igualdade, chame o <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-406">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-407">O exemplo a seguir instancia um <xref:System.Numerics.BigInteger> objeto de cada tipo integral exceto <xref:System.UInt64>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-407">The following example instantiates a <xref:System.Numerics.BigInteger> object from each integral type except <xref:System.UInt64>.</span></span> <span data-ttu-id="c19c5-408">Em seguida, ele chama o <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> método a ser comparado a <xref:System.Numerics.BigInteger> valor com o valor de inteiro original que foi passado para o <xref:System.Numerics.BigInteger> construtor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-408">It then calls the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> method to compare the <xref:System.Numerics.BigInteger> value with the original integer value that was passed to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="c19c5-409">Como mostra a saída, os valores são iguais em cada caso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-409">As the output shows, the values are equal in each case.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals.cpp#1)]
 [!code-csharp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Numerics::BigInteger other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Numerics.BigInteger -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="c19c5-410">O objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-410">The object to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-411">Retorna um valor que indica se a instância atual e um objeto <see cref="T:System.Numerics.BigInteger" /> especificado têm o mesmo valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-411">Returns a value that indicates whether the current instance and a specified <see cref="T:System.Numerics.BigInteger" /> object have the same value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-412"><see langword="true" /> se este objeto <see cref="T:System.Numerics.BigInteger" /> e <paramref name="other" /> tiverem o mesmo valor; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-412"><see langword="true" /> if this <see cref="T:System.Numerics.BigInteger" /> object and <paramref name="other" /> have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-413">Esse método implementa o <xref:System.IEquatable%601> da interface e executa um pouco melhor do que <xref:System.Numerics.BigInteger.Equals%28System.Object%29> porque ele não tem que converter a `other` parâmetro para um <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-413">This method implements the <xref:System.IEquatable%601> interface and performs slightly better than <xref:System.Numerics.BigInteger.Equals%28System.Object%29> because it does not have to convert the `other` parameter to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="c19c5-414">Para determinar a relação entre os dois <xref:System.Numerics.BigInteger> objetos, em vez de apenas Testando a igualdade, chamar o <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-414">To determine the relationship between the two <xref:System.Numerics.BigInteger> objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-415">O exemplo a seguir compara a distância aproximada de várias estrelas de Terra com a distância do Épsilon indicada de terra para determinar se eles são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-415">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="c19c5-416">O exemplo usa cada sobrecarga da <xref:System.Numerics.BigInteger.Equals%2A> método para testar a igualdade.</span><span class="sxs-lookup"><span data-stu-id="c19c5-416">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bigInteger.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c19c5-417">O objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-417">The object to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-418">Retorna um valor que indica se a instância atual e um objeto especificado têm o mesmo valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-418">Returns a value that indicates whether the current instance and a specified object have the same value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-419"><see langword="true" /> se o <paramref name="obj" /> argumento for um objeto <see cref="T:System.Numerics.BigInteger" /> e seu valor for igual ao valor da instância <see cref="T:System.Numerics.BigInteger" /> atual; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-419"><see langword="true" /> if the <paramref name="obj" /> argument is a <see cref="T:System.Numerics.BigInteger" /> object, and its value is equal to the value of the current <see cref="T:System.Numerics.BigInteger" /> instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-420">Se o `obj` argumento não é um <xref:System.Numerics.BigInteger> de valor, o método retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-420">If the `obj` argument is not a <xref:System.Numerics.BigInteger> value, the method returns `false`.</span></span> <span data-ttu-id="c19c5-421">O método retornará `true` somente se `obj` é um <xref:System.Numerics.BigInteger> instância cujo valor é igual à instância atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-421">The method returns `true` only if `obj` is a <xref:System.Numerics.BigInteger> instance whose value is equal to the current instance.</span></span>  
  
 <span data-ttu-id="c19c5-422">Para determinar a relação entre os dois objetos em vez de apenas Testando a igualdade, chame o <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-422">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-423">O exemplo a seguir define paralelo <xref:System.Object> e <xref:System.Numerics.BigInteger> matrizes.</span><span class="sxs-lookup"><span data-stu-id="c19c5-423">The following example defines parallel <xref:System.Object> and <xref:System.Numerics.BigInteger> arrays.</span></span> <span data-ttu-id="c19c5-424">Cada elemento de uma matriz tem o mesmo valor que o elemento correspondente da segunda matriz.</span><span class="sxs-lookup"><span data-stu-id="c19c5-424">Each element of one array has the same value as the corresponding element of the second array.</span></span> <span data-ttu-id="c19c5-425">Como a saída do exemplo mostra, a instância no <xref:System.Numerics.BigInteger> matriz é considerada igual à instância das <xref:System.Object> matriz somente se o último é um <xref:System.Numerics.BigInteger> e seus valores são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-425">As the output from the example shows, the instance in the <xref:System.Numerics.BigInteger> array is considered to be equal to the instance in the <xref:System.Object> array only if the latter is a <xref:System.Numerics.BigInteger> and their values are equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/Equals_Obj1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/Equals_Obj1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::UInt64 other);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint64 -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="c19c5-426">O inteiro sem sinal de 64 bits para comparar.</span><span class="sxs-lookup"><span data-stu-id="c19c5-426">The unsigned 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-427">Retorna um valor que indica se a instância atual e um inteiro sem sinal de 64 bits têm o mesmo valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-427">Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-428"><see langword="true" /> se a instância atual e o inteiro sem sinal de 64 bits tiverem o mesmo valor; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-428"><see langword="true" /> if the current instance and the unsigned 64-bit integer have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-429">Para determinar a relação entre os dois objetos em vez de apenas Testando a igualdade, chame o <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-429">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-430">O exemplo a seguir compara a distância aproximada de várias estrelas de Terra com a distância do Épsilon indicada de terra para determinar se eles são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-430">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="c19c5-431">O exemplo usa cada sobrecarga da <xref:System.Numerics.BigInteger.Equals%2A> método para testar a igualdade.</span><span class="sxs-lookup"><span data-stu-id="c19c5-431">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public int GetByteCount (bool isUnsigned = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetByteCount(bool isUnsigned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetByteCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteCount (Optional isUnsigned As Boolean = false) As Integer" />
      <MemberSignature Language="F#" Value="member this.GetByteCount : bool -&gt; int" Usage="bigInteger.GetByteCount isUnsigned" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isUnsigned">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bigInteger.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c19c5-432">Retorna o código hash para o objeto <see cref="T:System.Numerics.BigInteger" /> atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-432">Returns the hash code for the current <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <returns><span data-ttu-id="c19c5-433">Um código de hash do inteiro assinado de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-433">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreatestCommonDivisor">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger GreatestCommonDivisor (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger GreatestCommonDivisor(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreatestCommonDivisor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger GreatestCommonDivisor(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member GreatestCommonDivisor : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.GreatestCommonDivisor (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-434">O primeiro valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-434">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-435">O segundo valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-435">The second value.</span></span></param>
        <summary><span data-ttu-id="c19c5-436">Localiza o maior divisor comum de dois valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-436">Finds the greatest common divisor of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="c19c5-437">O maior divisor comum de <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-437">The greatest common divisor of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-438">O maior divisor comum é o maior número na qual os dois <xref:System.Numerics.BigInteger> valores podem ser divididos sem retornar um resto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-438">The greatest common divisor is the largest number into which the two <xref:System.Numerics.BigInteger> values can be divided without returning a remainder.</span></span>  
  
 <span data-ttu-id="c19c5-439">Se o `left` e `right` parâmetros são números diferentes de zero, o método sempre retorna pelo menos um valor de 1, porque todos os números podem ser divididos em 1.</span><span class="sxs-lookup"><span data-stu-id="c19c5-439">If the `left` and `right` parameters are non-zero numbers, the method always returns at least a value of 1 because all numbers can be divided by 1.</span></span> <span data-ttu-id="c19c5-440">Se o parâmetro é zero, o método retorna o valor absoluto do parâmetro diferente de zero.</span><span class="sxs-lookup"><span data-stu-id="c19c5-440">If either parameter is zero, the method returns the absolute value of the non-zero parameter.</span></span> <span data-ttu-id="c19c5-441">Se os dois valores forem zero, o método retorna zero.</span><span class="sxs-lookup"><span data-stu-id="c19c5-441">If both values are zero, the method returns zero.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c19c5-442">O máximo divisor comum de valores muito grandes de computação `left` e `right` pode ser uma operação muito demorada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-442">Computing the greatest common divisor of very large values of `left` and `right` can be a very time-consuming operation.</span></span>  
  
 <span data-ttu-id="c19c5-443">O valor retornado pela <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> método sempre é positivo, independentemente do sinal do `left` e `right` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="c19c5-443">The value returned by the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method is always positive regardless of the sign of the `left` and `right` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-444">O exemplo a seguir ilustra uma chamada para o <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> método de manipulação e exceções necessárias para fornecer informações úteis sobre um <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-444">The following example illustrates a call to the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method and the exception handling necessary to provide useful information about an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="c19c5-445">O resultado indica que o máximo divisor comum desses dois números é 1.</span><span class="sxs-lookup"><span data-stu-id="c19c5-445">The result indicates that the greatest common divisor of these two numbers is 1.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#10)]
 [!code-vb[System.Numeric.BigInteger.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEven">
      <MemberSignature Language="C#" Value="public bool IsEven { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEven" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsEven" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEven As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEven { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEven : bool" Usage="System.Numerics.BigInteger.IsEven" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c19c5-446">Indica se o valor do objeto <see cref="T:System.Numerics.BigInteger" /> atual é um número par.</span><span class="sxs-lookup"><span data-stu-id="c19c5-446">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is an even number.</span></span></summary>
        <value><span data-ttu-id="c19c5-447"><see langword="true" /> se o valor do objeto <see cref="T:System.Numerics.BigInteger" /> é um número par; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-447"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is an even number; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-448">Esta propriedade é um recurso conveniente que indica se um <xref:System.Numerics.BigInteger> valor é igualmente divisível por dois.</span><span class="sxs-lookup"><span data-stu-id="c19c5-448">This property is a convenience feature that indicates whether a <xref:System.Numerics.BigInteger> value is evenly divisible by two.</span></span> <span data-ttu-id="c19c5-449">É equivalente à expressão a seguir:</span><span class="sxs-lookup"><span data-stu-id="c19c5-449">It is equivalent to the following expression:</span></span>  
  
```csharp   
value % 2 == 0;  
```  
  
```vb  
value Mod 2 = 0  
```  
  
 <span data-ttu-id="c19c5-450">Se o valor do atual <xref:System.Numerics.BigInteger> objeto está <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>, a propriedade retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-450">If the value of the current <xref:System.Numerics.BigInteger> object is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>, the property returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOne">
      <MemberSignature Language="C#" Value="public bool IsOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsOne" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOne As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOne { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOne : bool" Usage="System.Numerics.BigInteger.IsOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c19c5-451">Indica se o valor do objeto <see cref="T:System.Numerics.BigInteger" /> atual é <see cref="P:System.Numerics.BigInteger.One" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-451">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />.</span></span></summary>
        <value><span data-ttu-id="c19c5-452"><see langword="true" /> Se o valor de <see cref="T:System.Numerics.BigInteger" /> objeto está <see cref="P:System.Numerics.BigInteger.One" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-452"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-453">Essa propriedade oferece um desempenho significativamente melhor que outros comparações com um, tais como `thisBigInteger.Equals(BigInteger.One)`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-453">This property offers significantly better performance than other comparisons with one, such as `thisBigInteger.Equals(BigInteger.One)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
      </Docs>
    </Member>
    <Member MemberName="IsPowerOfTwo">
      <MemberSignature Language="C#" Value="public bool IsPowerOfTwo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPowerOfTwo" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsPowerOfTwo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPowerOfTwo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPowerOfTwo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPowerOfTwo : bool" Usage="System.Numerics.BigInteger.IsPowerOfTwo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c19c5-454">Indica se o valor do objeto <see cref="T:System.Numerics.BigInteger" /> atual é uma potência de dois.</span><span class="sxs-lookup"><span data-stu-id="c19c5-454">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is a power of two.</span></span></summary>
        <value><span data-ttu-id="c19c5-455"><see langword="true" /> Se o valor de <see cref="T:System.Numerics.BigInteger" /> objeto é uma potência de dois; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-455"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is a power of two; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-456">Essa propriedade determina se um <xref:System.Numerics.BigInteger> valor tem um único bit diferente de zero definido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-456">This property determines whether a <xref:System.Numerics.BigInteger> value has a single non-zero bit set.</span></span> <span data-ttu-id="c19c5-457">Isso significa que ele retorna `true` se o valor do atual <xref:System.Numerics.BigInteger> objeto é 1 (ou seja, 2<sup>0</sup>) ou qualquer maior potência de dois.</span><span class="sxs-lookup"><span data-stu-id="c19c5-457">This means that it returns `true` if the value of the current <xref:System.Numerics.BigInteger> object is 1 (that is, 2<sup>0</sup>) or any greater power of two.</span></span> <span data-ttu-id="c19c5-458">Ele retorna `false` se o valor do atual <xref:System.Numerics.BigInteger> objeto é 0.</span><span class="sxs-lookup"><span data-stu-id="c19c5-458">It returns `false` if the value of the current <xref:System.Numerics.BigInteger> object is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsZero">
      <MemberSignature Language="C#" Value="public bool IsZero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsZero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsZero" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsZero As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsZero { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsZero : bool" Usage="System.Numerics.BigInteger.IsZero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c19c5-459">Indica se o valor do objeto <see cref="T:System.Numerics.BigInteger" /> atual é <see cref="P:System.Numerics.BigInteger.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-459">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />.</span></span></summary>
        <value><span data-ttu-id="c19c5-460"><see langword="true" /> Se o valor de <see cref="T:System.Numerics.BigInteger" /> objeto está <see cref="P:System.Numerics.BigInteger.Zero" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-460"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-461">Essa propriedade oferece um desempenho significativamente melhor que `BigInteger.Equals(BigInteger.Zero)`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-461">This property offers significantly better performance than `BigInteger.Equals(BigInteger.Zero)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.Zero" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-462">Retorna o logaritmo de um número especificado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-462">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Log : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.Log value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-463">O número cujo logaritmo deve ser encontrado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-463">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="c19c5-464">Retorna o logaritmo natural (de base <see langword="e" />) de um número especificado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-464">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="c19c5-465">O logaritmo natural (base <see langword="e" />) de <paramref name="value" />, conforme mostrado na tabela na seção Comentários.</span><span class="sxs-lookup"><span data-stu-id="c19c5-465">The natural (base <see langword="e" />) logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-466">O `value` parâmetro é especificado como um número de base 10.</span><span class="sxs-lookup"><span data-stu-id="c19c5-466">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="c19c5-467">Retorna o exato depende do valor desse método o sinal do `value`, como mostra a tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-467">The precise return value of this method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="c19c5-468">Inscreva-se de `value` parâmetro</span><span class="sxs-lookup"><span data-stu-id="c19c5-468">Sign of `value` parameter</span></span>|<span data-ttu-id="c19c5-469">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="c19c5-469">Return value</span></span>|  
|-------------------------------|------------------|  
|<span data-ttu-id="c19c5-470">Positivo</span><span class="sxs-lookup"><span data-stu-id="c19c5-470">Positive</span></span>|<span data-ttu-id="c19c5-471">O logaritmo natural de `value`; ou seja, ln `value`, ou log e`value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-471">The natural logarithm of `value`; that is, ln `value`, or log e`value`.</span></span>|  
|<span data-ttu-id="c19c5-472">Zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-472">Zero</span></span>|<span data-ttu-id="c19c5-473"><xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-473"><xref:System.Double.NegativeInfinity>.</span></span>|  
|<span data-ttu-id="c19c5-474">Negativo</span><span class="sxs-lookup"><span data-stu-id="c19c5-474">Negative</span></span>|<span data-ttu-id="c19c5-475"><xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-475"><xref:System.Double.NaN>.</span></span>|  
  
 <span data-ttu-id="c19c5-476">Para calcular o logaritmo de base 10 de um <xref:System.Numerics.BigInteger> de valor, chame o <xref:System.Numerics.BigInteger.Log10%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-476">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="c19c5-477">Para calcular o logaritmo de um número em outra base, chame o <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-477">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> method.</span></span>  
  
 <span data-ttu-id="c19c5-478">Você pode encontrar a raiz quadrada de um número chamando o <xref:System.Numerics.BigInteger.Log%2A> método junto com o <xref:System.Math.Exp%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-478">You can find the square root of a number by calling the <xref:System.Numerics.BigInteger.Log%2A> method along with the <xref:System.Math.Exp%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c19c5-479">Observe que o resultado será <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> se o resultado for maior que <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-479">Note that the result is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> if the result is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c19c5-480">O exemplo a seguir calcula a raiz quadrada de cada elemento em uma matriz de <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-480">The following example calculates the square root of each element in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Log#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.biginteger.log/cs/log1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Log#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.biginteger.log/vb/log1.vb#1)]
  
 <span data-ttu-id="c19c5-481">Esse método corresponde à <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> método para os tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-481">This method corresponds to the <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c19c5-482">O log natural de <paramref name="value" /> está fora do intervalo do tipo de dados <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-482">The natural log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value, double baseValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value, float64 baseValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger, baseValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value, double baseValue);" />
      <MemberSignature Language="F#" Value="static member Log : System.Numerics.BigInteger * double -&gt; double" Usage="System.Numerics.BigInteger.Log (value, baseValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="baseValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-483">Um número cujo logaritmo deve ser localizado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-483">A number whose logarithm is to be found.</span></span></param>
        <param name="baseValue"><span data-ttu-id="c19c5-484">A base do logaritmo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-484">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="c19c5-485">Retorna o logaritmo de um número especificado em uma base especificada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-485">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="c19c5-486">O logaritmo de base <paramref name="baseValue" /> de <paramref name="value" />, conforme mostrado na tabela na seção Comentários.</span><span class="sxs-lookup"><span data-stu-id="c19c5-486">The base <paramref name="baseValue" /> logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-487">O `value` e `baseValue` são especificados como 10 números de base.</span><span class="sxs-lookup"><span data-stu-id="c19c5-487">The `value` and `baseValue` parameters are specified as base 10 numbers.</span></span>  
  
 <span data-ttu-id="c19c5-488">Retorna o exato depende do valor do método do sinal de `value` e de entrada e o valor de `baseValue`, como mostra a tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-488">The precise return value of the method depends on the sign of `value` and on the sign and value of `baseValue`, as the following table shows.</span></span>  
  
|<span data-ttu-id="c19c5-489">Parâmetro `value`</span><span class="sxs-lookup"><span data-stu-id="c19c5-489">`value` parameter</span></span>|<span data-ttu-id="c19c5-490">Parâmetro `baseValue`</span><span class="sxs-lookup"><span data-stu-id="c19c5-490">`baseValue` parameter</span></span>|<span data-ttu-id="c19c5-491">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="c19c5-491">Return value</span></span>|  
|-----------------------|---------------------------|------------------|  
|<span data-ttu-id="c19c5-492">`value` > 0</span><span class="sxs-lookup"><span data-stu-id="c19c5-492">`value` > 0</span></span>|<span data-ttu-id="c19c5-493">(0 < `baseValue` < 1) - ou -(`baseValue` > 1)</span><span class="sxs-lookup"><span data-stu-id="c19c5-493">(0 < `baseValue` < 1) -or-(`baseValue` > 1)</span></span>|<span data-ttu-id="c19c5-494">logbaseValue(`value`)</span><span class="sxs-lookup"><span data-stu-id="c19c5-494">logbaseValue(`value`)</span></span>|  
|<span data-ttu-id="c19c5-495">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="c19c5-495">`value` < 0</span></span>|<span data-ttu-id="c19c5-496">(nenhum valor)</span><span class="sxs-lookup"><span data-stu-id="c19c5-496">(any value)</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="c19c5-497">(nenhum valor)</span><span class="sxs-lookup"><span data-stu-id="c19c5-497">(any value)</span></span>|<span data-ttu-id="c19c5-498">`baseValue` < 0</span><span class="sxs-lookup"><span data-stu-id="c19c5-498">`baseValue` < 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="c19c5-499">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="c19c5-499">`value` != 1</span></span>|<span data-ttu-id="c19c5-500">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="c19c5-500">`baseValue` = 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="c19c5-501">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="c19c5-501">`value` != 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="c19c5-502">(nenhum valor)</span><span class="sxs-lookup"><span data-stu-id="c19c5-502">(any value)</span></span>|`baseValue` = <xref:System.Double.NaN?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="c19c5-503">(nenhum valor)</span><span class="sxs-lookup"><span data-stu-id="c19c5-503">(any value)</span></span>|<span data-ttu-id="c19c5-504">`baseValue` = 1</span><span class="sxs-lookup"><span data-stu-id="c19c5-504">`baseValue` = 1</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="c19c5-505">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="c19c5-505">`value` = 0</span></span>|<span data-ttu-id="c19c5-506">0 < `baseValue` < 1</span><span class="sxs-lookup"><span data-stu-id="c19c5-506">0 < `baseValue` < 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="c19c5-507">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="c19c5-507">`value` = 0</span></span>|<span data-ttu-id="c19c5-508">`baseValue` > 1</span><span class="sxs-lookup"><span data-stu-id="c19c5-508">`baseValue` > 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="c19c5-509">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="c19c5-509">`value` = 1</span></span>|<span data-ttu-id="c19c5-510">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="c19c5-510">`baseValue` = 0</span></span>|<span data-ttu-id="c19c5-511">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-511">0</span></span>|  
|<span data-ttu-id="c19c5-512">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="c19c5-512">`value` = 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<span data-ttu-id="c19c5-513">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-513">0</span></span>|  
  
 <span data-ttu-id="c19c5-514">Para calcular o logaritmo de base 10 de um <xref:System.Numerics.BigInteger> de valor, chame o <xref:System.Numerics.BigInteger.Log10%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-514">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="c19c5-515">Para calcular o logaritmo natural de um número, chame o <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-515">To calculate the natural logarithm of a number, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> method.</span></span>  
  
 <span data-ttu-id="c19c5-516">Esse método corresponde à <xref:System.Math.Log%2A?displayProperty=nameWithType> método para os tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-516">This method corresponds to the <xref:System.Math.Log%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c19c5-517">O log de <paramref name="value" /> está fora do intervalo do tipo de dados <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-517">The log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Log10 : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.Log10 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-518">Um número cujo logaritmo deve ser localizado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-518">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="c19c5-519">Retorna o logaritmo de base 10 de um número especificado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-519">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="c19c5-520">O logaritmo de base 10 de <paramref name="value" />, conforme mostrado na tabela na seção Comentários.</span><span class="sxs-lookup"><span data-stu-id="c19c5-520">The base 10 logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-521">O `value` parâmetro é especificado como um número de base 10.</span><span class="sxs-lookup"><span data-stu-id="c19c5-521">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="c19c5-522">Retorna o exato depende do valor do método o sinal do `value`, como mostra a tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-522">The precise return value of the method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="c19c5-523">Entrada de parâmetro de valor</span><span class="sxs-lookup"><span data-stu-id="c19c5-523">Sign of value parameter</span></span>|<span data-ttu-id="c19c5-524">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="c19c5-524">Return value</span></span>|  
|-----------------------------|------------------|  
|<span data-ttu-id="c19c5-525">Positivo</span><span class="sxs-lookup"><span data-stu-id="c19c5-525">Positive</span></span>|<span data-ttu-id="c19c5-526">O log de base 10 `value`; ou seja, log10`value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-526">The base 10 log of `value`; that is, log10`value`.</span></span>|  
|<span data-ttu-id="c19c5-527">Zero</span><span class="sxs-lookup"><span data-stu-id="c19c5-527">Zero</span></span>|<span data-ttu-id="c19c5-528"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-528"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="c19c5-529">Negativo</span><span class="sxs-lookup"><span data-stu-id="c19c5-529">Negative</span></span>|<span data-ttu-id="c19c5-530"><xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-530"><xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>|  
  
 <span data-ttu-id="c19c5-531">Para calcular o logaritmo natural de um <xref:System.Numerics.BigInteger> de valor, chame o <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-531">To calculate the natural logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c19c5-532">Para calcular o logaritmo de um número em outra base, chame o <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-532">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="c19c5-533">Esse método corresponde à <xref:System.Math.Log10%2A?displayProperty=nameWithType> método para os tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-533">This method corresponds to the <xref:System.Math.Log10%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c19c5-534">O log de base 10 de <paramref name="value" /> está fora do intervalo do tipo de dados <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-534">The base 10 log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Max (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Max(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Max(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Max (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-535">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-535">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-536">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-536">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-537">Retorna o maior dos dois valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-537">Returns the larger of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="c19c5-538">O parâmetro <paramref name="left" /> ou <paramref name="right" />, o que for maior.</span><span class="sxs-lookup"><span data-stu-id="c19c5-538">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-539">Esse método corresponde à <xref:System.Math.Max%2A?displayProperty=nameWithType> método para tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-539">This method corresponds to the <xref:System.Math.Max%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-540">O exemplo a seguir usa o <xref:System.Numerics.BigInteger.Max%2A> método para selecionar o maior número em uma matriz de <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-540">The following example uses the <xref:System.Numerics.BigInteger.Max%2A> method to select the largest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/cs/Max1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/vb/Max1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Min (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Min(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Min(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Min (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-541">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-541">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-542">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-542">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-543">Retorna o menor de dois valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-543">Returns the smaller of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="c19c5-544">O parâmetro <paramref name="left" /> ou <paramref name="right" />, o que for menor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-544">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-545">Esse método corresponde à <xref:System.Math.Min%2A?displayProperty=nameWithType> método para tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-545">This method corresponds to the <xref:System.Math.Min%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-546">O exemplo a seguir usa o <xref:System.Numerics.BigInteger.Min%2A> método para selecionar o menor número em uma matriz de <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-546">The following example uses the <xref:System.Numerics.BigInteger.Min%2A> method to select the smallest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/cs/Min1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/vb/Min1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger MinusOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger MinusOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinusOne As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger MinusOne { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.MinusOne : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.MinusOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c19c5-547">Obtém um valor que representa o número um negativo (-1).</span><span class="sxs-lookup"><span data-stu-id="c19c5-547">Gets a value that represents the number negative one (-1).</span></span></summary>
        <value><span data-ttu-id="c19c5-548">Um inteiro cujo valor é um negativo (-1).</span><span class="sxs-lookup"><span data-stu-id="c19c5-548">An integer whose value is negative one (-1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-549">O <xref:System.Numerics.BigInteger.MinusOne%2A> propriedade é usada para comparar uma <xref:System.Numerics.BigInteger> valor -1 ou -1 para atribuir um <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-549">The <xref:System.Numerics.BigInteger.MinusOne%2A> property is used to compare a <xref:System.Numerics.BigInteger> value to -1 or to assign -1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
      </Docs>
    </Member>
    <Member MemberName="ModPow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger ModPow (System.Numerics.BigInteger value, System.Numerics.BigInteger exponent, System.Numerics.BigInteger modulus);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger ModPow(valuetype System.Numerics.BigInteger value, valuetype System.Numerics.BigInteger exponent, valuetype System.Numerics.BigInteger modulus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModPow (value As BigInteger, exponent As BigInteger, modulus As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger ModPow(System::Numerics::BigInteger value, System::Numerics::BigInteger exponent, System::Numerics::BigInteger modulus);" />
      <MemberSignature Language="F#" Value="static member ModPow : System.Numerics.BigInteger * System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.ModPow (value, exponent, modulus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Numerics.BigInteger" />
        <Parameter Name="modulus" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-550">O número a ser elevado à potência <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-550">The number to raise to the <paramref name="exponent" /> power.</span></span></param>
        <param name="exponent"><span data-ttu-id="c19c5-551">O expoente pelo qual <paramref name="value" /> será elevado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-551">The exponent to raise <paramref name="value" /> by.</span></span></param>
        <param name="modulus"><span data-ttu-id="c19c5-552">O número pelo qual dividir o <paramref name="value" /> elevado à potência <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-552">The number by which to divide <paramref name="value" /> raised to the <paramref name="exponent" /> power.</span></span></param>
        <summary><span data-ttu-id="c19c5-553">Executa a divisão de módulo em um número elevado à potência de outro número.</span><span class="sxs-lookup"><span data-stu-id="c19c5-553">Performs modulus division on a number raised to the power of another number.</span></span></summary>
        <returns><span data-ttu-id="c19c5-554">O resto após dividir o <paramref name="value" /><sup>exponente</sup> por <paramref name="modulus" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-554">The remainder after dividing <paramref name="value" /><sup>exponent</sup> by <paramref name="modulus" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-555">O <xref:System.Numerics.BigInteger.ModPow%2A> método avalia a expressão a seguir:</span><span class="sxs-lookup"><span data-stu-id="c19c5-555">The <xref:System.Numerics.BigInteger.ModPow%2A> method evaluates the following expression:</span></span>  
  
 <span data-ttu-id="c19c5-556">(baseValue ^ expoente) Módulo mod</span><span class="sxs-lookup"><span data-stu-id="c19c5-556">(baseValue ^ exponent) Mod modulus</span></span>  
  
 <span data-ttu-id="c19c5-557">Para executar a exponenciação na <xref:System.Numerics.BigInteger> valores sem divisão de módulo, use o <xref:System.Numerics.BigInteger.Pow%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-557">To perform exponentiation on <xref:System.Numerics.BigInteger> values without modulus division, use the <xref:System.Numerics.BigInteger.Pow%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-558">O exemplo a seguir fornece uma ilustração simples de chamar o <xref:System.Numerics.BigInteger.ModPow%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-558">The following example provides a simple illustration of calling the <xref:System.Numerics.BigInteger.ModPow%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/cs/ModPow1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/vb/ModPow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="c19c5-559"><paramref name="modulus" /> é zero.</span><span class="sxs-lookup"><span data-stu-id="c19c5-559"><paramref name="modulus" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c19c5-560"><paramref name="exponent" /> é negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-560"><paramref name="exponent" /> is negative.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Multiply (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Multiply(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Multiply (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-561">O primeiro número a multiplicar.</span><span class="sxs-lookup"><span data-stu-id="c19c5-561">The first number to multiply.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-562">O segundo número a multiplicar.</span><span class="sxs-lookup"><span data-stu-id="c19c5-562">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="c19c5-563">Retorna o produto de dois valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-563">Returns the product of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="c19c5-564">O produto dos parâmetros <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-564">The product of the <paramref name="left" /> and <paramref name="right" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-565">O <xref:System.Numerics.BigInteger.Multiply%2A> método é implementado para idiomas que não dão suporte a sobrecarga de operador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-565">The <xref:System.Numerics.BigInteger.Multiply%2A> method is implemented for languages that do not support operator overloading.</span></span> <span data-ttu-id="c19c5-566">Seu comportamento é idêntico a multiplicação usando o operador de multiplicação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-566">Its behavior is identical to multiplication using the multiplication operator.</span></span> <span data-ttu-id="c19c5-567">Além disso, o <xref:System.Numerics.BigInteger.Multiply%2A> método é um substituto úteis para o operador de multiplicação ao instanciar um <xref:System.Numerics.BigInteger> variável atribuindo a ela um produto que resulta da multiplicação, conforme mostrado no exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-567">In addition, the <xref:System.Numerics.BigInteger.Multiply%2A> method is a useful substitute for the multiplication operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a product that results from multiplication, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#1)]  
  
 <span data-ttu-id="c19c5-568">Se necessário, esse método executa automaticamente a conversão implícita de outros tipos integrais para <xref:System.Numerics.BigInteger> objetos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-568">If necessary, this method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="c19c5-569">Isso é ilustrado no exemplo na próxima seção, onde o <xref:System.Numerics.BigInteger.Multiply%2A> método recebe dois <xref:System.Int64> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-569">This is illustrated in the example in the next section, where the <xref:System.Numerics.BigInteger.Multiply%2A> method is passed two <xref:System.Int64> values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-570">O exemplo a seguir tenta executar uma multiplicação com dois inteiros longos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-570">The following example tries to perform multiplication with two long integers.</span></span> <span data-ttu-id="c19c5-571">Porque o resultado excede o intervalo de um inteiro longo, um <xref:System.OverflowException> é acionada e o <xref:System.Numerics.BigInteger.Multiply%2A> método é chamado para manipular a multiplicação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-571">Because the result exceeds the range of a long integer, an <xref:System.OverflowException> is thrown, and the <xref:System.Numerics.BigInteger.Multiply%2A> method is called to handle the multiplication.</span></span> <span data-ttu-id="c19c5-572">Observe que c# requer que você use o `checked` palavra-chave (como neste exemplo) ou o `/checked+` opção de compilador para certificar-se de uma exceção é gerada em um estouro numérico.</span><span class="sxs-lookup"><span data-stu-id="c19c5-572">Note that C# requires that you use either the `checked` keyword (as in this example) or the `/checked+` compiler option to make sure an exception is thrown on a numeric overflow.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#7)]
 [!code-vb[System.Numeric.BigInteger.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Negate (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Negate(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Negate(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Negate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-573">O valor a ser negado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-573">The value to negate.</span></span></param>
        <summary><span data-ttu-id="c19c5-574">Nega um valor <see cref="T:System.Numerics.BigInteger" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-574">Negates a specified <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-575">O resultado do parâmetro <paramref name="value" /> multiplicado por um negativo (-1).</span><span class="sxs-lookup"><span data-stu-id="c19c5-575">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-576">Negação obtém o inverso aditivo de um número.</span><span class="sxs-lookup"><span data-stu-id="c19c5-576">Negation obtains the additive inverse of a number.</span></span> <span data-ttu-id="c19c5-577">O inverso aditivo de um número é um número que produz um valor de zero quando ele é adicionado para o número original.</span><span class="sxs-lookup"><span data-stu-id="c19c5-577">The additive inverse of a number is a number that produces a value of zero when it is added to the original number.</span></span>  
  
 <span data-ttu-id="c19c5-578">O <xref:System.Numerics.BigInteger.Negate%2A> método é implementado para idiomas que não dão suporte a operadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-578">The <xref:System.Numerics.BigInteger.Negate%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="c19c5-579">Seu comportamento é idêntico ao usando o operador de negação unário de negação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-579">Its behavior is identical to negation using the unary negation operator.</span></span> <span data-ttu-id="c19c5-580">Além disso, o <xref:System.Numerics.BigInteger.Negate%2A> método é um substituto úteis para o operador de negação ao instanciar um <xref:System.Numerics.BigInteger> variável, conforme mostrado no exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-580">In addition, the <xref:System.Numerics.BigInteger.Negate%2A> method is a useful substitute for the negation operator when instantiating a <xref:System.Numerics.BigInteger> variable, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-581">O exemplo a seguir ilustra três maneiras de nega o valor de um <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-581">The following example illustrates three ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger One" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property One As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger One { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.One : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.One" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c19c5-582">Obtém um valor que representa o número um (1).</span><span class="sxs-lookup"><span data-stu-id="c19c5-582">Gets a value that represents the number one (1).</span></span></summary>
        <value><span data-ttu-id="c19c5-583">Um objeto cujo valor é um (1).</span><span class="sxs-lookup"><span data-stu-id="c19c5-583">An object whose value is one (1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-584">O <xref:System.Numerics.BigInteger.One%2A> propriedade normalmente é usada para comparar uma <xref:System.Numerics.BigInteger> valor 1 ou atribuir 1 para um <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-584">The <xref:System.Numerics.BigInteger.One%2A> property is usually used to compare a <xref:System.Numerics.BigInteger> value to 1 or to assign 1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
        <altmember cref="P:System.Numerics.BigInteger.MinusOne" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Addition(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left + right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-585">O primeiro valor a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-585">The first value to add.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-586">O segundo valor a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-586">The second value to add.</span></span></param>
        <summary><span data-ttu-id="c19c5-587">Adiciona os valores dos dois objetos <see cref="T:System.Numerics.BigInteger" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-587">Adds the values of two specified <see cref="T:System.Numerics.BigInteger" /> objects.</span></span></summary>
        <returns><span data-ttu-id="c19c5-588">A soma de <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-588">The sum of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-589">O <xref:System.Numerics.BigInteger.op_Addition%2A> método define a operação de adição para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-589">The <xref:System.Numerics.BigInteger.op_Addition%2A> method defines the addition operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-590">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-590">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#12)]
 [!code-vb[System.Numeric.BigInteger.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#12)]  
  
 <span data-ttu-id="c19c5-591">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.Add%2A> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-591">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Add%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &amp; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseAnd(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator And (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &amp;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &amp;&amp;&amp; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left &amp;&amp;&amp; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-592">O primeiro valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-592">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-593">O segundo valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-593">The second value.</span></span></param>
        <summary><span data-ttu-id="c19c5-594">Executa uma operação <see langword="And" /> bit a bit em dois valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-594">Performs a bitwise <see langword="And" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="c19c5-595">O resultado da operação <see langword="And" /> bit a bit.</span><span class="sxs-lookup"><span data-stu-id="c19c5-595">The result of the bitwise <see langword="And" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-596">O <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> método define o bit a bit `And` operação para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-596">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method defines the bitwise `And` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-597">O bit a bit `And` operação define os bits correspondentes um se apenas de bit de resultado `left` e `right` também são definidas, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-597">The bitwise `And` operation sets a result bit only if the corresponding bits in `left` and `right` are also set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="c19c5-598">Bit no `left`</span><span class="sxs-lookup"><span data-stu-id="c19c5-598">Bit in `left`</span></span>|<span data-ttu-id="c19c5-599">Bit no `right`</span><span class="sxs-lookup"><span data-stu-id="c19c5-599">Bit in `right`</span></span>|<span data-ttu-id="c19c5-600">Bit no resultado</span><span class="sxs-lookup"><span data-stu-id="c19c5-600">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="c19c5-601">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-601">0</span></span>|<span data-ttu-id="c19c5-602">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-602">0</span></span>|<span data-ttu-id="c19c5-603">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-603">0</span></span>|  
|<span data-ttu-id="c19c5-604">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-604">1</span></span>|<span data-ttu-id="c19c5-605">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-605">0</span></span>|<span data-ttu-id="c19c5-606">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-606">0</span></span>|  
|<span data-ttu-id="c19c5-607">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-607">1</span></span>|<span data-ttu-id="c19c5-608">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-608">1</span></span>|<span data-ttu-id="c19c5-609">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-609">1</span></span>|  
|<span data-ttu-id="c19c5-610">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-610">0</span></span>|<span data-ttu-id="c19c5-611">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-611">1</span></span>|<span data-ttu-id="c19c5-612">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-612">0</span></span>|  
  
 <span data-ttu-id="c19c5-613">O <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> método permite que o código como o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-613">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#1)]  
  
 <span data-ttu-id="c19c5-614">O <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> método executa bit a bit `And` operação em dois <xref:System.Numerics.BigInteger> valores como se estivessem em um de dois complemento representação com a extensão de entrada virtual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-614">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method performs the bitwise `And` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator | (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Or (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator |(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( ||| ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left ||| right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-615">O primeiro valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-615">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-616">O segundo valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-616">The second value.</span></span></param>
        <summary><span data-ttu-id="c19c5-617">Executa uma operação <see langword="Or" /> bit a bit em dois valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-617">Performs a bitwise <see langword="Or" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="c19c5-618">O resultado da operação <see langword="Or" /> bit a bit.</span><span class="sxs-lookup"><span data-stu-id="c19c5-618">The result of the bitwise <see langword="Or" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-619">O <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> método define o bit a bit `Or` operação para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-619">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method defines the bitwise `Or` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-620">O bit a bit `Or` operação define um se apenas de bit de resultado de um ou ambos os bits correspondentes `left` e `right` estiverem definidas, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-620">The bitwise `Or` operation sets a result bit only if either or both of the corresponding bits in `left` and `right` are set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="c19c5-621">Bit no `left`</span><span class="sxs-lookup"><span data-stu-id="c19c5-621">Bit in `left`</span></span>|<span data-ttu-id="c19c5-622">Bit no `right`</span><span class="sxs-lookup"><span data-stu-id="c19c5-622">Bit in `right`</span></span>|<span data-ttu-id="c19c5-623">Bit no resultado</span><span class="sxs-lookup"><span data-stu-id="c19c5-623">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="c19c5-624">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-624">0</span></span>|<span data-ttu-id="c19c5-625">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-625">0</span></span>|<span data-ttu-id="c19c5-626">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-626">0</span></span>|  
|<span data-ttu-id="c19c5-627">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-627">1</span></span>|<span data-ttu-id="c19c5-628">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-628">0</span></span>|<span data-ttu-id="c19c5-629">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-629">1</span></span>|  
|<span data-ttu-id="c19c5-630">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-630">1</span></span>|<span data-ttu-id="c19c5-631">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-631">1</span></span>|<span data-ttu-id="c19c5-632">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-632">1</span></span>|  
|<span data-ttu-id="c19c5-633">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-633">0</span></span>|<span data-ttu-id="c19c5-634">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-634">1</span></span>|<span data-ttu-id="c19c5-635">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-635">1</span></span>|  
  
 <span data-ttu-id="c19c5-636">O <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> método permite que o código como o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-636">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#2)]  
  
 <span data-ttu-id="c19c5-637">O <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> método executa bit a bit `Or` operação em dois <xref:System.Numerics.BigInteger> valores como se estivessem em um de dois complemento representação com a extensão de entrada virtual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-637">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method performs the bitwise `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator -- (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Decrement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator --(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Decrement : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Decrement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-638">O valor a ser diminuído.</span><span class="sxs-lookup"><span data-stu-id="c19c5-638">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="c19c5-639">Diminui um valor <see cref="T:System.Numerics.BigInteger" /> em 1.</span><span class="sxs-lookup"><span data-stu-id="c19c5-639">Decrements a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span></span></summary>
        <returns><span data-ttu-id="c19c5-640">O valor do parâmetro <paramref name="value" /> diminuído em 1.</span><span class="sxs-lookup"><span data-stu-id="c19c5-640">The value of the <paramref name="value" /> parameter decremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-641">O <xref:System.Numerics.BigInteger.op_Decrement%2A> método define a operação de decremento para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-641">The <xref:System.Numerics.BigInteger.op_Decrement%2A> method defines the decrement operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-642">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-642">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#17)]  
  
 <span data-ttu-id="c19c5-643">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.Subtract%2A> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-643">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A> method instead.</span></span> <span data-ttu-id="c19c5-644">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="c19c5-644">For example:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#3)]  
  
 <span data-ttu-id="c19c5-645">Porque <xref:System.Numerics.BigInteger> objetos são imutáveis, a <xref:System.Numerics.BigInteger.op_Decrement%2A> operador cria uma nova <xref:System.Numerics.BigInteger> objeto cujo valor é um menor do que o <xref:System.Numerics.BigInteger> objeto representado pelo `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-645">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Decrement%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one less than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="c19c5-646">Isso significa que chamadas repetidas para <xref:System.Numerics.BigInteger.op_Decrement%2A> pode ser cara.</span><span class="sxs-lookup"><span data-stu-id="c19c5-646">This means that repeated calls to <xref:System.Numerics.BigInteger.op_Decrement%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="c19c5-647">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-647">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator / (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Division(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator /(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="dividend / divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="c19c5-648">O valor a ser dividido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-648">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="c19c5-649">O valor pelo qual dividir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-649">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="c19c5-650">Divide um valor <see cref="T:System.Numerics.BigInteger" /> especificado por outro valor <see cref="T:System.Numerics.BigInteger" /> especificado usando a divisão de inteiros.</span><span class="sxs-lookup"><span data-stu-id="c19c5-650">Divides a specified <see cref="T:System.Numerics.BigInteger" /> value by another specified <see cref="T:System.Numerics.BigInteger" /> value by using integer division.</span></span></summary>
        <returns><span data-ttu-id="c19c5-651">O resultado integral da divisão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-651">The integral result of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-652">O <xref:System.Numerics.BigInteger.op_Division%2A> método define a operação de divisão para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-652">The <xref:System.Numerics.BigInteger.op_Division%2A> method defines the division operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-653">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-653">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#13)]
 [!code-vb[System.Numeric.BigInteger.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#13)]  
  
 <span data-ttu-id="c19c5-654">Idiomas que não dão suporte a operadores personalizados e sobrecarga de operador podem chamar o <xref:System.Numerics.BigInteger.Divide%2A> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-654">Languages that do not support custom operators and operator overloading can call the <xref:System.Numerics.BigInteger.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="c19c5-655">É o método equivalente para esse operador <xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c19c5-655">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="c19c5-656">O exemplo a seguir cria uma matriz de <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-656">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-657">Ele usa, em seguida, cada elemento como o quociente em uma operação de divisão que usa o <xref:System.Numerics.BigInteger.Divide%2A> método, o operador de divisão (/) e o <xref:System.Numerics.BigInteger.DivRem%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-657">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="c19c5-658"><paramref name="divisor" /> é 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="c19c5-658"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Equality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-659">Retorna um valor que indica se dois valores são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-659">Returns a value that indicates whether two values are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-660">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-660">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-661">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-661">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-662">Retorna um valor que indica se um valor inteiro longo com sinal e um valor <see cref="T:System.Numerics.BigInteger" /> são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-662">Returns a value that indicates whether a signed long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span></span></summary>
        <returns><span data-ttu-id="c19c5-663"><see langword="true" /> se os parâmetros <paramref name="left" /> e <paramref name="right" /> tiverem o mesmo valor; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-663"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-664">O <xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29> método define a operação de comparação de igualdade para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-664">The <xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-665">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-665">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#4)]  
  
 <span data-ttu-id="c19c5-666">Linguagens que não dão suporte a operadores personalizados podem chamar o <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> em vez disso, o método de instância.</span><span class="sxs-lookup"><span data-stu-id="c19c5-666">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="c19c5-667">Se `left` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando a operação é executada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-667">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="c19c5-668">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-668">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-669">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-669">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-670">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-670">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-671">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> e um valor inteiro longo com sinal são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-671">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a signed long integer value are equal.</span></span></summary>
        <returns><span data-ttu-id="c19c5-672"><see langword="true" /> se os parâmetros <paramref name="left" /> e <paramref name="right" /> tiverem o mesmo valor; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-672"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-673">O <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29> método define a operação de comparação de igualdade para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-673">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-674">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-674">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#5)]  
  
 <span data-ttu-id="c19c5-675">Linguagens que não dão suporte a operadores personalizados podem chamar o <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> em vez disso, o método de instância.</span><span class="sxs-lookup"><span data-stu-id="c19c5-675">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="c19c5-676">Se `right` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando a operação é executada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-676">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="c19c5-677">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-677">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-678">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-678">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-679">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-679">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-680">Retorna um valor que indica se os valores de dois objetos <see cref="T:System.Numerics.BigInteger" /> são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-680">Returns a value that indicates whether the values of two <see cref="T:System.Numerics.BigInteger" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="c19c5-681"><see langword="true" /> se os parâmetros <paramref name="left" /> e <paramref name="right" /> tiverem o mesmo valor; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-681"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-682">O <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> método define a operação do operador de igualdade para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-682">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method defines the operation of the equality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-683">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-683">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#19)]
 [!code-vb[System.Numeric.BigInteger.Class#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#19)]  
  
 <span data-ttu-id="c19c5-684">Linguagens que não dão suporte a operadores personalizados podem chamar o <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> em vez disso, o método de instância.</span><span class="sxs-lookup"><span data-stu-id="c19c5-684">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="c19c5-685">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-685">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.Equals" />
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-686">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-686">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-687">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-687">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-688">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> e um valor inteiro longo sem sinal são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-688">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and an unsigned long integer value are equal.</span></span></summary>
        <returns><span data-ttu-id="c19c5-689"><see langword="true" /> se os parâmetros <paramref name="left" /> e <paramref name="right" /> tiverem o mesmo valor; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-689"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-690">O <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29> método define a operação de comparação de igualdade para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-690">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-691">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-691">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#6)]  
  
 <span data-ttu-id="c19c5-692">Linguagens que não dão suporte a operadores personalizados podem chamar o <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> em vez disso, o método de instância.</span><span class="sxs-lookup"><span data-stu-id="c19c5-692">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-693">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-693">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-694">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-694">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-695">Retorna um valor que indica se um valor inteiro longo sem sinal e um valor <see cref="T:System.Numerics.BigInteger" /> são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-695">Returns a value that indicates whether an unsigned long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span></span></summary>
        <returns><span data-ttu-id="c19c5-696"><see langword="true" /> se os parâmetros <paramref name="left" /> e <paramref name="right" /> tiverem o mesmo valor; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-696"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-697">O <xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29> método define a operação de comparação de igualdade para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-697">The <xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-698">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-698">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#7)]
 [!code-vb[System.Numerics.BigInteger.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#7)]  
  
 <span data-ttu-id="c19c5-699">Linguagens que não dão suporte a operadores personalizados podem chamar o <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> em vez disso, o método de instância.</span><span class="sxs-lookup"><span data-stu-id="c19c5-699">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ^ (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_ExclusiveOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Xor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ^(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( ^^^ ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left ^^^ right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-700">O primeiro valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-700">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-701">O segundo valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-701">The second value.</span></span></param>
        <summary><span data-ttu-id="c19c5-702">Executa uma operação exclusiva <see langword="Or" /> bit a bit (<see langword="XOr" />) em dois valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-702">Performs a bitwise exclusive <see langword="Or" /> (<see langword="XOr" />) operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="c19c5-703">O resultado da operação <see langword="Or" /> bit a bit.</span><span class="sxs-lookup"><span data-stu-id="c19c5-703">The result of the bitwise <see langword="Or" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-704">O resultado de um exclusivo bit a bit `Or` operação é `true` se os valores dos dois bits forem diferentes; caso contrário, ele será `false`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-704">The result of a bitwise exclusive `Or` operation is `true` if the values of the two bits are different; otherwise, it is `false`.</span></span> <span data-ttu-id="c19c5-705">A tabela a seguir ilustra o exclusivo `Or` operação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-705">The following table illustrates the exclusive `Or` operation.</span></span>  
  
|<span data-ttu-id="c19c5-706">Bit x em `left`</span><span class="sxs-lookup"><span data-stu-id="c19c5-706">Bit x in `left`</span></span>|<span data-ttu-id="c19c5-707">Bit x em `right`</span><span class="sxs-lookup"><span data-stu-id="c19c5-707">Bit x in `right`</span></span>|<span data-ttu-id="c19c5-708">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="c19c5-708">Return value</span></span>|  
|---------------------|----------------------|------------------|  
|<span data-ttu-id="c19c5-709">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-709">0</span></span>|<span data-ttu-id="c19c5-710">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-710">0</span></span>|<span data-ttu-id="c19c5-711">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-711">0</span></span>|  
|<span data-ttu-id="c19c5-712">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-712">0</span></span>|<span data-ttu-id="c19c5-713">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-713">1</span></span>|<span data-ttu-id="c19c5-714">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-714">1</span></span>|  
|<span data-ttu-id="c19c5-715">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-715">1</span></span>|<span data-ttu-id="c19c5-716">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-716">0</span></span>|<span data-ttu-id="c19c5-717">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-717">1</span></span>|  
|<span data-ttu-id="c19c5-718">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-718">1</span></span>|<span data-ttu-id="c19c5-719">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-719">1</span></span>|<span data-ttu-id="c19c5-720">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-720">0</span></span>|  
  
 <span data-ttu-id="c19c5-721">O <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> método permite que o código como o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-721">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#8)]
 [!code-vb[System.Numerics.BigInteger.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#8)]  
  
 <span data-ttu-id="c19c5-722">O <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> método executa o bit a bit exclusivo `Or` operação em dois <xref:System.Numerics.BigInteger> valores como se estivessem em um de dois complemento representação com a extensão de entrada virtual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-722">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method performs the bitwise exclusive `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-723">Define uma conversão explícita entre um objeto <see cref="T:System.Numerics.BigInteger" /> e outro tipo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-723">Defines an explicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-724">O valor a ser convertido para um <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-724">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-725">Define uma conversão explícita de um objeto <see cref="T:System.Decimal" /> em um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-725">Defines an explicit conversion of a <see cref="T:System.Decimal" /> object to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-726">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-726">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-727">Qualquer parte fracionária de `value` parâmetro é truncado antes da conversão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-727">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="c19c5-728">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-728">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-729">Porque a conversão de <xref:System.Decimal> à <xref:System.Numerics.BigInteger> pode envolver truncando qualquer parte fracionária `value`, compiladores de linguagem não realizar essa conversão automaticamente.</span><span class="sxs-lookup"><span data-stu-id="c19c5-729">Because the conversion from <xref:System.Decimal> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="c19c5-730">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-730">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="c19c5-731">Caso contrário, eles exibem um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-731">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="c19c5-732">Para idiomas que não dão suporte a operadores personalizados, o método alternativo é <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-732">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="c19c5-733">O exemplo a seguir converte os elementos individuais em uma matriz de <xref:System.Decimal> valores <xref:System.Numerics.BigInteger> objetos e, em seguida, exibe o resultado de cada conversão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-733">The following example converts the individual elements in an array of <xref:System.Decimal> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="c19c5-734">Observe que quaisquer fracionários faz parte de um <xref:System.Decimal> valor é truncado durante a conversão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-734">Note that any fractional part of a <xref:System.Decimal> value is truncated during the conversion.</span></span>   

 [!code-csharp[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#1)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(double value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : double -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-735">O valor a ser convertido para um <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-735">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-736">Define uma conversão explícita de um valor <see cref="T:System.Double" /> para um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-736">Defines an explicit conversion of a <see cref="T:System.Double" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-737">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-737">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-738">Qualquer parte fracionária de `value` parâmetro é truncado antes da conversão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-738">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="c19c5-739">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-739">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-740">Porque a conversão de <xref:System.Double> à <xref:System.Numerics.BigInteger> pode envolver truncando qualquer parte fracionária `value`, compiladores de linguagem não realizar essa conversão automaticamente.</span><span class="sxs-lookup"><span data-stu-id="c19c5-740">Because the conversion from <xref:System.Double> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="c19c5-741">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-741">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="c19c5-742">Caso contrário, eles exibem um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-742">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="c19c5-743">Para idiomas que não dão suporte a operadores personalizados, o método alternativo é <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-743">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="c19c5-744">O exemplo a seguir converte os elementos individuais em uma matriz de <xref:System.Double> valores <xref:System.Numerics.BigInteger> objetos e, em seguida, exibe o resultado de cada conversão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-744">The following example converts the individual elements in an array of <xref:System.Double> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="c19c5-745">Observe que quaisquer fracionários faz parte de um <xref:System.Double> valor é truncado durante a conversão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-745">Note that any fractional part of a <xref:System.Double> value is truncated during the conversion.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#2)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#2)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c19c5-746">O valor de <paramref name="value" /> é <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-746">The value of <paramref name="value" /> is <see cref="F:System.Double.NaN" />.</span></span>  
  
<span data-ttu-id="c19c5-747">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-747">-or-</span></span> 
<span data-ttu-id="c19c5-748">O valor de <paramref name="value" /> é <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-748">The value of <paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span></span>
  
<span data-ttu-id="c19c5-749">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-749">-or-</span></span> 
<span data-ttu-id="c19c5-750">O valor de <paramref name="value" /> é <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-750">The value of <paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; byte" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-751">O valor a ser convertido para um <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-751">The value to convert to a <see cref="T:System.Byte" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-752">Define uma conversão explícita de um objeto <see cref="T:System.Numerics.BigInteger" /> em um valor de byte sem sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-752">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned byte value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-753">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-753">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-754">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-754">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-755">Compiladores de linguagem não realizar essa conversão automaticamente porque ele pode envolver a perda de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-755">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="c19c5-756">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` ou `CByte` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-756">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CByte` in Visual Basic) is used.</span></span> <span data-ttu-id="c19c5-757">Caso contrário, eles exibem um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-757">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="c19c5-758">Como essa operação define uma conversão de redução, ela pode lançar uma <xref:System.OverflowException> no tempo de execução se o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.Byte> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-758">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span> <span data-ttu-id="c19c5-759">Não há nenhuma perda de precisão na resultante <xref:System.Byte> valor se a conversão for bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-759">There is no loss of precision in the resulting <xref:System.Byte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="c19c5-760">O exemplo a seguir ilustra a conversão de <xref:System.Numerics.BigInteger> para <xref:System.Byte> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-760">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Byte> values.</span></span> <span data-ttu-id="c19c5-761">Ele também lida com um <xref:System.OverflowException> que é gerada porque o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.Byte> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-761">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#1)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c19c5-762">O valor de <paramref name="value" /> é menor que <see cref="F:System.Byte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-762">The value of <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" />.</span></span>  
  
<span data-ttu-id="c19c5-763">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-763">-or-</span></span> 
<span data-ttu-id="c19c5-764">O valor de <paramref name="value" /> é maior que <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-764">The value of <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; decimal" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-765">O valor a ser convertido para um <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-765">The value to convert to a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-766">Define uma conversão explícita de um objeto <see cref="T:System.Numerics.BigInteger" /> em um valor <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-766">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-767">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-767">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-768">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-768">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-769">Compiladores de linguagem não realizar essa conversão automaticamente porque ele pode envolver a perda de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-769">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="c19c5-770">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` ou `CDec` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-770">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDec` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="c19c5-771">Como essa operação define uma conversão de redução, ela pode lançar uma <xref:System.OverflowException> no tempo de execução se o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.Decimal> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-771">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span> 

## Examples
 <span data-ttu-id="c19c5-772">O exemplo a seguir ilustra a conversão de <xref:System.Numerics.BigInteger> para <xref:System.Decimal> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-772">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Decimal> values.</span></span> <span data-ttu-id="c19c5-773">Ele também lida com um <xref:System.OverflowException> que é gerada porque o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.Decimal> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-773">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c19c5-774">O valor de <paramref name="value" /> é menor que <see cref="F:System.Decimal.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-774">The value of <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
<span data-ttu-id="c19c5-775">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-775">-or-</span></span> 
<span data-ttu-id="c19c5-776">O valor de <paramref name="value" /> é maior que <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-776">The value of <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-777">O valor a ser convertido para um <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-777">The value to convert to a <see cref="T:System.Double" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-778">Define uma conversão explícita de um objeto <see cref="T:System.Numerics.BigInteger" /> em um valor <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-778">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Double" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-779">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-779">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-780">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-780">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-781">Compiladores de linguagem não realizar essa conversão automaticamente porque ele pode envolver a perda de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-781">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="c19c5-782">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` ou `CDbl` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-782">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDbl` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="c19c5-783">Porque o <xref:System.Numerics.BigInteger> valor pode ser fora do intervalo da <xref:System.Double> de tipo de dados, essa operação é uma conversão de estreitamento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-783">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Double> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="c19c5-784">Se a conversão for bem-sucedida, ela não gera um <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-784">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="c19c5-785">Em vez disso, se o <xref:System.Numerics.BigInteger> valor é menor que <xref:System.Double.MinValue?displayProperty=nameWithType>, resultante <xref:System.Double> valor é <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-785">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Double.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c19c5-786">Se o <xref:System.Numerics.BigInteger> valor é maior que <xref:System.Double.MaxValue?displayProperty=nameWithType>, resultante <xref:System.Double> valor é <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-786">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span></span>
 
 <span data-ttu-id="c19c5-787">A conversão de um <xref:System.Numerics.BigInteger> para um <xref:System.Double> pode envolver uma perda de precisão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-787">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Double> may involve a loss of precision.</span></span> <span data-ttu-id="c19c5-788">Em alguns casos, a perda de precisão pode causar a operação de conversão seja bem-sucedida, mesmo se o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.Double> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-788">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Double> data type.</span></span> <span data-ttu-id="c19c5-789">O exemplo a seguir fornece uma ilustração.</span><span class="sxs-lookup"><span data-stu-id="c19c5-789">The following example provides an illustration.</span></span> <span data-ttu-id="c19c5-790">Ele atribui o valor máximo de um <xref:System.Double> para dois <xref:System.Numerics.BigInteger> variáveis, incrementa um <xref:System.Numerics.BigInteger> variável 9.999e291 e as duas variáveis testa a igualdade.</span><span class="sxs-lookup"><span data-stu-id="c19c5-790">It assigns the maximum value of a <xref:System.Double> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="c19c5-791">Conforme o esperado, a chamada para o <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> método mostra que elas são diferentes.</span><span class="sxs-lookup"><span data-stu-id="c19c5-791">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="c19c5-792">No entanto, a conversão do maior <xref:System.Numerics.BigInteger> valor de volta para um <xref:System.Double> for bem-sucedida, embora o <xref:System.Numerics.BigInteger> excede o valor agora <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-792">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Double> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#4)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#4)]   



## Examples
 <span data-ttu-id="c19c5-793">O exemplo a seguir ilustra a conversão de <xref:System.Numerics.BigInteger> para <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-793">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Double> values.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int16" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-794">O valor a ser convertido em um inteiro com sinal de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-794">The value to convert to a 16-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="c19c5-795">Define uma conversão explícita de um objeto <see cref="T:System.Numerics.BigInteger" /> em um valor inteiro com sinal de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-795">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 16-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-796">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-796">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-797">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-797">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-798">Compiladores de linguagem não realizar essa conversão automaticamente porque ele pode envolver a perda de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-798">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="c19c5-799">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` ou `CShort` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-799">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CShort` in Visual Basic) is used.</span></span> <span data-ttu-id="c19c5-800">Caso contrário, eles exibem um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-800">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="c19c5-801">Como essa operação define uma conversão de redução, ela pode lançar uma <xref:System.OverflowException> no tempo de execução se o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.Int16> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-801">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span> <span data-ttu-id="c19c5-802">Não há nenhuma perda de precisão na resultante <xref:System.Int16> valor se a conversão for bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-802">There is no loss of precision in the resulting <xref:System.Int16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="c19c5-803">O exemplo a seguir ilustra a conversão de <xref:System.Numerics.BigInteger> para <xref:System.Int16> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-803">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int16> values.</span></span> <span data-ttu-id="c19c5-804">Ele também lida com um <xref:System.OverflowException> que é gerada porque o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.Int16> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-804">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#4)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c19c5-805">O valor de <paramref name="value" /> é menor que <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-805">The value of <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" />.</span></span>  
  
<span data-ttu-id="c19c5-806">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-806">-or-</span></span> 
<span data-ttu-id="c19c5-807">O valor de <paramref name="value" /> é maior que <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-807">The value of <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-808">O valor a ser convertido em um inteiro com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-808">The value to convert to a 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="c19c5-809">Define uma conversão explícita de um objeto <see cref="T:System.Numerics.BigInteger" /> para um valor inteiro com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-809">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 32-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-810">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-810">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-811">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-811">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-812">Compiladores de linguagem não realizar essa conversão automaticamente porque ele pode envolver a perda de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-812">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="c19c5-813">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` ou `CInt` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-813">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CInt` in Visual Basic) is used.</span></span> <span data-ttu-id="c19c5-814">Caso contrário, eles exibem um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-814">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="c19c5-815">Como essa operação define uma conversão de redução, ela pode lançar uma <xref:System.OverflowException> no tempo de execução se o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.Int32> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-815">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="c19c5-816">Não há nenhuma perda de precisão na resultante <xref:System.Int16> valor se a conversão for bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-816">There is no loss of precision in the resulting <xref:System.Int16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="c19c5-817">O exemplo a seguir ilustra a conversão de <xref:System.Numerics.BigInteger> para <xref:System.Int32> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-817">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int32> values.</span></span> <span data-ttu-id="c19c5-818">Ele também lida com um <xref:System.OverflowException> que é gerada porque o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.Int32> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-818">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#5)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c19c5-819">O valor de <paramref name="value" /> é menor que <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-819">The value of <paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" />.</span></span>  
  
<span data-ttu-id="c19c5-820">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-820">-or-</span></span> 
<span data-ttu-id="c19c5-821">O valor de <paramref name="value" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-821">The value of <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int64" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-822">O valor a ser convertido em um inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-822">The value to convert to a 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="c19c5-823">Define uma conversão explícita de um objeto <see cref="T:System.Numerics.BigInteger" /> para um valor inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-823">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-824">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-824">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-825">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-825">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-826">Compiladores de linguagem não realizar essa conversão automaticamente porque ele pode envolver a perda de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-826">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="c19c5-827">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` ou `CLng` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-827">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CLng` in Visual Basic) is used.</span></span> <span data-ttu-id="c19c5-828">Caso contrário, eles exibem um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-828">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="c19c5-829">Como essa operação define uma conversão de redução, ela pode lançar uma <xref:System.OverflowException> no tempo de execução se o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.Int64> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-829">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span> 

## Examples
 <span data-ttu-id="c19c5-830">O exemplo a seguir ilustra a conversão de <xref:System.Numerics.BigInteger> para <xref:System.Int64> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-830">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int64> values.</span></span> <span data-ttu-id="c19c5-831">Ele também lida com um <xref:System.OverflowException> que é gerada porque o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.Int64> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-831">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#6)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c19c5-832">O valor de <paramref name="value" /> é menor que <see cref="F:System.Int64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-832">The value of <paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" />.</span></span>  
  
<span data-ttu-id="c19c5-833">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-833">-or-</span></span> 
<span data-ttu-id="c19c5-834">O valor de <paramref name="value" /> é maior que <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-834">The value of <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; sbyte" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-835">O valor a ser convertido em um valor de 8 bits com sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-835">The value to convert to a signed 8-bit value.</span></span></param>
        <summary><span data-ttu-id="c19c5-836">Define uma conversão explícita de um objeto <see cref="T:System.Numerics.BigInteger" /> em um valor de 8 bits com sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-836">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a signed 8-bit value.</span></span>  
  
<span data-ttu-id="c19c5-837">Esta API não compatível com CLS.</span><span class="sxs-lookup"><span data-stu-id="c19c5-837">This API is not CLS-compliant.</span></span> <span data-ttu-id="c19c5-838">A alternativa em conformidade é <see cref="T:System.Int16" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-838">The compliant alternative is <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="c19c5-839">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-839">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-840">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-840">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-841">Compiladores de linguagem não realizar essa conversão automaticamente porque ele pode envolver a perda de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-841">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="c19c5-842">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` ou `CSByte` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-842">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSByte` in Visual Basic) is used.</span></span> <span data-ttu-id="c19c5-843">Caso contrário, eles exibem um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-843">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="c19c5-844">Como essa operação define uma conversão de redução, ela pode lançar uma <xref:System.OverflowException> no tempo de execução se o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.SByte> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-844">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span> <span data-ttu-id="c19c5-845">Não há nenhuma perda de precisão na resultante <xref:System.SByte> valor se a conversão for bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-845">There is no loss of precision in the resulting <xref:System.SByte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="c19c5-846">O exemplo a seguir ilustra a conversão de <xref:System.Numerics.BigInteger> para <xref:System.SByte> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-846">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.SByte> values.</span></span> <span data-ttu-id="c19c5-847">Ele também lida com um <xref:System.OverflowException> que é gerada porque o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.SByte> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-847">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#7)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c19c5-848">O valor de <paramref name="value" /> é menor que <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-848">The value of <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" />.</span></span>  
  
<span data-ttu-id="c19c5-849">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-849">-or-</span></span> 
<span data-ttu-id="c19c5-850">O valor de <paramref name="value" /> é maior que <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-850">The value of <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; single" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-851">O valor a ser convertido em um ponto flutuante de precisão simples.</span><span class="sxs-lookup"><span data-stu-id="c19c5-851">The value to convert to a single-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="c19c5-852">Define uma conversão explícita de um objeto <see cref="T:System.Numerics.BigInteger" /> em um valor de ponto flutuante de precisão simples.</span><span class="sxs-lookup"><span data-stu-id="c19c5-852">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a single-precision floating-point value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-853">Um objeto que contém a representação mais próxima possível do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-853">An object that contains the closest possible representation of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-854">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-854">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-855">Compiladores de linguagem não realizar essa conversão automaticamente porque ele pode envolver a perda de dados ou uma perda de precisão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-855">Language compilers do not perform this conversion automatically because it can involve data loss or a loss of precision.</span></span> <span data-ttu-id="c19c5-856">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` ou `CSng` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-856">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSng` in Visual Basic) is used.</span></span> <span data-ttu-id="c19c5-857">Caso contrário, eles exibem um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-857">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="c19c5-858">Porque o <xref:System.Numerics.BigInteger> valor pode ser fora do intervalo da <xref:System.Single> de tipo de dados, essa operação é uma conversão de estreitamento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-858">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Single> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="c19c5-859">Se a conversão for bem-sucedida, ela não gera um <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-859">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="c19c5-860">Em vez disso, se o <xref:System.Numerics.BigInteger> valor é menor que <xref:System.Single.MinValue?displayProperty=nameWithType>, resultante <xref:System.Single> valor é <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-860">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Single.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c19c5-861">Se o <xref:System.Numerics.BigInteger> valor é maior que <xref:System.Single.MaxValue?displayProperty=nameWithType>, resultante <xref:System.Single> valor é <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-861">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Single.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="c19c5-862">A conversão de um <xref:System.Numerics.BigInteger> para um <xref:System.Single> pode envolver uma perda de precisão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-862">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Single> may involve a loss of precision.</span></span> <span data-ttu-id="c19c5-863">Em alguns casos, a perda de precisão pode causar a operação de conversão seja bem-sucedida, mesmo se o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.Single> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-863">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Single> data type.</span></span> <span data-ttu-id="c19c5-864">O exemplo a seguir fornece uma ilustração.</span><span class="sxs-lookup"><span data-stu-id="c19c5-864">The following example provides an illustration.</span></span> <span data-ttu-id="c19c5-865">Ele atribui o valor máximo de um <xref:System.Single> para dois <xref:System.Numerics.BigInteger> variáveis, incrementa um <xref:System.Numerics.BigInteger> variável 9.999e291 e as duas variáveis testa a igualdade.</span><span class="sxs-lookup"><span data-stu-id="c19c5-865">It assigns the maximum value of a <xref:System.Single> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="c19c5-866">Conforme o esperado, a chamada para o <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> método mostra que elas são diferentes.</span><span class="sxs-lookup"><span data-stu-id="c19c5-866">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="c19c5-867">No entanto, a conversão do maior <xref:System.Numerics.BigInteger> valor de volta para um <xref:System.Single> for bem-sucedida, embora o <xref:System.Numerics.BigInteger> excede o valor agora <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-867">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Single> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#5)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#5)]   



## Examples
 <span data-ttu-id="c19c5-868">O exemplo a seguir ilustra a conversão de <xref:System.Numerics.BigInteger> para <xref:System.Single> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-868">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Single> values.</span></span>   
     
 [!code-csharp[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#8)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint16" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-869">O valor a ser convertido em um inteiro sem sinal de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-869">The value to convert to an unsigned 16-bit integer.</span></span></param>
        <summary><span data-ttu-id="c19c5-870">Define uma conversão explícita de um objeto <see cref="T:System.Numerics.BigInteger" /> em um valor inteiro sem sinal de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-870">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 16-bit integer value.</span></span>  
  
<span data-ttu-id="c19c5-871">Esta API não compatível com CLS.</span><span class="sxs-lookup"><span data-stu-id="c19c5-871">This API is not CLS-compliant.</span></span> <span data-ttu-id="c19c5-872">A alternativa em conformidade é <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-872">The compliant alternative is <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="c19c5-873">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-873">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-874">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-874">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-875">Compiladores de linguagem não realizar essa conversão automaticamente porque ele pode envolver a perda de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-875">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="c19c5-876">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` ou `CUShort` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-876">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUShort` in Visual Basic) is used.</span></span> <span data-ttu-id="c19c5-877">Caso contrário, eles exibem um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-877">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="c19c5-878">Como essa operação define uma conversão de redução, ela pode lançar uma <xref:System.OverflowException> no tempo de execução se o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.UInt16> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-878">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span> <span data-ttu-id="c19c5-879">Não há nenhuma perda de precisão na resultante <xref:System.UInt16> valor se a conversão for bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-879">There is no loss of precision in the resulting <xref:System.UInt16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="c19c5-880">O exemplo a seguir ilustra a conversão de <xref:System.Numerics.BigInteger> para <xref:System.UInt16> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-880">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt16> values.</span></span> <span data-ttu-id="c19c5-881">Ele também lida com um <xref:System.OverflowException> que é gerada porque o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.UInt16> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-881">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#9)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#9)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c19c5-882">O valor de <paramref name="value" /> é menor que <see cref="F:System.UInt16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-882">The value of <paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" />.</span></span>  
  
<span data-ttu-id="c19c5-883">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-883">-or-</span></span> 
<span data-ttu-id="c19c5-884">O valor de <paramref name="value" /> é maior que <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-884">The value of <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint32" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-885">O valor a ser convertido em um inteiro sem sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-885">The value to convert to an unsigned 32-bit integer.</span></span></param>
        <summary><span data-ttu-id="c19c5-886">Define uma conversão explícita de um objeto <see cref="T:System.Numerics.BigInteger" /> em um valor inteiro sem sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-886">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 32-bit integer value.</span></span>  
  
<span data-ttu-id="c19c5-887">Esta API não compatível com CLS.</span><span class="sxs-lookup"><span data-stu-id="c19c5-887">This API is not CLS-compliant.</span></span> <span data-ttu-id="c19c5-888">A alternativa em conformidade é <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-888">The compliant alternative is <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="c19c5-889">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-889">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-890">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-890">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-891">Compiladores de linguagem não realizar essa conversão automaticamente porque ele pode envolver a perda de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-891">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="c19c5-892">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` ou `CUInt` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-892">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUInt` in Visual Basic) is used.</span></span> <span data-ttu-id="c19c5-893">Caso contrário, eles exibem um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-893">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="c19c5-894">Como essa operação define uma conversão de redução, ela pode lançar uma <xref:System.OverflowException> no tempo de execução se o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.UInt32> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-894">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span> <span data-ttu-id="c19c5-895">Não há nenhuma perda de precisão na resultante <xref:System.UInt32> valor se a conversão for bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-895">There is no loss of precision in the resulting <xref:System.UInt32> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="c19c5-896">O exemplo a seguir ilustra a conversão de <xref:System.Numerics.BigInteger> para <xref:System.UInt32> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-896">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt32> values.</span></span> <span data-ttu-id="c19c5-897">Ele também lida com um <xref:System.OverflowException> que é gerada porque o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.UInt32> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-897">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#10)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#10)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c19c5-898">O valor de <paramref name="value" /> é menor que <see cref="F:System.UInt32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-898">The value of <paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" />.</span></span>  
  
<span data-ttu-id="c19c5-899">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-899">-or-</span></span> 
<span data-ttu-id="c19c5-900">O valor de <paramref name="value" /> é maior que <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-900">The value of <paramref name="value" /> is greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint64" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-901">O valor a ser convertido em um inteiro sem sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-901">The value to convert to an unsigned 64-bit integer.</span></span></param>
        <summary><span data-ttu-id="c19c5-902">Define uma conversão explícita de um objeto <see cref="T:System.Numerics.BigInteger" /> em um valor inteiro sem sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-902">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 64-bit integer value.</span></span>  
  
<span data-ttu-id="c19c5-903">Esta API não compatível com CLS.</span><span class="sxs-lookup"><span data-stu-id="c19c5-903">This API is not CLS-compliant.</span></span> <span data-ttu-id="c19c5-904">A alternativa em conformidade é <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-904">The compliant alternative is <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="c19c5-905">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-905">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-906">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-906">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-907">Compiladores de linguagem não realizar essa conversão automaticamente porque ele pode envolver a perda de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-907">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="c19c5-908">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` ou `CULng` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-908">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CULng` in Visual Basic) is used.</span></span> <span data-ttu-id="c19c5-909">Caso contrário, eles exibem um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-909">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="c19c5-910">Como essa operação define uma conversão de redução, ela pode lançar uma <xref:System.OverflowException> no tempo de execução se o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.UInt64> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-910">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span> <span data-ttu-id="c19c5-911">Não há nenhuma perda de precisão na resultante <xref:System.UInt64> valor se a conversão for bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-911">There is no loss of precision in the resulting <xref:System.UInt64> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="c19c5-912">O exemplo a seguir ilustra a conversão de <xref:System.Numerics.BigInteger> para <xref:System.UInt64> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-912">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt64> values.</span></span> <span data-ttu-id="c19c5-913">Ele também lida com um <xref:System.OverflowException> que é gerada porque o <xref:System.Numerics.BigInteger> valor está fora do intervalo da <xref:System.UInt64> tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-913">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#11)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#11)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c19c5-914">O valor de <paramref name="value" /> é menor que <see cref="F:System.UInt64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-914">The value of <paramref name="value" /> is less than <see cref="F:System.UInt64.MinValue" />.</span></span>  
  
<span data-ttu-id="c19c5-915">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-915">-or-</span></span> 
<span data-ttu-id="c19c5-916">O valor de <paramref name="value" /> é maior que <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-916">The value of <paramref name="value" /> is greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(float value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : single -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-917">O valor a ser convertido para um <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-917">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-918">Define uma conversão explícita de um valor <see cref="T:System.Single" /> para um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-918">Defines an explicit conversion of a <see cref="T:System.Single" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-919">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-919">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-920">Qualquer parte fracionária de `value` parâmetro é truncado antes da conversão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-920">Any fractional part of the `value` parameter is truncated before conversion.</span></span>
 
 <span data-ttu-id="c19c5-921">As sobrecargas do <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método para definir os tipos para o qual ou do qual um <xref:System.Numerics.BigInteger> objeto pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-921">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="c19c5-922">Porque a conversão de <xref:System.Single> à <xref:System.Numerics.BigInteger> pode envolver truncando qualquer parte fracionária `value`, compiladores de linguagem não realizar essa conversão automaticamente.</span><span class="sxs-lookup"><span data-stu-id="c19c5-922">Because the conversion from <xref:System.Single> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="c19c5-923">Em vez disso, eles realizam a conversão somente se um operador de conversão (em c#) ou uma função de conversão (como `CType` no Visual Basic) é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-923">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="c19c5-924">Caso contrário, eles exibem um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-924">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="c19c5-925">Para idiomas que não dão suporte a operadores personalizados, o método alternativo é <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-925">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="c19c5-926">O exemplo a seguir converte os elementos individuais em uma matriz de <xref:System.Single> valores <xref:System.Numerics.BigInteger> objetos e, em seguida, exibe o resultado de cada conversão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-926">The following example converts the individual elements in an array of <xref:System.Single> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="c19c5-927">Observe que quaisquer fracionários faz parte de um <xref:System.Single> valor é truncado durante a conversão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-927">Note that any fractional part of a <xref:System.Single> value is truncated during the conversion.</span></span>
 
 [!code-csharp[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#3)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#3)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c19c5-928">O valor de <paramref name="value" /> é <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-928">The value of <paramref name="value" /> is <see cref="F:System.Single.NaN" />.</span></span>  
  
<span data-ttu-id="c19c5-929">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-929">-or-</span></span> 
<span data-ttu-id="c19c5-930">O valor de <paramref name="value" /> é <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-930">The value of <paramref name="value" /> is <see cref="F:System.Single.PositiveInfinity" />.</span></span>
  
<span data-ttu-id="c19c5-931">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-931">-or-</span></span> 
<span data-ttu-id="c19c5-932">O valor de <paramref name="value" /> é <see cref="F:System.Single.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-932">The value of <paramref name="value" /> is <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-933">Retorna um valor que indica se um valor especificado é maior que outro valor especificado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-933">Returns a value that indicates whether a specified value is greater than another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-934">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-934">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-935">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-935">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-936">Retorna um valor que indica se um inteiro com sinal de 64 bits é maior que um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-936">Returns a value that indicates whether a 64-bit signed integer is greater than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-937"><see langword="true" /> caso <paramref name="left" /> seja maior que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-937"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-938">O <xref:System.Numerics.BigInteger.op_GreaterThan%2A> método define a operação de maior que o operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-938">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-939">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-939">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#9)]
 [!code-vb[System.Numerics.BigInteger.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#9)]  
  
 <span data-ttu-id="c19c5-940">Linguagens que não dão suporte a operadores personalizados podem chamar o <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> em vez disso, o método de instância.</span><span class="sxs-lookup"><span data-stu-id="c19c5-940">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span> <span data-ttu-id="c19c5-941">Algumas linguagens também podem chamar o <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-941">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#10)]  
  
 <span data-ttu-id="c19c5-942">Se `left` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando a operação é executada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-942">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="c19c5-943">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-943">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-944">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-944">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-945">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-945">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-946">Retorna um valor que indica se um <see cref="T:System.Numerics.BigInteger" /> é maior que um valor inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-946">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> is greater than a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-947"><see langword="true" /> caso <paramref name="left" /> seja maior que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-947"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-948">O <xref:System.Numerics.BigInteger.op_GreaterThan%2A> método define a operação de maior que o operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-948">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-949">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-949">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#11)]
 [!code-vb[System.Numerics.BigInteger.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#11)]  
  
 <span data-ttu-id="c19c5-950">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-950">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-951">Algumas linguagens também podem chamar o <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-951">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#12)]  
  
 <span data-ttu-id="c19c5-952">Se `right` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando a operação é executada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-952">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="c19c5-953">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-953">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-954">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-954">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-955">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-955">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-956">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> é maior que outro valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-956">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-957"><see langword="true" /> caso <paramref name="left" /> seja maior que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-957"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-958">O <xref:System.Numerics.BigInteger.op_GreaterThan%2A> método define a operação de maior que o operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-958">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-959">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-959">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#20)]
 [!code-vb[System.Numeric.BigInteger.Class#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#20)]  
  
 <span data-ttu-id="c19c5-960">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-960">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-961">Eles também podem chamar o <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-961">They can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#21)]  
  
 <span data-ttu-id="c19c5-962">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-962">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-963">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-963">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-964">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-964">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-965">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> é maior que um inteiro sem sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-965">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="c19c5-966"><see langword="true" /> caso <paramref name="left" /> seja maior que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-966"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-967">O <xref:System.Numerics.BigInteger.op_GreaterThan%2A> método define a operação de maior que o operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-967">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-968">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-968">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#13)]
 [!code-vb[System.Numerics.BigInteger.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#13)]  
  
 <span data-ttu-id="c19c5-969">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-969">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-970">Algumas linguagens também podem chamar o <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-970">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-971">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-971">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-972">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-972">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-973">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> é maior que um inteiro sem sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-973">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="c19c5-974"><see langword="true" /> caso <paramref name="left" /> seja maior que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-974"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-975">O <xref:System.Numerics.BigInteger.op_GreaterThan%2A> método define a operação de maior que o operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-975">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-976">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-976">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#15)]
 [!code-vb[System.Numerics.BigInteger.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#15)]  
  
 <span data-ttu-id="c19c5-977">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-977">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-978">Algumas linguagens também podem chamar o <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-978">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-979">Retorna um valor que indica se um valor especificado é maior ou igual a outro valor especificado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-979">Returns a value that indicates whether a specified value is greater than or equal to another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-980">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-980">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-981">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-981">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-982">Retorna um valor que indica se um inteiro com sinal de 64 bits é maior ou igual a um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-982">Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-983"><see langword="true" /> caso <paramref name="left" /> seja maior que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-983"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-984">O <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> método define a operação de maior que ou igual ao operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-984">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-985">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-985">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#17)]
 [!code-vb[System.Numerics.BigInteger.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#17)]  
  
 <span data-ttu-id="c19c5-986">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-986">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-987">Algumas linguagens também podem chamar o <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-987">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#18)]  
  
 <span data-ttu-id="c19c5-988">Se `left` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando a operação é executada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-988">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="c19c5-989">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-989">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-990">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-990">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-991">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-991">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-992">Retorna um valor que indica se um valor de <see cref="T:System.Numerics.BigInteger" /> é maior ou igual a um valor inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-992">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-993"><see langword="true" /> caso <paramref name="left" /> seja maior que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-993"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-994">O <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> método define a operação de maior que ou igual ao operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-994">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-995">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-995">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#19)]
 [!code-vb[System.Numerics.BigInteger.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#19)]  
  
 <span data-ttu-id="c19c5-996">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-996">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-997">Algumas linguagens também podem chamar o <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-997">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#20)]  
  
 <span data-ttu-id="c19c5-998">Se `right` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando a operação é executada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-998">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="c19c5-999">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-999">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1000">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1000">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1001">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1001">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1002">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> é maior ou igual a outro valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1002">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1003"><see langword="true" /> caso <paramref name="left" /> seja maior que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1003"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1004">O <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> método define a operação de maior que ou igual ao operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1004">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1005">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1005">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#22)]
 [!code-vb[System.Numeric.BigInteger.Class#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#22)]  
  
 <span data-ttu-id="c19c5-1006">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1006">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-1007">Algumas linguagens também podem chamar o <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1007">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#23)]  
  
 <span data-ttu-id="c19c5-1008">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1008">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1009">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1009">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1010">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1010">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1011">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> é maior ou igual a um valor inteiro sem sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1011">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit unsigned integer value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1012"><see langword="true" /> caso <paramref name="left" /> seja maior que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1012"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1013">O <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> método define a operação de maior que ou igual ao operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1013">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1014">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1014">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#21)]
 [!code-vb[System.Numerics.BigInteger.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#21)]  
  
 <span data-ttu-id="c19c5-1015">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1015">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-1016">Algumas linguagens também podem chamar o <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1016">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#22)]  
  
 <span data-ttu-id="c19c5-1017">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1017">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1018">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1018">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1019">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1019">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1020">Retorna um valor que indica se um inteiro sem sinal de 64 bits é maior ou igual a um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1020">Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1021"><see langword="true" /> caso <paramref name="left" /> seja maior que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1021"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1022">O <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> método define a operação de maior que ou igual ao operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1022">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1023">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1023">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#23)]
 [!code-vb[System.Numerics.BigInteger.Operators#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#23)]  
  
 <span data-ttu-id="c19c5-1024">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1024">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-1025">Algumas linguagens também podem chamar o <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1025">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#24)]  
  
 <span data-ttu-id="c19c5-1026">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1026">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-1027">Define uma conversão implícita entre um objeto <see cref="T:System.Numerics.BigInteger" /> e outro tipo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1027">Defines an implicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1028">O valor a ser convertido para um <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1028">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-1029">Define uma conversão implícita de um byte sem sinal em um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1029">Defines an implicit conversion of an unsigned byte to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1030">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1030">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1031">Qualquer parte fracionária de `value` parâmetro é truncado antes da conversão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1031">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="c19c5-1032">Para idiomas que não dão suporte a operadores implícitos, o método alternativo é <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1032">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="c19c5-1033">As sobrecargas do <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método para definir os tipos de qual ou para que um compilador pode converter automaticamente um <xref:System.Numerics.BigInteger> valor sem um operador de conversão explícita (em c#) ou uma chamada para uma função de conversão (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1033">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="c19c5-1034">Elas são conversões de ampliação que não envolvem perda de dados e não geram um <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1034">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="c19c5-1035">Essa sobrecarga permite que o compilador trate as conversões de um <xref:System.Byte> de valor para um <xref:System.Numerics.BigInteger> valor, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1035">This overload lets the compiler handle conversions from a <xref:System.Byte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(short value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int16 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1036">O valor a ser convertido para um <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1036">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-1037">Define uma conversão implícita de um inteiro com sinal de 16 bits em um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1037">Defines an implicit conversion of a signed 16-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1038">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1038">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1039">Para idiomas que não dão suporte a operadores implícitos, o método alternativo é <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1039">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="c19c5-1040">As sobrecargas do <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método para definir os tipos de qual ou para que um compilador pode converter automaticamente um <xref:System.Numerics.BigInteger> valor sem um operador de conversão explícita (em c#) ou uma chamada para uma função de conversão (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1040">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="c19c5-1041">Elas são conversões de ampliação que não envolvem perda de dados e não geram um <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1041">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="c19c5-1042">Essa sobrecarga permite que o compilador trate as conversões de um <xref:System.Int16> de valor para um <xref:System.Numerics.BigInteger> valor, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1042">This overload lets the compiler handle conversions from a <xref:System.Int16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#2)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#2)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(int value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1043">O valor a ser convertido para um <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1043">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-1044">Define uma conversão implícita de um inteiro com sinal de 32 bits em um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1044">Defines an implicit conversion of a signed 32-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1045">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1045">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1046">Para idiomas que não dão suporte a operadores implícitos, o método alternativo é <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1046">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>  

 <span data-ttu-id="c19c5-1047">As sobrecargas do <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método para definir os tipos de qual ou para que um compilador pode converter automaticamente um <xref:System.Numerics.BigInteger> valor sem um operador de conversão explícita (em c#) ou uma chamada para uma função de conversão (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1047">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="c19c5-1048">Elas são conversões de ampliação que não envolvem perda de dados e não geram um <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1048">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="c19c5-1049">Essa sobrecarga permite que o compilador trate as conversões de um <xref:System.Int32> de valor para um <xref:System.Numerics.BigInteger> valor, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1049">This overload lets the compiler handle conversions from a <xref:System.Int32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(long value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int64 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1050">O valor a ser convertido para um <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1050">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-1051">Define uma conversão implícita de um inteiro com sinal de 64 bits em um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1051">Defines an implicit conversion of a signed 64-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1052">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1052">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1053">Para idiomas que não dão suporte a operadores implícitos, o método alternativo é <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1053">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType>.</span></span>   
 
 <span data-ttu-id="c19c5-1054">As sobrecargas do <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método para definir os tipos de qual ou para que um compilador pode converter automaticamente um <xref:System.Numerics.BigInteger> valor sem um operador de conversão explícita (em c#) ou uma chamada para uma função de conversão (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1054">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="c19c5-1055">Elas são conversões de ampliação que não envolvem perda de dados e não geram um <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1055">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="c19c5-1056">Essa sobrecarga permite que o compilador trate as conversões de um <xref:System.Int64> de valor para um <xref:System.Numerics.BigInteger> valor, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1056">This overload lets the compiler handle conversions from a <xref:System.Int64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#4)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : sbyte -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1057">O valor a ser convertido para um <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1057">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-1058">Define uma conversão implícita de um inteiro com sinal de 8 bits em um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1058">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="c19c5-1059">Esta API não compatível com CLS.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1059">This API is not CLS-compliant.</span></span> <span data-ttu-id="c19c5-1060">A alternativa em conformidade é <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1060">The compliant alternative is <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1061">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1061">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1062">Para idiomas que não dão suporte a operadores implícitos, o método alternativo é <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1062">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="c19c5-1063">As sobrecargas do <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método para definir os tipos de qual ou para que um compilador pode converter automaticamente um <xref:System.Numerics.BigInteger> valor sem um operador de conversão explícita (em c#) ou uma chamada para uma função de conversão (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1063">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="c19c5-1064">Elas são conversões de ampliação que não envolvem perda de dados e não geram um <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1064">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="c19c5-1065">Essa sobrecarga permite que o compilador trate as conversões de um <xref:System.SByte> de valor para um <xref:System.Numerics.BigInteger> valor, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1065">This overload lets the compiler handle conversions from a <xref:System.SByte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#5)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint16 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1066">O valor a ser convertido para um <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1066">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-1067">Define uma conversão implícita de um inteiro sem sinal de 16 bits em um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1067">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="c19c5-1068">Esta API não compatível com CLS.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1068">This API is not CLS-compliant.</span></span> <span data-ttu-id="c19c5-1069">A alternativa em conformidade é <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1069">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1070">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1070">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1071">Para idiomas que não dão suporte a operadores implícitos, o método alternativo é <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1071">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="c19c5-1072">As sobrecargas do <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método para definir os tipos de qual ou para que um compilador pode converter automaticamente um <xref:System.Numerics.BigInteger> valor sem um operador de conversão explícita (em c#) ou uma chamada para uma função de conversão (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1072">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="c19c5-1073">Elas são conversões de ampliação que não envolvem perda de dados e não geram um <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1073">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="c19c5-1074">Essa sobrecarga permite que o compilador trate as conversões de um <xref:System.UInt16> de valor para um <xref:System.Numerics.BigInteger> valor, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1074">This overload lets the compiler handle conversions from a <xref:System.UInt16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#6)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint32 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1075">O valor a ser convertido para um <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1075">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-1076">Define uma conversão implícita de um inteiro sem sinal de 32 bits em um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1076">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="c19c5-1077">Esta API não compatível com CLS.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1077">This API is not CLS-compliant.</span></span> <span data-ttu-id="c19c5-1078">A alternativa em conformidade é <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1078">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1079">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1079">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1080">Para idiomas que não dão suporte a operadores implícitos, o método alternativo é <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1080">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="c19c5-1081">As sobrecargas do <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método para definir os tipos de qual ou para que um compilador pode converter automaticamente um <xref:System.Numerics.BigInteger> valor sem um operador de conversão explícita (em c#) ou uma chamada para uma função de conversão (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1081">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="c19c5-1082">Elas são conversões de ampliação que não envolvem perda de dados e não geram um <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1082">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="c19c5-1083">Essa sobrecarga permite que o compilador trate as conversões de um <xref:System.UInt32> de valor para um <xref:System.Numerics.BigInteger> valor, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1083">This overload lets the compiler handle conversions from a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#7)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint64 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1084">O valor a ser convertido para um <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1084">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-1085">Define uma conversão implícita de um inteiro sem sinal de 64 bits em um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1085">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="c19c5-1086">Esta API não compatível com CLS.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1086">This API is not CLS-compliant.</span></span> <span data-ttu-id="c19c5-1087">A alternativa em conformidade é <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1087">The compliant alternative is <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1088">Um objeto que contém o valor do parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1088">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1089">Para idiomas que não dão suporte a operadores implícitos, o método alternativo é <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1089">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="c19c5-1090">As sobrecargas do <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método para definir os tipos de qual ou para que um compilador pode converter automaticamente um <xref:System.Numerics.BigInteger> valor sem um operador de conversão explícita (em c#) ou uma chamada para uma função de conversão (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1090">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="c19c5-1091">Elas são conversões de ampliação que não envolvem perda de dados e não geram um <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1091">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="c19c5-1092">Essa sobrecarga permite que o compilador trate as conversões de um <xref:System.UInt64> de valor para um <xref:System.Numerics.BigInteger> valor, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1092">This overload lets the compiler handle conversions from a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#8)]   

 ]]></format>
        </remarks>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ++ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Increment(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ++(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Increment : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Increment value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1093">O valor a ser incrementado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1093">The value to increment.</span></span></param>
        <summary><span data-ttu-id="c19c5-1094">Incrementa um valor <see cref="T:System.Numerics.BigInteger" /> em 1.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1094">Increments a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1095">O valor do parâmetro <paramref name="value" /> incrementado em 1.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1095">The value of the <paramref name="value" /> parameter incremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1096">O <xref:System.Numerics.BigInteger.op_Increment%2A> método define a operação de incremento para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1096">The <xref:System.Numerics.BigInteger.op_Increment%2A> method defines the increment operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1097">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1097">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#24)]  
  
 <span data-ttu-id="c19c5-1098">Algumas linguagens (como Visual Basic) que não têm um operador de incremento ou não dão suporte a sobrecarga de operador podem chamar o <xref:System.Numerics.BigInteger.op_Increment%2A> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1098">Some languages (such as Visual Basic) that lack an increment operator or do not support operator overloading can call the <xref:System.Numerics.BigInteger.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#25)]  
  
 <span data-ttu-id="c19c5-1099">Porque <xref:System.Numerics.BigInteger> objetos são imutáveis, a <xref:System.Numerics.BigInteger.op_Increment%2A> operador cria uma nova <xref:System.Numerics.BigInteger> objeto cujo valor é um mais do que o <xref:System.Numerics.BigInteger> objeto representado pelo `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1099">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Increment%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one more than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="c19c5-1100">Portanto, chamadas repetidas para <xref:System.Numerics.BigInteger.op_Increment%2A> pode ser cara.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1100">Therefore, repeated calls to <xref:System.Numerics.BigInteger.op_Increment%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="c19c5-1101">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1101">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Inequality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-1102">Retorna um valor que indica se dois valores numéricos não são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1102">Returns a value that indicates whether two numeric values are not equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : int64 * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1103">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1103">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1104">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1104">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1105">Retorna um valor que indica se um inteiro com sinal de 64 bits e um valor <see cref="T:System.Numerics.BigInteger" /> não são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1105">Returns a value that indicates whether a 64-bit signed integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1106"><see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> não forem iguais; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1106"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1107">O <xref:System.Numerics.BigInteger.op_Inequality%2A> método define a operação do operador de desigualdade para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1107">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1108">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1108">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#25)]
 [!code-vb[System.Numerics.BigInteger.Operators#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#25)]  
  
 <span data-ttu-id="c19c5-1109">Idiomas que não dão suporte a operadores personalizados podem testar quanto à desigualdade usando uma das seguintes técnicas:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1109">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="c19c5-1110">Chamar o <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instância de método, que indica a relação entre um <xref:System.Numerics.BigInteger> e um valor inteiro longo com sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1110">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="c19c5-1111">Chamar o <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> da instância de método e Revertendo seu valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1111">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method and reversing its value.</span></span>  
  
 <span data-ttu-id="c19c5-1112">Se `left` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando a operação é executada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1112">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * int64 -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1113">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1113">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1114">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1114">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1115">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> e um inteiro com sinal de 64 bits não são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1115">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit signed integer are not equal.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1116"><see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> não forem iguais; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1116"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1117">O <xref:System.Numerics.BigInteger.op_Inequality%2A> método define a operação do operador de desigualdade para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1117">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1118">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1118">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#26)]
 [!code-vb[System.Numerics.BigInteger.Operators#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#26)]  
  
 <span data-ttu-id="c19c5-1119">Idiomas que não dão suporte a operadores personalizados podem testar quanto à desigualdade usando uma das seguintes técnicas:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1119">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="c19c5-1120">Chamar o <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> método, que indica a relação entre um <xref:System.Numerics.BigInteger> e um valor inteiro longo com sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1120">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="c19c5-1121">Chamar o <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> método e Revertendo seu valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1121">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="c19c5-1122">Se `right` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando a operação é executada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1122">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="c19c5-1123">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1123">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1124">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1124">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1125">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1125">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1126">Retorna um valor que indica se dois objetos <see cref="T:System.Numerics.BigInteger" /> têm valores diferentes.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1126">Returns a value that indicates whether two <see cref="T:System.Numerics.BigInteger" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1127"><see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> não forem iguais; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1127"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1128">O <xref:System.Numerics.BigInteger.op_Inequality%2A> método define a operação do operador de desigualdade para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1128">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1129">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1129">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#26)]
 [!code-vb[System.Numeric.BigInteger.Class#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#26)]  
  
 <span data-ttu-id="c19c5-1130">Idiomas que não dão suporte a operadores personalizados podem testar quanto à desigualdade usando uma das seguintes técnicas:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1130">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="c19c5-1131">Chamar o <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> método, que indica a relação entre duas <xref:System.Numerics.BigInteger> objetos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1131">Calling the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method, which indicates the relationship between two <xref:System.Numerics.BigInteger> objects.</span></span>  
  
-   <span data-ttu-id="c19c5-1132">Chamar o <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> método e Revertendo seu valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1132">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="c19c5-1133">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1133">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1134">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1134">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1135">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1135">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1136">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> e um inteiro sem sinal de 64 bits não são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1136">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit unsigned integer are not equal.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1137"><see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> não forem iguais; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1137"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1138">O <xref:System.Numerics.BigInteger.op_Inequality%2A> método define a operação do operador de desigualdade para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1138">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1139">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1139">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#27)]
 [!code-vb[System.Numerics.BigInteger.Operators#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#27)]  
  
 <span data-ttu-id="c19c5-1140">Idiomas que não dão suporte a operadores personalizados podem testar quanto à desigualdade usando uma das seguintes técnicas:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1140">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="c19c5-1141">Chamar o <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método, que indica a relação entre um <xref:System.Numerics.BigInteger> e um valor inteiro longo sem sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1141">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="c19c5-1142">Chamar o <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> método e Revertendo seu valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1142">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1143">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1143">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1144">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1144">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1145">Retorna um valor que indica se um inteiro sem sinal de 64 bits e um valor <see cref="T:System.Numerics.BigInteger" /> não são iguais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1145">Returns a value that indicates whether a 64-bit unsigned integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1146"><see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> não forem iguais; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1146"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1147">O <xref:System.Numerics.BigInteger.op_Inequality%2A> método define a operação do operador de desigualdade para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1147">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1148">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1148">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#28)]
 [!code-vb[System.Numerics.BigInteger.Operators#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#28)]  
  
 <span data-ttu-id="c19c5-1149">Idiomas que não dão suporte a operadores personalizados podem testar quanto à desigualdade usando uma das seguintes técnicas:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1149">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="c19c5-1150">Chamar o <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método, que indica a relação entre um <xref:System.Numerics.BigInteger> e um valor inteiro longo sem sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1150">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="c19c5-1151">Chamar o <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> método e Revertendo seu valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1151">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_LeftShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &lt;&lt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_LeftShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;&lt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &lt;&lt;(System::Numerics::BigInteger value, int shift);" />
      <MemberSignature Language="F#" Value="static member ( &lt;&lt;&lt; ) : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="value &lt;&lt;&lt; shift" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1152">O valor cujos bits devem ser deslocados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1152">The value whose bits are to be shifted.</span></span></param>
        <param name="shift"><span data-ttu-id="c19c5-1153">O número de bits a deslocar <paramref name="value" /> para a esquerda.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1153">The number of bits to shift <paramref name="value" /> to the left.</span></span></param>
        <summary><span data-ttu-id="c19c5-1154">Desloca um valor <see cref="T:System.Numerics.BigInteger" /> um número especificado de bits para a esquerda.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1154">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the left.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1155">Um valor que foi sido deslocado para a esquerda pelo número especificado de bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1155">A value that has been shifted to the left by the specified number of bits.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1156">O <xref:System.Numerics.BigInteger.op_LeftShift%2A> método define a operação do operador bit a bit de deslocamento à esquerda para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1156">The <xref:System.Numerics.BigInteger.op_LeftShift%2A> method defines the operation of the bitwise left-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1157">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1157">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#29)]
 [!code-vb[System.Numerics.BigInteger.Operators#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#29)]  
  
> [!NOTE]
>  <span data-ttu-id="c19c5-1158">Ao contrário a operação bit a bit de deslocamento à esquerda com primitivos de inteiro, o <xref:System.Numerics.BigInteger.op_LeftShift%2A> método preserva o sinal do original <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1158">Unlike the bitwise left-shift operation with integer primitives, the <xref:System.Numerics.BigInteger.op_LeftShift%2A> method preserves the sign of the original <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="c19c5-1159">Idiomas que não dão suporte a operadores personalizados podem executar uma operação bit a bit de deslocamento à esquerda multiplicando `value` por `BigInteger.Pow(2, shift)`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1159">Languages that do not support custom operators can perform a bitwise left-shift operation by multiplying `value` by `BigInteger.Pow(2, shift)`.</span></span> <span data-ttu-id="c19c5-1160">O exemplo a seguir mostra que os resultados são idênticos aos resultados do uso desse operador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1160">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#30)]
 [!code-vb[System.Numerics.BigInteger.Operators#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-1161">Retorna um valor que indica se um valor especificado é menor que um segundo valor especificado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1161">Returns a value that indicates whether a specified value is less than a second specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1162">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1162">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1163">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1163">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1164">Retorna um valor que indica se um inteiro com sinal de 64 bits é menor que um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1164">Returns a value that indicates whether a 64-bit signed integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1165"><see langword="true" /> caso <paramref name="left" /> seja menor que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1165"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1166">O <xref:System.Numerics.BigInteger.op_LessThan%2A> método define a operação pelo menor que o operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1166">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1167">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1167">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#31)]
 [!code-vb[System.Numerics.BigInteger.Operators#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#31)]  
  
 <span data-ttu-id="c19c5-1168">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1168">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-1169">Algumas linguagens também podem chamar o <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1169">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#32)]  
  
 <span data-ttu-id="c19c5-1170">Se `left` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando a operação é executada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1170">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="c19c5-1171">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1171">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1172">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1172">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1173">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1173">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1174">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> é menor que um inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1174">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1175"><see langword="true" /> caso <paramref name="left" /> seja menor que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1175"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1176">O <xref:System.Numerics.BigInteger.op_LessThan%2A> método define a operação pelo menor que o operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1176">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1177">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1177">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#33)]
 [!code-vb[System.Numerics.BigInteger.Operators#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#33)]  
  
 <span data-ttu-id="c19c5-1178">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1178">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-1179">Algumas linguagens também podem chamar o <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1179">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#34)]  
  
 <span data-ttu-id="c19c5-1180">Se `right` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando a operação é executada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1180">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="c19c5-1181">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1181">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1182">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1182">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1183">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1183">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1184">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> é menor que outro valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1184">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1185"><see langword="true" /> caso <paramref name="left" /> seja menor que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1185"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1186">O <xref:System.Numerics.BigInteger.op_LessThan%2A> método define a operação pelo menor que o operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1186">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1187">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1187">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#27)]
 [!code-vb[System.Numeric.BigInteger.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#27)]  
  
 <span data-ttu-id="c19c5-1188">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1188">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-1189">Algumas linguagens também podem chamar o <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1189">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#28)]  
  
 <span data-ttu-id="c19c5-1190">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1190">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1191">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1191">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1192">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1192">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1193">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> é menor que um inteiro sem sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1193">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1194"><see langword="true" /> caso <paramref name="left" /> seja menor que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1194"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1195">O <xref:System.Numerics.BigInteger.op_LessThan%2A> método define a operação pelo menor que o operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1195">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1196">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1196">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#35)]
 [!code-vb[System.Numerics.BigInteger.Operators#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#35)]  
  
 <span data-ttu-id="c19c5-1197">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1197">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-1198">Eles também podem chamar o <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1198">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#36)]  
  
 <span data-ttu-id="c19c5-1199">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1199">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1200">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1200">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1201">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1201">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1202">Retorna um valor que indica se um inteiro sem sinal de 64 bits é menor que um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1202">Returns a value that indicates whether a 64-bit unsigned integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1203"><see langword="true" /> caso <paramref name="left" /> seja menor que <paramref name="right" />; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1203"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1204">O <xref:System.Numerics.BigInteger.op_LessThan%2A> método define a operação pelo menor que o operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1204">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1205">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1205">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#37)]
 [!code-vb[System.Numerics.BigInteger.Operators#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#37)]  
  
 <span data-ttu-id="c19c5-1206">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1206">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-1207">Eles também podem chamar o <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1207">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#38)]  
  
 <span data-ttu-id="c19c5-1208">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1208">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-1209">Retorna um valor que indica se um valor especificado é menor ou igual a outro valor especificado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1209">Returns a value that indicates whether a specified value is less than or equal to another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1210">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1210">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1211">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1211">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1212">Retorna um valor que indica se um inteiro com sinal de 64 bits é menor ou igual a um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1212">Returns a value that indicates whether a 64-bit signed integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1213"><see langword="true" /> se <paramref name="left" /> for menor ou igual a <paramref name="right" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1213"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1214">O <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> método define a operação de menor que ou igual ao operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1214">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1215">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1215">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#39)]
 [!code-vb[System.Numerics.BigInteger.Operators#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#39)]  
  
 <span data-ttu-id="c19c5-1216">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1216">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-1217">Eles também podem chamar o <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1217">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#40)]  
  
 <span data-ttu-id="c19c5-1218">Se `left` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando a operação é executada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1218">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="c19c5-1219">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1219">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1220">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1220">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1221">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1221">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1222">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> é menor ou igual a um inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1222">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1223"><see langword="true" /> se <paramref name="left" /> for menor ou igual a <paramref name="right" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1223"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1224">O <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> método define a operação de menor que ou igual ao operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1224">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1225">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1225">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#41)]
 [!code-vb[System.Numerics.BigInteger.Operators#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#41)]  
  
 <span data-ttu-id="c19c5-1226">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1226">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-1227">Eles também podem chamar o <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1227">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#42)]  
  
 <span data-ttu-id="c19c5-1228">Se `right` é um <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, ou <xref:System.UInt32> valor, ele é convertido implicitamente em um <xref:System.Int64> valor quando a operação é executada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1228">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="c19c5-1229">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1229">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1230">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1230">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1231">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1231">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1232">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> é menor ou igual a outro valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1232">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1233"><see langword="true" /> se <paramref name="left" /> for menor ou igual a <paramref name="right" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1233"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1234">O <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> método define a operação de menor que ou igual ao operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1234">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1235">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1235">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#29)]
 [!code-vb[System.Numeric.BigInteger.Class#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#29)]  
  
 <span data-ttu-id="c19c5-1236">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.Compare%2A> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1236">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A> method instead.</span></span> <span data-ttu-id="c19c5-1237">Eles também podem chamar o <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1237">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#30)]  
  
 <span data-ttu-id="c19c5-1238">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1238">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1239">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1239">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1240">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1240">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1241">Retorna um valor que indica se um valor <see cref="T:System.Numerics.BigInteger" /> é menor ou igual a um inteiro sem sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1241">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1242"><see langword="true" /> se <paramref name="left" /> for menor ou igual a <paramref name="right" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1242"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1243">O <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> método define a operação de menor que ou igual ao operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1243">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1244">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1244">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#43)]
 [!code-vb[System.Numerics.BigInteger.Operators#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#43)]  
  
 <span data-ttu-id="c19c5-1245">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1245">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-1246">Eles também podem chamar o <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1246">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#44)]  
  
 <span data-ttu-id="c19c5-1247">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1247">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1248">O primeiro valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1248">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1249">O segundo valor a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1249">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="c19c5-1250">Retorna um valor que indica se um inteiro sem sinal de 64 bits é menor ou igual a um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1250">Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1251"><see langword="true" /> se <paramref name="left" /> for menor ou igual a <paramref name="right" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1251"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1252">O <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> método define a operação de menor que ou igual ao operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1252">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1253">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1253">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#45)]
 [!code-vb[System.Numerics.BigInteger.Operators#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#45)]  
  
 <span data-ttu-id="c19c5-1254">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1254">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="c19c5-1255">Eles também podem chamar o <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> método diretamente, como o exemplo a seguir mostra.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1255">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#46)]  
  
 <span data-ttu-id="c19c5-1256">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1256">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator % (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Modulus(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator %(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member ( % ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="dividend % divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="c19c5-1257">O valor a ser dividido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1257">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="c19c5-1258">O valor pelo qual dividir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1258">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="c19c5-1259">Retorna o resto que resulta da divisão com dois valores especificados <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1259">Returns the remainder that results from division with two specified <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1260">O resto que resulta da divisão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1260">The remainder that results from the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1261">O <xref:System.Numerics.BigInteger.op_Modulus%2A> método define a operação do operador de módulo para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1261">The <xref:System.Numerics.BigInteger.op_Modulus%2A> method defines the operation of the modulus operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1262">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1262">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#31)]
 [!code-vb[System.Numeric.BigInteger.Class#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#31)]  
  
 <span data-ttu-id="c19c5-1263">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1263">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="c19c5-1264">O sinal do valor retornado pela operação de módulo depende do sinal de `dividend`: se `dividend` for positivo, a operação de módulo retorna um resultado positivo; se for negativo, a operação de módulo retornará um resultado negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1264">The sign of the value returned by the modulus operation depends on the sign of `dividend`: If `dividend` is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.</span></span> <span data-ttu-id="c19c5-1265">O comportamento da operação modulus com <xref:System.Numerics.BigInteger> valores é idêntica à operação de módulo com outros tipos integrais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1265">The behavior of the modulus operation with <xref:System.Numerics.BigInteger> values is identical to the modulus operation with other integral types.</span></span>  
  
 <span data-ttu-id="c19c5-1266">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1266">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="c19c5-1267"><paramref name="divisor" /> é 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1267"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator * (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator *(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1268">O primeiro valor a ser multiplicado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1268">The first value to multiply.</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1269">O segundo valor a ser multiplicado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1269">The second value to multiply.</span></span></param>
        <summary><span data-ttu-id="c19c5-1270">Multiplica dois valores <see cref="T:System.Numerics.BigInteger" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1270">Multiplies two specified <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1271">O produto de <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1271">The product of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1272">O <xref:System.Numerics.BigInteger.op_Multiply%2A> método define a operação do operador de multiplicação para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1272">The <xref:System.Numerics.BigInteger.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1273">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1273">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#11)]
 [!code-vb[System.Numeric.BigInteger.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#11)]  
  
 <span data-ttu-id="c19c5-1274">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1274">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ~ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_OnesComplement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Not (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ~(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_OnesComplement : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_OnesComplement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1275">Um valor inteiro.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1275">An integer value.</span></span></param>
        <summary><span data-ttu-id="c19c5-1276">Retorna o complemento bit a bit de um valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1276">Returns the bitwise one's complement of a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1277">O complemento bit a bit de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1277">The bitwise one's complement of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1278">O <xref:System.Numerics.BigInteger.op_OnesComplement%2A> método define a operação de bit a bit de um operador de complemento para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1278">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method defines the operation of the bitwise one's complement operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1279">O bit a bit de um operador de complemento reverte cada bit em um valor numérico.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1279">The bitwise one's complement operator reverses each bit in a numeric value.</span></span> <span data-ttu-id="c19c5-1280">Ou seja, o bits no `value` que são 0 são definidos como 1 no resultado e os bits forem 1 são definidos como 0 no resultado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1280">That is, bits in `value` that are 0 are set to 1 in the result, and bits that are 1 are set to 0 in the result.</span></span> <span data-ttu-id="c19c5-1281">O <xref:System.Numerics.BigInteger.op_OnesComplement%2A> método permite que o código como o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1281">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/cs/OnesComplement1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/OnesComplement1.vb#1)]  
  
 <span data-ttu-id="c19c5-1282">Idiomas que não dão suporte a operadores personalizados podem ser capazes de chamar o <xref:System.Numerics.BigInteger.op_OnesComplement%2A> diretamente para realizar um bit a bit de um método de operação de complemento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1282">Languages that do not support custom operators may be able to call the <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method directly to perform a bitwise one's complement operation.</span></span> <span data-ttu-id="c19c5-1283">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1283">For example:</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.OnesComplement#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/onescomplement2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_RightShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &gt;&gt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_RightShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;&gt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &gt;&gt;(System::Numerics::BigInteger value, int shift);" />
      <MemberSignature Language="F#" Value="static member ( &gt;&gt;&gt; ) : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="value &gt;&gt;&gt; shift" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1284">O valor cujos bits devem ser deslocados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1284">The value whose bits are to be shifted.</span></span></param>
        <param name="shift"><span data-ttu-id="c19c5-1285">O número de bits a deslocar <paramref name="value" /> para a direita.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1285">The number of bits to shift <paramref name="value" /> to the right.</span></span></param>
        <summary><span data-ttu-id="c19c5-1286">Desloca um valor <see cref="T:System.Numerics.BigInteger" /> um número especificado de bits para a direita.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1286">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the right.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1287">Um valor que foi sido deslocado para a direita pelo número especificado de bits.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1287">A value that has been shifted to the right by the specified number of bits.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1288">O <xref:System.Numerics.BigInteger.op_RightShift%2A> método define a operação do operador de deslocamento à direita bit a bit para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1288">The <xref:System.Numerics.BigInteger.op_RightShift%2A> method defines the operation of the bitwise right-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1289">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1289">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#47)]
 [!code-vb[System.Numerics.BigInteger.Operators#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#47)]  
  
 <span data-ttu-id="c19c5-1290">Idiomas que não dão suporte a operadores personalizados podem executar uma operação bit a bit de deslocamento à direita, dividindo `value` pela `BigInteger.Pow(2, shift)` e subtraindo 1 vezes `shift` para valores negativos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1290">Languages that do not support custom operators can perform a bitwise right-shift operation by dividing `value` by `BigInteger.Pow(2, shift)` and subtracting 1 times `shift` for negative values.</span></span> <span data-ttu-id="c19c5-1291">O exemplo a seguir mostra que os resultados são idênticos aos resultados do uso desse operador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1291">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#48)]
 [!code-vb[System.Numerics.BigInteger.Operators#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#48)]  
  
 <span data-ttu-id="c19c5-1292">Se `shift` é maior que ou igual ao número de bits em um positivo <xref:System.Numerics.BigInteger> valor, o resultado da operação de deslocamento à direita é <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1292">If `shift` is greater than or equal to the number of bits in a positive <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c19c5-1293">Se `shift` é maior que o número de bits em um negativo <xref:System.Numerics.BigInteger> valor, o resultado da operação de deslocamento à direita é <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1293">If `shift` is greater than the number of bits in a negative <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Subtraction(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1294">O valor do qual um valor será subtraído (o minuendo).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1294">The value to subtract from (the minuend).</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1295">O valor a ser subtraído (o subtraendo).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1295">The value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="c19c5-1296">Subtrai um valor <see cref="T:System.Numerics.BigInteger" /> de outro valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1296">Subtracts a <see cref="T:System.Numerics.BigInteger" /> value from another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1297">O resultado da subtração de <paramref name="right" /> de <paramref name="left" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1297">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1298">O <xref:System.Numerics.BigInteger.op_Subtraction%2A> método define a operação do operador de subtração para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1298">The <xref:System.Numerics.BigInteger.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1299">Ele permite que o código seja o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1299">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#14)]
 [!code-vb[System.Numeric.BigInteger.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#14)]  
  
 <span data-ttu-id="c19c5-1300">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1300">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="c19c5-1301">O método equivalente para esse operador é <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1301">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryNegation(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="- value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1302">O valor a ser negado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1302">The value to negate.</span></span></param>
        <summary><span data-ttu-id="c19c5-1303">Nega um valor BigInteger especificado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1303">Negates a specified BigInteger value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1304">O resultado do parâmetro <paramref name="value" /> multiplicado por um negativo (-1).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1304">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1305">O <xref:System.Numerics.BigInteger.op_UnaryNegation%2A> método define a operação do operador de negação unário (ou o operador inverso de aditivo) para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1305">The <xref:System.Numerics.BigInteger.op_UnaryNegation%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1306">A operação produz um valor que resulta em 0 (zero) quando ele é adicionado para o número original.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1306">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="c19c5-1307">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.Numerics.BigInteger.Negate%2A> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1307">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="c19c5-1308">É o método equivalente para esse operador <xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c19c5-1308">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="c19c5-1309">O exemplo a seguir ilustra três maneiras diferentes de nega o valor de um <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1309">The following example illustrates three different ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryPlus(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="+ value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1310">Um valor inteiro.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1310">An integer value.</span></span></param>
        <summary><span data-ttu-id="c19c5-1311">Retorna o valor do operando <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1311">Returns the value of the <see cref="T:System.Numerics.BigInteger" /> operand.</span></span> <span data-ttu-id="c19c5-1312">(O sinal do operando permanece inalterado).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1312">(The sign of the operand is unchanged.)</span></span></summary>
        <returns><span data-ttu-id="c19c5-1313">O valor do operando <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1313">The value of the <paramref name="value" /> operand.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1314">O <xref:System.Numerics.BigInteger.op_UnaryPlus%2A> método define a operação do operador unário positivo para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1314">The <xref:System.Numerics.BigInteger.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Numerics.BigInteger> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-1315">Converte a representação da cadeia de caracteres de um número no <see cref="T:System.Numerics.BigInteger" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1315">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1316">Uma cadeia de caracteres que contém o número a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1316">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="c19c5-1317">Converte a representação da cadeia de caracteres de um número no <see cref="T:System.Numerics.BigInteger" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1317">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1318">Um valor equivalente ao número especificado no parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1318">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1319">O `value` parâmetro deve ser a representação de cadeia de caracteres de um número da seguinte forma.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1319">The `value` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="c19c5-1320">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="c19c5-1320">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="c19c5-1321">Os elementos entre colchetes ([ e ]) são opcionais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1321">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="c19c5-1322">A tabela a seguir descreve cada elemento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1322">The following table describes each element.</span></span>  
  
|<span data-ttu-id="c19c5-1323">Elemento</span><span class="sxs-lookup"><span data-stu-id="c19c5-1323">Element</span></span>|<span data-ttu-id="c19c5-1324">Descrição</span><span class="sxs-lookup"><span data-stu-id="c19c5-1324">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="c19c5-1325">*ws*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1325">*ws*</span></span>|<span data-ttu-id="c19c5-1326">Espaço em branco opcional.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1326">Optional white space.</span></span>|  
|<span data-ttu-id="c19c5-1327">*sign*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1327">*sign*</span></span>|<span data-ttu-id="c19c5-1328">Um sinal opcional.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1328">An optional sign.</span></span> <span data-ttu-id="c19c5-1329">Os caracteres de sinal válido são determinados pelas propriedades <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> e <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> da cultura atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1329">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="c19c5-1330">*digits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1330">*digits*</span></span>|<span data-ttu-id="c19c5-1331">Uma sequência de dígitos que varia de 0 a 9.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1331">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="c19c5-1332">Todos os zeros à esquerda são ignorados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1332">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="c19c5-1333">A cadeia de caracteres especificada pelo `value` parâmetro é interpretado usando o <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> estilo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1333">The string specified by the `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="c19c5-1334">Ele não pode conter nenhum separador de grupo ou decimal, e não pode ter uma parte decimal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1334">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="c19c5-1335">O parâmetro `value` é analisado usando-se as informações de formatação em um objeto <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> que é inicializado para a cultura do sistema atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1335">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="c19c5-1336">Para obter mais informações, consulte <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1336">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c19c5-1337">Para analisar uma cadeia de caracteres usando as informações de formatação de uma cultura específica, use o <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1337">To parse a string by using the formatting information of a specific culture, use the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c19c5-1338">Se você usar o <xref:System.Numerics.BigInteger.Parse%2A> método para a representação de cadeia de caracteres de ida e volta de um <xref:System.Numerics.BigInteger> valor que foi a saída pela <xref:System.Numerics.BigInteger.ToString%2A> método, você deve usar o <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> método com o especificador de formato "R" para gerar a representação de cadeia de caracteres da <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1338">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="c19c5-1339">Caso contrário, a representação de cadeia de caracteres da <xref:System.Numerics.BigInteger> preserva apenas os 50 dígitos mais significativos do valor original e os dados podem ser perdidos quando você usa o <xref:System.Numerics.BigInteger.Parse%2A> método para restaurar o <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1339">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-1340">O exemplo a seguir usa o <xref:System.Numerics.BigInteger.Parse%28System.String%29> método para instanciar dois <xref:System.Numerics.BigInteger> objetos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1340">The following example uses the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="c19c5-1341">Ele multiplica cada objeto por outro número e, em seguida, chama o <xref:System.Numerics.BigInteger.Compare%2A> método para determinar a relação entre os dois valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1341">It multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c19c5-1342"><paramref name="value" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1342"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="c19c5-1343"><paramref name="value" /> não está no formato correto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1343"><paramref name="value" /> is not in the correct format.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1344">Uma cadeia de caracteres que contém um número a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1344">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="c19c5-1345">Um combinação bit a bit de valores de enumeração que especificam o formato permitido de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1345">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-1346">Converte a representação de cadeia de caracteres de um número em um estilo especificado em seu <see cref="T:System.Numerics.BigInteger" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1346">Converts the string representation of a number in a specified style to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1347">Um valor equivalente ao número especificado no parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1347">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1348">O `style` parâmetro define os elementos de estilo (como espaço em branco, o símbolo de sinal positivo ou negativo, o símbolo de separador de grupo ou o símbolo de ponto decimal) que são permitidos no `value` parâmetro para a operação de análise seja bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1348">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="c19c5-1349">`styles` deve ser uma combinação de sinalizadores de bit do <xref:System.Globalization.NumberStyles> enumeração.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1349">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="c19c5-1350">O `style` parâmetro torna esse método de sobrecarga útil quando `value` contém a representação de cadeia de caracteres de um valor hexadecimal, quando o sistema de número (decimal ou hexadecimal) representado por `value` for conhecido somente em tempo de execução, ou quando você para não permitir espaço em branco ou um sinal de símbolo no `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1350">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="c19c5-1351">Dependendo do valor de `style`, o parâmetro `value` pode incluir os seguintes elementos:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1351">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="c19c5-1352">[*ws*] [*$*] [*entrada*] [*dígitos*,]*dígitos*[. *dígitos fracionários*] [E [*sinal*]*exponential_digits*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="c19c5-1352">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="c19c5-1353">Caso `style` inclua <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, o parâmetro `value` pode conter os seguintes elementos:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1353">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="c19c5-1354">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="c19c5-1354">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="c19c5-1355">Os elementos entre colchetes ([ e ]) são opcionais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1355">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="c19c5-1356">A tabela a seguir descreve cada elemento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1356">The following table describes each element.</span></span>  
  
|<span data-ttu-id="c19c5-1357">Elemento</span><span class="sxs-lookup"><span data-stu-id="c19c5-1357">Element</span></span>|<span data-ttu-id="c19c5-1358">Descrição</span><span class="sxs-lookup"><span data-stu-id="c19c5-1358">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="c19c5-1359">*ws*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1359">*ws*</span></span>|<span data-ttu-id="c19c5-1360">Espaço em branco opcional.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1360">Optional white space.</span></span> <span data-ttu-id="c19c5-1361">Espaço em branco podem aparecer no início da `value` se `style` inclui as <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> sinalizador e ele podem ser exibido no final da `value` se `style` inclui o <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1361">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="c19c5-1362">Um símbolo de moeda específico de cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1362">A culture-specific currency symbol.</span></span> <span data-ttu-id="c19c5-1363">A posição na cadeia de caracteres é definida pelas propriedades <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> e <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> da cultura atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1363">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="c19c5-1364">O símbolo de moeda da cultura atual pode ser exibido em `value` caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1364">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1365">*sign*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1365">*sign*</span></span>|<span data-ttu-id="c19c5-1366">Um sinal opcional.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1366">An optional sign.</span></span> <span data-ttu-id="c19c5-1367">O sinal pode ser exibido no início de `value` caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> e ele pode ser exibido no final de `value` caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1367">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c19c5-1368">Os parênteses podem ser usados em `value` para indicar um valor negativo caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1368">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1369">*digits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1369">*digits*</span></span><br /><br /> <span data-ttu-id="c19c5-1370">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1370">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="c19c5-1371">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1371">*exponential_digits*</span></span>|<span data-ttu-id="c19c5-1372">Uma sequência de dígitos de 0 a 9.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1372">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="c19c5-1373">Para *fractional_digits*, apenas o dígito 0 é válido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1373">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="c19c5-1374">*,*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1374">*,*</span></span>|<span data-ttu-id="c19c5-1375">Um símbolo de separador do grupo específico da cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1375">A culture-specific group separator symbol.</span></span> <span data-ttu-id="c19c5-1376">Separador de grupo da cultura atual pode aparecer em `value` se `style` inclui o <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1376">The current culture's group separator can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1377">*.*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1377">*.*</span></span>|<span data-ttu-id="c19c5-1378">Um símbolo de vírgula decimal específico de cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1378">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="c19c5-1379">O símbolo da vírgula decimal da cultura atual pode ser exibido em `value` caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1379">The current culture's decimal point symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c19c5-1380">Apenas o dígito 0 pode aparecer como um dígito fracionário para que a operação de análise seja bem-sucedida; Se *fractional_digits* inclua qualquer outro dígito, um <xref:System.FormatException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1380">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="c19c5-1381">E</span><span class="sxs-lookup"><span data-stu-id="c19c5-1381">E</span></span>|<span data-ttu-id="c19c5-1382">O caractere "e" ou "E", que indica que o valor é representado em notação exponencial (científica).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1382">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="c19c5-1383">O parâmetro `value` pode representar um número em notação exponencial caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1383">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1384">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1384">*hexdigits*</span></span>|<span data-ttu-id="c19c5-1385">Uma sequência de dígitos hexadecimais de 0 a f ou de 0 a F.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1385">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="c19c5-1386">Quaisquer caracteres de (U + 0000) terminação NUL no `s` são ignorados pela operação de análise, independentemente do valor de `style` argumento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1386">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="c19c5-1387">Uma cadeia de caracteres apenas com dígitos (que corresponde ao estilo <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> ) sempre é analisada com êxito.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1387">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="c19c5-1388">A maioria dos elementos de controle de membros <xref:System.Globalization.NumberStyles> restantes que podem estar presentes, mas que não precisam estar presentes, na cadeia de caracteres de entrada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1388">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="c19c5-1389">A tabela a seguir indica como os membros <xref:System.Globalization.NumberStyles> individuais afetam os elementos que podem estar presentes em `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1389">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="c19c5-1390">Valor `NumberStyles`</span><span class="sxs-lookup"><span data-stu-id="c19c5-1390">`NumberStyles` value</span></span>|<span data-ttu-id="c19c5-1391">Elementos permitidos em `value` além de dígitos</span><span class="sxs-lookup"><span data-stu-id="c19c5-1391">Elements permitted in `value` in addition to digits</span></span>|  
|--------------------------|---------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="c19c5-1392">O *dígitos* apenas o elemento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1392">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="c19c5-1393">O vírgula decimal (,) e *dígitos fracionários* elementos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1393">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="c19c5-1394">O "e" ou o caractere "E, que indica a notação exponencial, juntamente com" *exponential_digits*.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1394">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="c19c5-1395">O *ws* elemento no início de `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1395">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="c19c5-1396">O elemento *ws* no final de `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1396">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="c19c5-1397">O *sinal* elemento no início de `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1397">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="c19c5-1398">O elemento *sinal* no final de `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1398">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="c19c5-1399">O elemento *sinal* na forma de parênteses que incluem o valor numérico.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1399">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="c19c5-1400">O elemento separador do grupo (,).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1400">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="c19c5-1401">O elemento de moeda ($).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1401">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="c19c5-1402">Todos os elementos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1402">All elements.</span></span> <span data-ttu-id="c19c5-1403">No entanto, `value` não pode representar um número hexadecimal ou um número em notação exponencial.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1403">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="c19c5-1404">O *ws* elemento no início ou final do `value`, *sign* no início do `value`e o ponto decimal (*.*) símbolo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1404">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="c19c5-1405">O parâmetro `value` também pode usar notação exponencial.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1405">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="c19c5-1406">O `ws`, `sign`, separador de grupo (*,*) e o ponto decimal (*.*) elementos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1406">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="c19c5-1407">Todos os elementos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1407">All elements.</span></span> <span data-ttu-id="c19c5-1408">No entanto, `value` não pode representar um número hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1408">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="c19c5-1409">Se você usar o <xref:System.Numerics.BigInteger.Parse%2A> método para a representação de cadeia de caracteres de ida e volta de um <xref:System.Numerics.BigInteger> valor que foi a saída pela <xref:System.Numerics.BigInteger.ToString%2A> método, você deve usar o <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> método com o especificador de formato "R" para gerar a representação de cadeia de caracteres da <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1409">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="c19c5-1410">Caso contrário, a representação de cadeia de caracteres da <xref:System.Numerics.BigInteger> preserva apenas os 50 dígitos mais significativos do valor original e os dados podem ser perdidos quando você usa o <xref:System.Numerics.BigInteger.Parse%2A> método para restaurar o <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1410">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="c19c5-1411">Ao contrário de outros <xref:System.Globalization.NumberStyles> valores, que permitem, mas não exigem a presença de elementos de estilo específico `value`, o <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> valor de estilo significa que os caracteres individuais nos `value` sempre são interpretados como caracteres hexadecimais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1411">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="c19c5-1412">Os caracteres hexadecimais válidos são 0-9, A-F e a-f.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1412">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="c19c5-1413">Os únicos outros sinalizadores que podem ser combinados com o parâmetro `style` são <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> e <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1413">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c19c5-1414">(A enumeração de <xref:System.Globalization.NumberStyles> inclui um estilo de número composto, <xref:System.Globalization.NumberStyles.HexNumber>, que inclui ambos os sinalizadores de espaço em branco.)</span><span class="sxs-lookup"><span data-stu-id="c19c5-1414">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c19c5-1415">Caso `value` seja a representação da cadeia de caracteres de um número hexadecimal, ele não pode ser precedido por qualquer decoração (como `0x` ou `&h`) que o diferencia como um número hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1415">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="c19c5-1416">Isso faz a conversão falhar.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1416">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="c19c5-1417">Se `value` é uma cadeia de caracteres hexadecimal, o <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> método interpreta `value` como um número negativo armazenado usando a representação de complemento de dois se seus dois primeiros dígitos hexadecimais são maiores que ou igual a `0x80`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1417">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="c19c5-1418">Em outras palavras, o método interpreta o bit de ordem mais alta do primeiro byte em `value` como o bit de sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1418">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="c19c5-1419">Para certificar-se de que uma cadeia de caracteres hexadecimal é interpretada corretamente como um número positivo, o primeiro dígito em `value` deve ter um valor igual a zero.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1419">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="c19c5-1420">Por exemplo, o método interpreta `0x80` como um valor negativo, mas ele interpreta o `0x080` ou `0x0080` como um valor positivo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1420">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="c19c5-1421">O exemplo a seguir ilustra a diferença entre cadeias de caracteres hexadecimais que representam valores positivos e negativos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1421">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="c19c5-1422">O parâmetro `value` é analisado usando-se as informações de formatação em um objeto <xref:System.Globalization.NumberFormatInfo> que é inicializado para a cultura do sistema atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1422">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="c19c5-1423">Para especificar a cultura cujas informações de formatação são usadas para a operação de análise, chame o <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1423">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-1424">O exemplo a seguir ilustra chamadas para o <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> método com vários valores possíveis para o `style` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1424">The following example illustrates calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method with several possible values for the `style` parameter.</span></span> <span data-ttu-id="c19c5-1425">Ele ilustra como uma cadeia de caracteres como um valor hexadecimal de interpretar e como não permitir espaços e entre símbolos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1425">It illustrates how to interpret a string as a hexadecimal value, and how to disallow spaces and sign symbols.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#5)]
 [!code-vb[System.Numeric.BigInteger.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c19c5-1426"><paramref name="style" /> não é um valor <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1426"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="c19c5-1427">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-1427">-or-</span></span> 
 <span data-ttu-id="c19c5-1428"><paramref name="style" /> inclui o sinalizador <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> ou <see cref="F:System.Globalization.NumberStyles.HexNumber" /> em conjunto com outro valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1428"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c19c5-1429"><paramref name="value" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1429"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="c19c5-1430"><paramref name="value" /> não é compatível com o padrão de entrada especificado por <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1430"><paramref name="value" /> does not comply with the input pattern specified by <see cref="T:System.Globalization.NumberStyles" />.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1431">Uma cadeia de caracteres que contém um número a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1431">A string that contains a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="c19c5-1432">Um objeto que fornece informações de formatação específicas à cultura sobre <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1432">An object that provides culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-1433">Converte a representação de cadeia de caracteres de um número em um formato específico da cultura especificado em seu equivalente de <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1433">Converts the string representation of a number in a specified culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1434">Um valor equivalente ao número especificado no parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1434">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1435">O `value` parâmetro deve ser a representação de cadeia de caracteres de um número da seguinte forma:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1435">The `value` parameter should be the string representation of a number in the following form:</span></span>  
  
 <span data-ttu-id="c19c5-1436">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="c19c5-1436">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="c19c5-1437">Os elementos entre colchetes ([ e ]) são opcionais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1437">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="c19c5-1438">A tabela a seguir descreve cada elemento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1438">The following table describes each element.</span></span>  
  
|<span data-ttu-id="c19c5-1439">Elemento</span><span class="sxs-lookup"><span data-stu-id="c19c5-1439">Element</span></span>|<span data-ttu-id="c19c5-1440">Descrição</span><span class="sxs-lookup"><span data-stu-id="c19c5-1440">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="c19c5-1441">*ws*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1441">*ws*</span></span>|<span data-ttu-id="c19c5-1442">Espaço em branco opcional.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1442">Optional white space.</span></span>|  
|<span data-ttu-id="c19c5-1443">*sign*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1443">*sign*</span></span>|<span data-ttu-id="c19c5-1444">Um sinal opcional.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1444">An optional sign.</span></span> <span data-ttu-id="c19c5-1445">Caracteres de sinal válido são determinados pelo <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> e <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> propriedades da <xref:System.Globalization.NumberFormatInfo> objeto que é retornado pelo `provider` do objeto <xref:System.IFormatProvider.GetFormat%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1445">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the `provider` object's <xref:System.IFormatProvider.GetFormat%2A> method.</span></span>|  
|<span data-ttu-id="c19c5-1446">*digits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1446">*digits*</span></span>|<span data-ttu-id="c19c5-1447">Uma sequência de dígitos que varia de 0 a 9.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1447">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="c19c5-1448">Todos os zeros à esquerda são ignorados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1448">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="c19c5-1449">A cadeia de caracteres especificada pelo `value` parâmetro é interpretado usando o <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> estilo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1449">The string specified by the `value` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="c19c5-1450">Ele não pode conter nenhum separador de grupo ou decimal, e não pode ter uma parte decimal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1450">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c19c5-1451">Se você usar o <xref:System.Numerics.BigInteger.Parse%2A> método para a representação de cadeia de caracteres de ida e volta de um <xref:System.Numerics.BigInteger> valor que foi a saída pela <xref:System.Numerics.BigInteger.ToString%2A> método, você deve usar o <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> método com o especificador de formato "R" para gerar a representação de cadeia de caracteres da <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1451">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="c19c5-1452">Caso contrário, a representação de cadeia de caracteres da <xref:System.Numerics.BigInteger> preserva apenas os 50 dígitos mais significativos do valor original e os dados podem ser perdidos quando você usa o <xref:System.Numerics.BigInteger.Parse%2A> método para restaurar o <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1452">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="c19c5-1453">O `provider` parâmetro é um <xref:System.IFormatProvider> implementação cuja <xref:System.IFormatProvider.GetFormat%2A> método retorna um <xref:System.Globalization.NumberFormatInfo> objeto que fornece informações de formatação específicas da cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1453">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="c19c5-1454">Quando o <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> método é invocado, ele chama o `provider` do parâmetro <xref:System.IFormatProvider.GetFormat%2A> método e passa um <xref:System.Type> objeto que representa o <xref:System.Globalization.NumberFormatInfo> tipo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1454">When the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="c19c5-1455">O <xref:System.IFormatProvider.GetFormat%2A> método retorna, em seguida, o <xref:System.Globalization.NumberFormatInfo> objeto que fornece informações sobre o formato do `value` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1455">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information about the format of the `value` parameter.</span></span> <span data-ttu-id="c19c5-1456">Existem três maneiras de usar o parâmetro `provider` para fornecer informações de formatação personalizadas para a operação de análise:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1456">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="c19c5-1457">É possível passar um objeto <xref:System.Globalization.CultureInfo> que representa a cultura que fornece informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1457">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="c19c5-1458">O método <xref:System.Globalization.CultureInfo.GetFormat%2A> retorna o objeto <xref:System.Globalization.NumberFormatInfo> que fornece informações de formatação numérica para essa cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1458">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="c19c5-1459">É possível passar o objeto real <xref:System.Globalization.NumberFormatInfo> que fornece informações de formatação numérica.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1459">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="c19c5-1460">(Sua implementação de <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> retorna apenas ele próprio.)</span><span class="sxs-lookup"><span data-stu-id="c19c5-1460">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="c19c5-1461">É possível passar um objeto personalizado que implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1461">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="c19c5-1462">O método <xref:System.IFormatProvider.GetFormat%2A> cria uma instância e retorna o objeto <xref:System.Globalization.NumberFormatInfo> que fornece informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1462">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="c19c5-1463">Se `provider` está `null`, a formatação da `value` interpretado com base no <xref:System.Globalization.NumberFormatInfo> objeto da cultura atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1463">If `provider` is `null`, the formatting of `value` is interpreted based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-1464">Os exemplos a seguir mostram duas maneiras de definir o til (~) como um sinal negativo para a formatação <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1464">The following examples show two ways to define the tilde (~) as a negative sign for formatting <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="c19c5-1465">Observe que, para exibir o <xref:System.Numerics.BigInteger> valores no mesmo formato que as cadeias de caracteres originais, seu código deve chamar o <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> método e passá-lo a <xref:System.Globalization.NumberFormatInfo> objeto que fornece informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1465">Note that to display the <xref:System.Numerics.BigInteger> values in the same format as the original strings, your code must call the <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method and pass it the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="c19c5-1466">O primeiro exemplo define uma classe que implementa <xref:System.IFormatProvider> e usa o <xref:System.IFormatProvider.GetFormat%2A> método para retornar o <xref:System.Globalization.NumberFormatInfo> objeto que fornece informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1466">The first example defines a class that implements <xref:System.IFormatProvider> and uses the <xref:System.IFormatProvider.GetFormat%2A> method to return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#2)]  
  
 <span data-ttu-id="c19c5-1467">Um <xref:System.Numerics.BigInteger> objeto, em seguida, pode ser instanciado com o código a seguir:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1467">A <xref:System.Numerics.BigInteger> object can then be instantiated with the following code:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#3)]
 [!code-vb[System.Numeric.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#3)]  
  
 <span data-ttu-id="c19c5-1468">O segundo exemplo é mais simples.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1468">The second example is more straightforward.</span></span> <span data-ttu-id="c19c5-1469">Ele passa a <xref:System.Globalization.NumberFormatInfo> objeto que fornece informações de formatação para o `provider` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1469">It passes the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information to the `provider` parameter.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#4)]
 [!code-vb[System.Numeric.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c19c5-1470"><paramref name="value" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1470"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="c19c5-1471"><paramref name="value" /> não está no formato correto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1471"><paramref name="value" /> is not in the correct format.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As BigInteger" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1472">Uma cadeia de caracteres que contém um número a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1472">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="c19c5-1473">Um combinação bit a bit de valores de enumeração que especificam o formato permitido de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1473">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value" />.</span></span></param>
        <param name="provider"><span data-ttu-id="c19c5-1474">Um objeto que fornece informações de formatação específicas à cultura sobre <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1474">An object that provides culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="c19c5-1475">Converte a representação de cadeia de caracteres de um número com um estilo especificado e um formato específico à cultura para seu <see cref="T:System.Numerics.BigInteger" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1475">Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1476">Um valor equivalente ao número especificado no parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1476">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1477">O `style` parâmetro define os elementos de estilo (como espaço em branco, o símbolo de sinal positivo ou negativo, o símbolo de separador de grupo ou o símbolo de ponto decimal) que são permitidos no `value` parâmetro para a operação de análise seja bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1477">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="c19c5-1478">`styles` deve ser uma combinação de sinalizadores de bit do <xref:System.Globalization.NumberStyles> enumeração.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1478">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="c19c5-1479">O `style` parâmetro torna esse método de sobrecarga útil quando `value` contém a representação de cadeia de caracteres de um valor hexadecimal, quando o sistema de número (decimal ou hexadecimal) representado por `value` for conhecido somente em tempo de execução, ou quando você para não permitir espaço em branco ou um sinal de símbolo no `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1479">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="c19c5-1480">Dependendo do valor de `style`, o parâmetro `value` pode incluir os seguintes elementos:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1480">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="c19c5-1481">[*ws*][*$*][*sign*][*digits*,]*digits*[*.fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="c19c5-1481">[*ws*][*$*][*sign*][*digits*,]*digits*[*.fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="c19c5-1482">Se `style` inclui <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, o `value` parâmetro pode incluir os seguintes elementos:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1482">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="c19c5-1483">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="c19c5-1483">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="c19c5-1484">Os elementos entre colchetes ([ e ]) são opcionais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1484">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="c19c5-1485">A tabela a seguir descreve cada elemento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1485">The following table describes each element.</span></span>  
  
|<span data-ttu-id="c19c5-1486">Elemento</span><span class="sxs-lookup"><span data-stu-id="c19c5-1486">Element</span></span>|<span data-ttu-id="c19c5-1487">Descrição</span><span class="sxs-lookup"><span data-stu-id="c19c5-1487">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="c19c5-1488">*ws*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1488">*ws*</span></span>|<span data-ttu-id="c19c5-1489">Espaço em branco opcional.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1489">Optional white space.</span></span> <span data-ttu-id="c19c5-1490">Espaço em branco podem aparecer no início da `value` se `style` inclui as <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> sinalizador e ele podem ser exibido no final da `value` se `style` inclui o <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1490">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="c19c5-1491">Um símbolo de moeda específico de cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1491">A culture-specific currency symbol.</span></span> <span data-ttu-id="c19c5-1492">A posição na cadeia de caracteres é definida pelo <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> e <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> propriedades da cultura indicada pela `provider` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1492">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the culture indicated by the `provider` parameter.</span></span> <span data-ttu-id="c19c5-1493">O símbolo de moeda da cultura atual pode ser exibido em `value` caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1493">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1494">*sign*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1494">*sign*</span></span>|<span data-ttu-id="c19c5-1495">Um sinal opcional.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1495">An optional sign.</span></span> <span data-ttu-id="c19c5-1496">O sinal pode ser exibido no início de `value` caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> e ele pode ser exibido no final de `value` caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1496">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c19c5-1497">Os parênteses podem ser usados em `value` para indicar um valor negativo caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1497">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1498">*digits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1498">*digits*</span></span><br /><br /> <span data-ttu-id="c19c5-1499">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1499">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="c19c5-1500">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1500">*exponential_digits*</span></span>|<span data-ttu-id="c19c5-1501">Uma sequência de dígitos de 0 a 9.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1501">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="c19c5-1502">Para *fractional_digits*, apenas o dígito 0 é válido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1502">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="c19c5-1503">*,*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1503">*,*</span></span>|<span data-ttu-id="c19c5-1504">Um símbolo de separador do grupo específico da cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1504">A culture-specific group separator symbol.</span></span> <span data-ttu-id="c19c5-1505">O símbolo de separador de grupo da cultura especificada por `provider` pode aparecer em `value` se `style` inclui o <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1505">The group separator symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1506">*.*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1506">*.*</span></span>|<span data-ttu-id="c19c5-1507">Um símbolo de vírgula decimal específico de cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1507">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="c19c5-1508">O símbolo de vírgula decimal da cultura designado por `provider` pode aparecer em `value` se `style` inclui o <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1508">The decimal point symbol of the culture designated by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c19c5-1509">Apenas o dígito 0 pode aparecer como um dígito fracionário para que a operação de análise seja bem-sucedida; Se *fractional_digits* inclua qualquer outro dígito, um <xref:System.FormatException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1509">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="c19c5-1510">E</span><span class="sxs-lookup"><span data-stu-id="c19c5-1510">E</span></span>|<span data-ttu-id="c19c5-1511">O caractere "e" ou "E", que indica que o valor é representado em notação exponencial (científica).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1511">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="c19c5-1512">O parâmetro `value` pode representar um número em notação exponencial caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1512">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1513">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1513">*hexdigits*</span></span>|<span data-ttu-id="c19c5-1514">Uma sequência de dígitos hexadecimais de 0 a f ou de 0 a F.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1514">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="c19c5-1515">Quaisquer caracteres de (U + 0000) terminação NUL no `s` são ignorados pela operação de análise, independentemente do valor de `style` argumento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1515">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="c19c5-1516">Uma cadeia de caracteres apenas com dígitos (que corresponde ao estilo <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> ) sempre é analisada com êxito.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1516">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="c19c5-1517">A maioria dos elementos de controle de membros <xref:System.Globalization.NumberStyles> restantes que podem estar presentes, mas que não precisam estar presentes, na cadeia de caracteres de entrada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1517">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="c19c5-1518">A tabela a seguir indica como os membros <xref:System.Globalization.NumberStyles> individuais afetam os elementos que podem estar presentes em `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1518">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="c19c5-1519">Valor NumberStyles</span><span class="sxs-lookup"><span data-stu-id="c19c5-1519">NumberStyles value</span></span>|<span data-ttu-id="c19c5-1520">Elementos permitidos no valor além de dígitos</span><span class="sxs-lookup"><span data-stu-id="c19c5-1520">Elements permitted in value in addition to digits</span></span>|  
|------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="c19c5-1521">O *dígitos* apenas o elemento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1521">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="c19c5-1522">O vírgula decimal (,) e *dígitos fracionários* elementos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1522">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="c19c5-1523">O caractere "e" ou "E", que indica a notação exponencial.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1523">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="c19c5-1524">junto com *exponential_digits*.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1524">along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="c19c5-1525">O *ws* elemento no início de `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1525">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="c19c5-1526">O elemento *ws* no final de `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1526">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="c19c5-1527">O *sinal* elemento no início de `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1527">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="c19c5-1528">O elemento *sinal* no final de `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1528">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="c19c5-1529">O elemento *sinal* na forma de parênteses que incluem o valor numérico.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1529">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="c19c5-1530">O elemento separador do grupo (,).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1530">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="c19c5-1531">O elemento de moeda ($).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1531">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="c19c5-1532">Todos os elementos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1532">All elements.</span></span> <span data-ttu-id="c19c5-1533">No entanto, `value` não pode representar um número hexadecimal ou um número em notação exponencial.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1533">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="c19c5-1534">O *ws* elemento no início ou final do `value`, *sign* no início de `value`e o símbolo de vírgula decimal (.).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1534">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="c19c5-1535">O parâmetro `value` também pode usar notação exponencial.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1535">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="c19c5-1536">O `ws`, `sign`, separador de grupo (,) e elementos de vírgula decimal (.).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1536">The `ws`, `sign`, group separator (,), and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="c19c5-1537">Todos os elementos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1537">All elements.</span></span> <span data-ttu-id="c19c5-1538">No entanto, `value` não pode representar um número hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1538">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="c19c5-1539">Se você usar o <xref:System.Numerics.BigInteger.Parse%2A> método para a representação de cadeia de caracteres de ida e volta de um <xref:System.Numerics.BigInteger> valor que foi a saída pela <xref:System.Numerics.BigInteger.ToString%2A> método, você deve usar o <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> método com o especificador de formato "R" para gerar a representação de cadeia de caracteres da <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1539">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="c19c5-1540">Caso contrário, a representação de cadeia de caracteres da <xref:System.Numerics.BigInteger> preserva apenas os 50 dígitos mais significativos do valor original e os dados podem ser perdidos quando você usa o <xref:System.Numerics.BigInteger.Parse%2A> método para restaurar o <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1540">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="c19c5-1541">Ao contrário de outros <xref:System.Globalization.NumberStyles> valores, que permitem, mas não exigem a presença de elementos de estilo específico `value`, o <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> valor de estilo significa que os caracteres individuais nos `value` sempre são interpretados como caracteres hexadecimais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1541">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for but do not require the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="c19c5-1542">Os caracteres hexadecimais válidos são 0-9, A-F e a-f.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1542">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="c19c5-1543">Os únicos outros sinalizadores que podem ser combinados com o parâmetro `style` são <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> e <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1543">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c19c5-1544">(A enumeração de <xref:System.Globalization.NumberStyles> inclui um estilo de número composto, <xref:System.Globalization.NumberStyles.HexNumber>, que inclui ambos os sinalizadores de espaço em branco.)</span><span class="sxs-lookup"><span data-stu-id="c19c5-1544">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c19c5-1545">Caso `value` seja a representação da cadeia de caracteres de um número hexadecimal, ele não pode ser precedido por qualquer decoração (como `0x` ou `&h`) que o diferencia como um número hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1545">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="c19c5-1546">Isso faz a conversão falhar.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1546">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="c19c5-1547">Se `value` é uma cadeia de caracteres hexadecimal, o <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> método interpreta `value` como um número negativo armazenado usando a representação de complemento de dois se seus dois primeiros dígitos hexadecimais são maiores que ou igual a `0x80`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1547">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="c19c5-1548">Em outras palavras, o método interpreta o bit de ordem mais alta do primeiro byte em `value` como o bit de sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1548">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="c19c5-1549">Para certificar-se de que uma cadeia de caracteres hexadecimal é interpretada corretamente como um número positivo, o primeiro dígito em `value` deve ter um valor igual a zero.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1549">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="c19c5-1550">Por exemplo, o método interpreta `0x80` como um valor negativo, mas ele interpreta o `0x080` ou `0x0080` como um valor positivo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1550">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="c19c5-1551">O exemplo a seguir ilustra a diferença entre cadeias de caracteres hexadecimais que representam valores positivos e negativos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1551">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="c19c5-1552">O parâmetro `provider` é uma implementação de <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1552">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="c19c5-1553">O método <xref:System.IFormatProvider.GetFormat%2A> retorna um objeto <xref:System.Globalization.NumberFormatInfo> que fornece informações específicas de cultura sobre o formato de `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1553">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="c19c5-1554">Normalmente, `provider` pode ser qualquer um dos seguintes:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1554">Typically, `provider` can be any one of the following:</span></span>  
  
-   <span data-ttu-id="c19c5-1555">Um <xref:System.Globalization.CultureInfo> objeto que representa a cultura que fornece informações de formatação numérica.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1555">A <xref:System.Globalization.CultureInfo> object that represents the culture that provides numeric formatting information.</span></span> <span data-ttu-id="c19c5-1556">Sua <xref:System.Globalization.CultureInfo.GetFormat%2A> método retorna o <xref:System.Globalization.NumberFormatInfo> objeto que fornece informações de formatação numérica.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1556">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span>  
  
-   <span data-ttu-id="c19c5-1557">Um <xref:System.Globalization.NumberFormatInfo> objeto que fornece informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1557">A <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="c19c5-1558">(Sua implementação de <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> retorna apenas ele próprio.)</span><span class="sxs-lookup"><span data-stu-id="c19c5-1558">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="c19c5-1559">Um objeto personalizado que implementa <xref:System.IFormatProvider> e usa o <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> método para instanciar e retornar o <xref:System.Globalization.NumberFormatInfo> objeto que fornece informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1559">A custom object that implements <xref:System.IFormatProvider> and uses the <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> method to instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="c19c5-1560">Caso `provider` seja `null`, o objeto <xref:System.Globalization.NumberFormatInfo> da cultura atual é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1560">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-1561">O exemplo a seguir faz várias chamadas para o <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> método usando várias combinações de valores para o `style` e `provider` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1561">The following example makes several calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#2)]  
  
 <span data-ttu-id="c19c5-1562">Um número de chamadas individuais para o <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> método passar uma instância das seguintes `BigIntegerFormatProvider` classe, que define um til (~) como o sinal negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1562">A number of the individual calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c19c5-1563"><paramref name="style" /> não é um valor <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1563"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="c19c5-1564">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-1564">-or-</span></span> 
 <span data-ttu-id="c19c5-1565"><paramref name="style" /> inclui o sinalizador <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> ou <see cref="F:System.Globalization.NumberStyles.HexNumber" /> em conjunto com outro valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1565"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c19c5-1566"><paramref name="value" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1566"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="c19c5-1567"><paramref name="value" /> não é compatível com o padrão de entrada especificado por <paramref name="style" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1567"><paramref name="value" /> does not comply with the input pattern specified by <paramref name="style" />.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Pow (System.Numerics.BigInteger value, int exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Pow(valuetype System.Numerics.BigInteger value, int32 exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (value As BigInteger, exponent As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Pow(System::Numerics::BigInteger value, int exponent);" />
      <MemberSignature Language="F#" Value="static member Pow : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Pow (value, exponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1568">O número a ser elevado à potência <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1568">The number to raise to the <paramref name="exponent" /> power.</span></span></param>
        <param name="exponent"><span data-ttu-id="c19c5-1569">O expoente pelo qual <paramref name="value" /> será elevado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1569">The exponent to raise <paramref name="value" /> by.</span></span></param>
        <summary><span data-ttu-id="c19c5-1570">Gera um valor <see cref="T:System.Numerics.BigInteger" /> à potência de um valor especificado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1570">Raises a <see cref="T:System.Numerics.BigInteger" /> value to the power of a specified value.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1571">O resultado da elevação <paramref name="value" /> para a potência <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1571">The result of raising <paramref name="value" /> to the <paramref name="exponent" /> power.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1572">O <xref:System.Numerics.BigInteger.Pow%2A> método retornará 1 se o valor do parâmetro expoente é 0, ou se os valores de ambos os `value` e `exponent` parâmetros são 0.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1572">The <xref:System.Numerics.BigInteger.Pow%2A> method returns 1 if the value of the exponent parameter is 0, or if the values of both the `value` and `exponent` parameters are 0.</span></span> <span data-ttu-id="c19c5-1573">Se `exponent` for 1, o <xref:System.Numerics.BigInteger.Pow%2A> retorno do método `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1573">If `exponent` is 1, the <xref:System.Numerics.BigInteger.Pow%2A> method returns `value`.</span></span> <span data-ttu-id="c19c5-1574">Se `value` é negativo, o método retorna um resultado negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1574">If `value` is negative, the method returns a negative result.</span></span>  
  
 <span data-ttu-id="c19c5-1575">Esse método corresponde à <xref:System.Math.Pow%2A?displayProperty=nameWithType> método para tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1575">This method corresponds to the <xref:System.Math.Pow%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-1576">O exemplo a seguir ilustra o uso de exponenciação um <xref:System.Numerics.BigInteger> valor e um expoente cujo valor varia de 0 a 10.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1576">The following example illustrates exponentiation using a <xref:System.Numerics.BigInteger> value and an exponent whose value ranges from 0 to 10.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#32)]
 [!code-vb[System.Numeric.BigInteger.Class#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c19c5-1577">O valor do parâmetro <paramref name="exponent" /> é negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1577">The value of the <paramref name="exponent" /> parameter is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Remainder (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Remainder(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Remainder(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member Remainder : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Remainder (dividend, divisor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="c19c5-1578">O valor a ser dividido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1578">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="c19c5-1579">O valor pelo qual dividir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1579">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="c19c5-1580">Executa a divisão do inteiro em dois valores <see cref="T:System.Numerics.BigInteger" /> e retorna o restante.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1580">Performs integer division on two <see cref="T:System.Numerics.BigInteger" /> values and returns the remainder.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1581">O resto após dividir <paramref name="dividend" /> por <paramref name="divisor" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1581">The remainder after dividing <paramref name="dividend" /> by <paramref name="divisor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1582">O sinal do resto é o sinal do `dividend` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1582">The sign of the remainder is the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="c19c5-1583">O <xref:System.Numerics.BigInteger.Remainder%2A> método é implementado para idiomas que não dão suporte a operadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1583">The <xref:System.Numerics.BigInteger.Remainder%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="c19c5-1584">Seu comportamento é idêntico à divisão usando o operador de módulo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1584">Its behavior is identical to division using the modulus operator.</span></span>  
  
 <span data-ttu-id="c19c5-1585">Se necessário, o método executa automaticamente a conversão implícita de outros tipos integrais para <xref:System.Numerics.BigInteger> objetos antes de executar a operação de módulo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1585">If necessary, the method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects before it performs the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-1586">O exemplo a seguir compara o restante dos <xref:System.Numerics.BigInteger.DivRem%2A> método com o restante retornado pelo <xref:System.Numerics.BigInteger.Remainder%2A> método para estabelecer que os dois métodos calculam restos idênticos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1586">The following example compares the remainder from the <xref:System.Numerics.BigInteger.DivRem%2A> method with the remainder returned by the <xref:System.Numerics.BigInteger.Remainder%2A> method to establish that the two methods calculate identical remainders.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/cs/Remainder1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/vb/Remainder1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="c19c5-1587"><paramref name="divisor" /> é 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1587"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public int Sign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Sign" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Sign" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sign As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Sign { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Sign : int" Usage="System.Numerics.BigInteger.Sign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c19c5-1588">Obtém um número que indica o sinal (negativo, positivo ou zero) do objeto <see cref="T:System.Numerics.BigInteger" /> atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1588">Gets a number that indicates the sign (negative, positive, or zero) of the current <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <value><span data-ttu-id="c19c5-1589">Um número que indica o sinal do objeto <see cref="T:System.Numerics.BigInteger" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1589">A number that indicates the sign of the <see cref="T:System.Numerics.BigInteger" /> object, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="c19c5-1590">Número</span><span class="sxs-lookup"><span data-stu-id="c19c5-1590">Number</span></span> 
 </term><description> <span data-ttu-id="c19c5-1591">Descrição</span><span class="sxs-lookup"><span data-stu-id="c19c5-1591">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="c19c5-1592">-1</span><span class="sxs-lookup"><span data-stu-id="c19c5-1592">-1</span></span> 
 </term><description> <span data-ttu-id="c19c5-1593">O valor desse objeto é negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1593">The value of this object is negative.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c19c5-1594">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-1594">0</span></span> 
 </term><description> <span data-ttu-id="c19c5-1595">O valor desse objeto é 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1595">The value of this object is 0 (zero).</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c19c5-1596">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-1596">1</span></span> 
 </term><description> <span data-ttu-id="c19c5-1597">O valor desse objeto é positivo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1597">The value of this object is positive.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1598">O <xref:System.Numerics.BigInteger.Sign%2A> propriedade é equivalente de <xref:System.Math.Sign%2A?displayProperty=nameWithType> método para os tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1598">The <xref:System.Numerics.BigInteger.Sign%2A> property is equivalent to the <xref:System.Math.Sign%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Subtract (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Subtract(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Subtract(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Subtract (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="c19c5-1599">O valor do qual um valor será subtraído (o minuendo).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1599">The value to subtract from (the minuend).</span></span></param>
        <param name="right"><span data-ttu-id="c19c5-1600">O valor a ser subtraído (o subtraendo).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1600">The value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="c19c5-1601">Subtrai um valor <see cref="T:System.Numerics.BigInteger" /> de outro e retorna o resultado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1601">Subtracts one <see cref="T:System.Numerics.BigInteger" /> value from another and returns the result.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1602">O resultado da subtração de <paramref name="right" /> de <paramref name="left" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1602">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1603">Idiomas que não dão suporte a operadores personalizados podem usar o <xref:System.Numerics.BigInteger.Subtract%2A> método para executar a subtração usando <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1603">Languages that do not support custom operators can use the <xref:System.Numerics.BigInteger.Subtract%2A> method to perform subtraction using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="c19c5-1604">O <xref:System.Numerics.BigInteger.Subtract%2A> método é um substituto úteis para o operador de subtração ao instanciar um <xref:System.Numerics.BigInteger> variável atribuindo-a diferença que resulta da subtração, como mostrado no exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1604">The <xref:System.Numerics.BigInteger.Subtract%2A> method is a useful substitute for the subtraction operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it the difference that results from subtraction, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ToByteArray();" />
      <MemberSignature Language="F#" Value="member this.ToByteArray : unit -&gt; byte[]" Usage="bigInteger.ToByteArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c19c5-1605">Converte um valor de <see cref="T:System.Numerics.BigInteger" /> em uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1605">Converts a <see cref="T:System.Numerics.BigInteger" /> value to a byte array.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1606">O valor do objeto <see cref="T:System.Numerics.BigInteger" /> atual convertido em uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1606">The value of the current <see cref="T:System.Numerics.BigInteger" /> object converted to an array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1607">Os bytes individuais na matriz retornada por esse método aparecem em ordem little endian.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1607">The individual bytes in the array returned by this method appear in little-endian order.</span></span> <span data-ttu-id="c19c5-1608">Ou seja, os bytes de ordem inferior do valor de precedência sobre os bytes de ordem superior.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1608">That is, the lower-order bytes of the value precede the higher-order bytes.</span></span> <span data-ttu-id="c19c5-1609">O primeiro byte da matriz reflete os primeiros oito bits do <xref:System.Numerics.BigInteger> valor, o segundo byte reflete o próximo oito bits e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1609">The first byte of the array reflects the first eight bits of the <xref:System.Numerics.BigInteger> value, the second byte reflects the next eight bits, and so on.</span></span> <span data-ttu-id="c19c5-1610">Por exemplo, o valor 1024 ou 0x0400, é armazenada como a seguinte matriz de dois bytes:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1610">For example, the value 1024, or 0x0400, is stored as the following array of two bytes:</span></span>  
  
|<span data-ttu-id="c19c5-1611">Elemento</span><span class="sxs-lookup"><span data-stu-id="c19c5-1611">Element</span></span>|<span data-ttu-id="c19c5-1612">Valor de byte</span><span class="sxs-lookup"><span data-stu-id="c19c5-1612">Byte value</span></span>|  
|-------------|----------------|  
|<span data-ttu-id="c19c5-1613">0</span><span class="sxs-lookup"><span data-stu-id="c19c5-1613">0</span></span>|<span data-ttu-id="c19c5-1614">0x00</span><span class="sxs-lookup"><span data-stu-id="c19c5-1614">0x00</span></span>|  
|<span data-ttu-id="c19c5-1615">1</span><span class="sxs-lookup"><span data-stu-id="c19c5-1615">1</span></span>|<span data-ttu-id="c19c5-1616">0x04</span><span class="sxs-lookup"><span data-stu-id="c19c5-1616">0x04</span></span>|  
  
 <span data-ttu-id="c19c5-1617">Valores negativos são gravados para a matriz usando a representação de complemento de dois da possível de forma mais compacta.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1617">Negative values are written to the array using two's complement representation in the most compact form possible.</span></span> <span data-ttu-id="c19c5-1618">Por exemplo, -1 é representado como um único byte cujo valor é `0xFF` em vez de como uma matriz com vários elementos, tais como `0xFF`, `0xFF` ou `0xFF`, `0xFF`, `0xFF`, `0xFF`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1618">For example, -1 is represented as a single byte whose value is `0xFF` instead of as an array with multiple elements, such as `0xFF`, `0xFF` or `0xFF`, `0xFF`, `0xFF`, `0xFF`.</span></span>  
  
 <span data-ttu-id="c19c5-1619">Porque do complemento de dois representação sempre interpreta o bit de ordem mais alta do último byte na matriz (o byte na posição <xref:System.Array.Length%2A?displayProperty=nameWithType> `- 1`) como o bit de sinal, o método retorna uma matriz de bytes com um elemento adicional, cujo valor é zero para resolver a ambiguidade de valores positivos que caso contrário, podem ser interpretados como tendo os bits de entrada definido.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1619">Because two's complement representation always interprets the highest-order bit of the last byte in the array (the byte at position <xref:System.Array.Length%2A?displayProperty=nameWithType>`- 1`) as the sign bit, the method returns a byte array with an extra element whose value is zero to disambiguate positive values that could otherwise be interpreted as having their sign bits set.</span></span> <span data-ttu-id="c19c5-1620">Por exemplo, o valor de 120 ou `0x78` é representada como uma matriz de byte único: `0x78`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1620">For example, the value 120 or `0x78` is represented as a single-byte array: `0x78`.</span></span> <span data-ttu-id="c19c5-1621">No entanto, 128, ou `0x80`, é representado como uma matriz de dois bytes: `0x80`, `0x00`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1621">However, 128, or `0x80`, is represented as a two-byte array: `0x80`, `0x00`.</span></span>  
  
 <span data-ttu-id="c19c5-1622">Você pode ir e voltar uma <xref:System.Numerics.BigInteger> valor armazenando-o para uma matriz de bytes e, em seguida, restaurá-lo usando o <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1622">You can round-trip a <xref:System.Numerics.BigInteger> value by storing it to a byte array and then restoring it using the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c19c5-1623">Se seu código modifica o valor de bytes individuais na matriz retornada por esse método antes de ele restaura o valor, certifique-se de que você não altere acidentalmente o bit de sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1623">If your code modifies the value of individual bytes in the array returned by this method before it restores the value, you must make sure that you do not unintentionally change the sign bit.</span></span> <span data-ttu-id="c19c5-1624">Por exemplo, se suas modificações aumentam um valor positivo, de modo que o bit de ordem mais alta no último elemento da matriz de bytes torna-se definido, que você pode adicionar uma nova cujo valor é zero para o final da matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1624">For example, if your modifications increase a positive value so that the highest-order bit in the last element of the byte array becomes set, you can add a new byte whose value is zero to the end of the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-1625">O exemplo a seguir ilustra como algumas <xref:System.Numerics.BigInteger> valores são representados em matrizes de bytes.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1625">The following example illustrates how some <xref:System.Numerics.BigInteger> values are represented in byte arrays.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/cs/ToByteArray1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/vb/ToByteArray1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray (bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray(bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray (Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Byte()" />
      <MemberSignature Language="F#" Value="member this.ToByteArray : bool * bool -&gt; byte[]" Usage="bigInteger.ToByteArray (isUnsigned, isBigEndian)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" />
        <Parameter Name="isBigEndian" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-1626">Converte o valor numérico do objeto <see cref="T:System.Numerics.BigInteger" /> atual na representação da cadeia de caracteres equivalente.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1626">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bigInteger.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c19c5-1627">Converte o valor numérico do objeto <see cref="T:System.Numerics.BigInteger" /> atual na representação da cadeia de caracteres equivalente.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1627">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1628">Uma representação de cadeia de caracteres do valor <see cref="T:System.Numerics.BigInteger" /> atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1628">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1629">O <xref:System.Numerics.BigInteger.ToString> formatos do método um <xref:System.Numerics.BigInteger> valor em "R" ou ida e volta, formato da cultura atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1629">The <xref:System.Numerics.BigInteger.ToString> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format of the current culture.</span></span> <span data-ttu-id="c19c5-1630">Se você quiser especificar um formato diferente ou uma cultura, use as outras sobrecargas do <xref:System.Numerics.BigInteger.ToString%2A> método, da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1630">If you want to specify a different format or culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="c19c5-1631">Para usar o formato</span><span class="sxs-lookup"><span data-stu-id="c19c5-1631">To use format</span></span>|<span data-ttu-id="c19c5-1632">Para a cultura</span><span class="sxs-lookup"><span data-stu-id="c19c5-1632">For culture</span></span>|<span data-ttu-id="c19c5-1633">Use a sobrecarga</span><span class="sxs-lookup"><span data-stu-id="c19c5-1633">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="c19c5-1634">Formato de round-trip ("R")</span><span class="sxs-lookup"><span data-stu-id="c19c5-1634">Round-trip ("R") format</span></span>|<span data-ttu-id="c19c5-1635">Uma cultura específica</span><span class="sxs-lookup"><span data-stu-id="c19c5-1635">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%2A>|  
|<span data-ttu-id="c19c5-1636">Um formato específico</span><span class="sxs-lookup"><span data-stu-id="c19c5-1636">A specific format</span></span>|<span data-ttu-id="c19c5-1637">Padrão de cultura (atual)</span><span class="sxs-lookup"><span data-stu-id="c19c5-1637">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="c19c5-1638">Um formato específico</span><span class="sxs-lookup"><span data-stu-id="c19c5-1638">A specific format</span></span>|<span data-ttu-id="c19c5-1639">Uma cultura específica</span><span class="sxs-lookup"><span data-stu-id="c19c5-1639">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="c19c5-1640">A representação de cadeia de caracteres da <xref:System.Numerics.BigInteger> valor inclui um sinal negativo se o valor for negativo e uma sequência de dígitos, variando de 0 a 9 sem zeros à esquerda.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1640">The string representation of the <xref:System.Numerics.BigInteger> value includes a negative sign if its value is negative, and a sequence of digits ranging from 0 to 9 without leading zeros.</span></span> <span data-ttu-id="c19c5-1641">O sinal de negativo é definido pelo <xref:System.Globalization.NumberFormatInfo> objeto para a cultura atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1641">The negative sign is defined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-1642">O exemplo a seguir exibe uma <xref:System.Numerics.BigInteger> valor, usando o padrão <xref:System.Numerics.BigInteger.ToString> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1642">The following example displays a <xref:System.Numerics.BigInteger> value by using the default <xref:System.Numerics.BigInteger.ToString> method.</span></span> <span data-ttu-id="c19c5-1643">Ele também exibe as representações de cadeia de caracteres da <xref:System.Numerics.BigInteger> valor resultante do uso de alguns especificadores de formato padrão.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1643">It also displays the string representations of the <xref:System.Numerics.BigInteger> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="c19c5-1644">Os exemplos são exibidos usando-se as convenções de formatação da cultura en-US.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1644">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="c19c5-1645">Cadeias de caracteres de formato numérico padrão</span><span class="sxs-lookup"><span data-stu-id="c19c5-1645">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="c19c5-1646">Cadeias de caracteres de formato numérico personalizado</span><span class="sxs-lookup"><span data-stu-id="c19c5-1646">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="bigInteger.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c19c5-1647">Um objeto que fornece informações de formatação específicas de cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1647">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="c19c5-1648">Converte o valor numérico do objeto <see cref="T:System.Numerics.BigInteger" /> atual em sua representação de cadeia de caracteres equivalente usando as informações especificadas de formatação específicas de cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1648">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1649">A representação de cadeia de caracteres do valor <see cref="T:System.Numerics.BigInteger" /> atual no formato especificado pelo parâmetro <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1649">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="provider" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1650">O <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> formatos do método uma <xref:System.Numerics.BigInteger> valor em "R", ou ida e volta, formatar usando a <xref:System.Globalization.NumberFormatInfo> objeto de uma cultura específica.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1650">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="c19c5-1651">Se você quiser especificar um formato diferente ou a cultura atual, use as outras sobrecargas do <xref:System.Numerics.BigInteger.ToString%2A> método, da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1651">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="c19c5-1652">Para usar o formato</span><span class="sxs-lookup"><span data-stu-id="c19c5-1652">To use format</span></span>|<span data-ttu-id="c19c5-1653">Para a cultura</span><span class="sxs-lookup"><span data-stu-id="c19c5-1653">For culture</span></span>|<span data-ttu-id="c19c5-1654">Use a sobrecarga</span><span class="sxs-lookup"><span data-stu-id="c19c5-1654">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="c19c5-1655">Formato de round-trip ("R")</span><span class="sxs-lookup"><span data-stu-id="c19c5-1655">Round-trip ("R") format</span></span>|<span data-ttu-id="c19c5-1656">Padrão de cultura (atual)</span><span class="sxs-lookup"><span data-stu-id="c19c5-1656">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="c19c5-1657">Um formato específico</span><span class="sxs-lookup"><span data-stu-id="c19c5-1657">A specific format</span></span>|<span data-ttu-id="c19c5-1658">Padrão de cultura (atual)</span><span class="sxs-lookup"><span data-stu-id="c19c5-1658">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="c19c5-1659">Um formato específico</span><span class="sxs-lookup"><span data-stu-id="c19c5-1659">A specific format</span></span>|<span data-ttu-id="c19c5-1660">Uma cultura específica</span><span class="sxs-lookup"><span data-stu-id="c19c5-1660">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="c19c5-1661">O parâmetro `provider` é uma implementação de <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1661">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="c19c5-1662">O método <xref:System.IFormatProvider.GetFormat%2A> retorna um objeto <xref:System.Globalization.NumberFormatInfo> que fornece informações específicas de cultura sobre o formato da cadeia de caracteres retornada por esse método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1662">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="c19c5-1663">Se `provider` está `null`, o <xref:System.Numerics.BigInteger> valor é formatado usando o <xref:System.Globalization.NumberFormatInfo> objeto da cultura atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1663">If `provider` is `null`, the <xref:System.Numerics.BigInteger> value is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="c19c5-1664">A única propriedade do <xref:System.Globalization.NumberFormatInfo> objeto que controla a representação de cadeia de caracteres da <xref:System.Numerics.BigInteger> valor usando o especificador de formato geral é <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, que define o caractere que representa o sinal negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1664">The only property of the <xref:System.Globalization.NumberFormatInfo> object that controls the string representation of the <xref:System.Numerics.BigInteger> value using the general format specifier is <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, which defines the character that represents the negative sign.</span></span>  
  
 <span data-ttu-id="c19c5-1665">O parâmetro `provider` pode ser um dos seguintes:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1665">The `provider` parameter can be one of the following:</span></span>  
  
-   <span data-ttu-id="c19c5-1666">Um objeto <xref:System.Globalization.CultureInfo> que representa a cultura que fornece informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1666">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="c19c5-1667">O objeto <xref:System.Globalization.NumberFormatInfo> que fornece informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1667">The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="c19c5-1668">Um objeto personalizado que implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1668">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="c19c5-1669">O método <xref:System.IFormatProvider.GetFormat%2A> retorna o objeto <xref:System.Globalization.NumberFormatInfo> que fornece informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1669">Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-1670">O exemplo a seguir cria uma instância de um personalizado <xref:System.Globalization.NumberFormatInfo> objeto que define o til (~) como um sinal negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1670">The following example instantiates a custom <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span> <span data-ttu-id="c19c5-1671">O <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> método, em seguida, usa o personalizado <xref:System.Globalization.NumberFormatInfo> objeto para exibir um negativo <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1671">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method then uses the custom <xref:System.Globalization.NumberFormatInfo> object to display a negative <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/cs/System.Numeric.BigInteger.ToString.cs#1)]
 [!code-vb[System.Numeric.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/vb/System.Numeric.BigInteger.ToString.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="bigInteger.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="c19c5-1672">Uma cadeia de caracteres padrão ou de formato numérico personalizado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1672">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="c19c5-1673">Converte o valor numérico do objeto <see cref="T:System.Numerics.BigInteger" /> atual para sua representação de cadeia de caracteres equivalente usando o formato especificado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1673">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1674">A representação de cadeia de caracteres do valor <see cref="T:System.Numerics.BigInteger" /> atual no formato especificado pelo parâmetro <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1674">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="format" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1675">O <xref:System.Numerics.BigInteger.ToString%28System.String%29> formatos do método uma <xref:System.Numerics.BigInteger> valor em um formato especificado usando um <xref:System.Globalization.NumberFormatInfo> objeto que representa as convenções da cultura atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1675">The <xref:System.Numerics.BigInteger.ToString%28System.String%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="c19c5-1676">Se você quiser usar o "R" ou ida e volta, formatar ou especificar uma cultura diferente, use as outras sobrecargas de <xref:System.Numerics.BigInteger.ToString%2A> método, da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1676">If you want to use the "R", or round-trip, format or specify a different culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="c19c5-1677">Para usar o formato</span><span class="sxs-lookup"><span data-stu-id="c19c5-1677">To use format</span></span>|<span data-ttu-id="c19c5-1678">Para a cultura</span><span class="sxs-lookup"><span data-stu-id="c19c5-1678">For culture</span></span>|<span data-ttu-id="c19c5-1679">Use a sobrecarga</span><span class="sxs-lookup"><span data-stu-id="c19c5-1679">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="c19c5-1680">Formato de round-trip ("R")</span><span class="sxs-lookup"><span data-stu-id="c19c5-1680">Round-trip ("R") format</span></span>|<span data-ttu-id="c19c5-1681">Padrão de cultura (atual)</span><span class="sxs-lookup"><span data-stu-id="c19c5-1681">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="c19c5-1682">Formato de round-trip ("R")</span><span class="sxs-lookup"><span data-stu-id="c19c5-1682">Round-trip ("R") format</span></span>|<span data-ttu-id="c19c5-1683">Uma cultura específica</span><span class="sxs-lookup"><span data-stu-id="c19c5-1683">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="c19c5-1684">Um formato específico</span><span class="sxs-lookup"><span data-stu-id="c19c5-1684">A specific format</span></span>|<span data-ttu-id="c19c5-1685">Uma cultura específica</span><span class="sxs-lookup"><span data-stu-id="c19c5-1685">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="c19c5-1686">O `format` parâmetro pode ser qualquer [cadeia de caracteres numérica padrão](~/docs/standard/base-types/standard-numeric-format-strings.md), ou qualquer combinação [cadeias de caracteres de formato numérico personalizado](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1686">The `format` parameter can be any valid [standard numeric string](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="c19c5-1687">Se `format` é igual a <xref:System.String.Empty?displayProperty=nameWithType> ou está `null`, o valor de retorno do atual <xref:System.Numerics.BigInteger> objeto é formatado com o especificador de formato de ida e volta ("R").</span><span class="sxs-lookup"><span data-stu-id="c19c5-1687">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="c19c5-1688">Caso `format` tenha qualquer outro valor, o método lança um <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1688">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="c19c5-1689">O .NET Framework fornece extenso suporte à formatação, que é descrito com mais detalhes nos seguintes tópicos de formatação:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1689">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="c19c5-1690">Para obter mais informações sobre especificadores de formato numérico, consulte [cadeias de caracteres de formato numérico padrão](~/docs/standard/base-types/standard-numeric-format-strings.md) e [às cadeias de caracteres de formato numérico personalizado](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1690">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="c19c5-1691">Para obter mais informações sobre o suporte para formatação no .NET Framework, consulte [tipos de formatação](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1691">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="c19c5-1692">O formato da cadeia de caracteres retornada é determinado pelo objeto <xref:System.Globalization.NumberFormatInfo> para a cultura atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1692">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="c19c5-1693">Dependendo do parâmetro `format`, esse objeto controla símbolos como o sinal negativo, o separador do grupo e o símbolo da vírgula decimal na cadeia de caracteres de saída.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1693">Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</span></span> <span data-ttu-id="c19c5-1694">Para fornecer informações de formatação para culturas diferentes da cultura atual, chame o <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1694">To provide formatting information for cultures other than the current culture, call the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-1695">O exemplo a seguir inicializa um <xref:System.Numerics.BigInteger> de valor e o exibe usando cada cadeia de caracteres de formato padrão e algumas cadeias de caracteres de formato personalizado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1695">The following example initializes a <xref:System.Numerics.BigInteger> value and displays it by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="c19c5-1696"><paramref name="format" /> não é uma cadeia de caracteres de formato válida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1696"><paramref name="format" /> is not a valid format string.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="c19c5-1697">Cadeias de caracteres de formato numérico padrão</span><span class="sxs-lookup"><span data-stu-id="c19c5-1697">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="c19c5-1698">Cadeias de caracteres de formato numérico personalizado</span><span class="sxs-lookup"><span data-stu-id="c19c5-1698">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="bigInteger.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="c19c5-1699">Uma cadeia de caracteres padrão ou de formato numérico personalizado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1699">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="c19c5-1700">Um objeto que fornece informações de formatação específicas de cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1700">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="c19c5-1701">Converte o valor numérico do objeto <see cref="T:System.Numerics.BigInteger" /> atual em sua representação de cadeia de caracteres equivalente usando o formato especificado e as informações de formato específicas de cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1701">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1702">A representação de cadeia de caracteres do valor <see cref="T:System.Numerics.BigInteger" /> atual, conforme especificado pelos parâmetros <paramref name="format" /> e <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1702">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value as specified by the <paramref name="format" /> and <paramref name="provider" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1703">O <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> formatos do método uma <xref:System.Numerics.BigInteger> valor em um formato especificado usando o <xref:System.Globalization.NumberFormatInfo> objeto de uma cultura específica.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1703">The <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="c19c5-1704">Se você quiser usar o formato de ida e volta ou configurações de cultura padrão, use as outras sobrecargas do <xref:System.Numerics.BigInteger.ToString%2A> método, da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1704">If you want to use the round-trip format or default culture settings, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="c19c5-1705">Para usar o formato</span><span class="sxs-lookup"><span data-stu-id="c19c5-1705">To use format</span></span>|<span data-ttu-id="c19c5-1706">Para a cultura</span><span class="sxs-lookup"><span data-stu-id="c19c5-1706">For culture</span></span>|<span data-ttu-id="c19c5-1707">Use a sobrecarga</span><span class="sxs-lookup"><span data-stu-id="c19c5-1707">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="c19c5-1708">Formato de round-trip ("R")</span><span class="sxs-lookup"><span data-stu-id="c19c5-1708">Round-trip ("R") format</span></span>|<span data-ttu-id="c19c5-1709">Padrão de cultura (atual)</span><span class="sxs-lookup"><span data-stu-id="c19c5-1709">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="c19c5-1710">Formato de round-trip ("R")</span><span class="sxs-lookup"><span data-stu-id="c19c5-1710">Round-trip ("R") format</span></span>|<span data-ttu-id="c19c5-1711">Uma cultura específica</span><span class="sxs-lookup"><span data-stu-id="c19c5-1711">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="c19c5-1712">Um formato específico</span><span class="sxs-lookup"><span data-stu-id="c19c5-1712">A specific format</span></span>|<span data-ttu-id="c19c5-1713">Padrão de cultura (atual)</span><span class="sxs-lookup"><span data-stu-id="c19c5-1713">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
  
 <span data-ttu-id="c19c5-1714">O `format` parâmetro pode ser qualquer [cadeia de caracteres numérica padrão](~/docs/standard/base-types/standard-numeric-format-strings.md), ou qualquer combinação [cadeias de caracteres de formato numérico personalizado](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1714">The `format` parameter can be any valid  [standard numeric string](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="c19c5-1715">Se `format` é igual a <xref:System.String.Empty?displayProperty=nameWithType> ou está `null`, o valor de retorno do atual <xref:System.Numerics.BigInteger> objeto é formatado com o especificador de formato de ida e volta ("R").</span><span class="sxs-lookup"><span data-stu-id="c19c5-1715">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="c19c5-1716">Caso `format` tenha qualquer outro valor, o método lança um <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1716">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="c19c5-1717">O .NET Framework fornece extenso suporte à formatação, que é descrito com mais detalhes nos seguintes tópicos de formatação:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1717">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="c19c5-1718">Para obter mais informações sobre especificadores de formato numérico, consulte [cadeias de caracteres de formato numérico padrão](~/docs/standard/base-types/standard-numeric-format-strings.md) e [às cadeias de caracteres de formato numérico personalizado](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1718">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="c19c5-1719">Para obter mais informações sobre o suporte para formatação no .NET Framework, consulte [tipos de formatação](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1719">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="c19c5-1720">O parâmetro `provider` é uma implementação de <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1720">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="c19c5-1721">O método <xref:System.IFormatProvider.GetFormat%2A> retorna um objeto <xref:System.Globalization.NumberFormatInfo> que fornece informações específicas de cultura sobre o formato da cadeia de caracteres retornada por esse método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1721">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="c19c5-1722">Quando o <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> método é invocado, ele chama o `provider` do parâmetro <xref:System.IFormatProvider.GetFormat%2A> método e passa um <xref:System.Type> objeto que representa o <xref:System.Globalization.NumberFormatInfo> tipo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1722">When the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="c19c5-1723">O <xref:System.IFormatProvider.GetFormat%2A> método retorna, em seguida, o <xref:System.Globalization.NumberFormatInfo> objeto que fornece informações de formatação a `value` parâmetro, como o símbolo de sinal negativo, o símbolo de separador de grupo ou o símbolo da vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1723">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the `value` parameter, such as the negative sign symbol, the group separator symbol, or the decimal point symbol.</span></span> <span data-ttu-id="c19c5-1724">Há três maneiras de usar o `provider` parâmetro para fornecer informações de formatação para o <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> método:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1724">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="c19c5-1725">É possível passar um objeto <xref:System.Globalization.CultureInfo> que representa a cultura que fornece informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1725">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="c19c5-1726">O método <xref:System.Globalization.CultureInfo.GetFormat%2A> retorna o objeto <xref:System.Globalization.NumberFormatInfo> que fornece informações de formatação numérica para essa cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1726">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="c19c5-1727">É possível passar o objeto real <xref:System.Globalization.NumberFormatInfo> que fornece informações de formatação numérica.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1727">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="c19c5-1728">(Sua implementação de <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> retorna apenas ele próprio.)</span><span class="sxs-lookup"><span data-stu-id="c19c5-1728">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="c19c5-1729">É possível passar um objeto personalizado que implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1729">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="c19c5-1730">O método <xref:System.IFormatProvider.GetFormat%2A> cria uma instância e retorna o objeto <xref:System.Globalization.NumberFormatInfo> que fornece informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1730">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="c19c5-1731">Caso `provider` seja `null`, a formatação da cadeia de caracteres retornada baseia-se no objeto <xref:System.Globalization.NumberFormatInfo> da cultura atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1731">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-1732">O exemplo a seguir inicializa um <xref:System.Numerics.BigInteger> de valor e o exibe no console usando uma cadeia de caracteres de formato padrão e um <xref:System.Globalization.NumberFormatInfo> objeto que define o til (~) como um sinal negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1732">The following example initializes a <xref:System.Numerics.BigInteger> value, and displays it to the console using a standard format string and a <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="c19c5-1733"><paramref name="format" /> não é uma cadeia de caracteres de formato válida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1733"><paramref name="format" /> is not a valid format string.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="c19c5-1734">Cadeias de caracteres de formato numérico padrão</span><span class="sxs-lookup"><span data-stu-id="c19c5-1734">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="c19c5-1735">Cadeias de caracteres de formato numérico personalizado</span><span class="sxs-lookup"><span data-stu-id="c19c5-1735">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="bigInteger.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c19c5-1736">Tenta converter a representação de cadeia de caracteres de seu equivalente de <see cref="T:System.Numerics.BigInteger" /> e retorna um valor que indica se a conversão foi bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1736">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1737">A representação de cadeia de caracteres de um número.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1737">The string representation of a number.</span></span></param>
        <param name="result"><span data-ttu-id="c19c5-1738">Quando este método retorna, ele contém o <see cref="T:System.Numerics.BigInteger" /> equivalente ao número contido em <paramref name="value" /> ou zero (0) quando a conversão falha.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1738">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or zero (0) if the conversion fails.</span></span> <span data-ttu-id="c19c5-1739">A conversão falhará se o parâmetro de <paramref name="value" /> for <see langword="null" /> ou não estiver no formato correto.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1739">The conversion fails if the <paramref name="value" /> parameter is <see langword="null" /> or is not of the correct format.</span></span> <span data-ttu-id="c19c5-1740">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1740">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="c19c5-1741">Tenta converter a representação de cadeia de caracteres de seu equivalente de <see cref="T:System.Numerics.BigInteger" /> e retorna um valor que indica se a conversão foi bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1741">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1742"><see langword="true" /> caso <paramref name="value" /> tenha sido convertido com êxito; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1742"><see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1743">O <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> método é como o <xref:System.Numerics.BigInteger.Parse%28System.String%29> método, exceto que ele não gerará uma exceção se a conversão falhar.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1743">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="c19c5-1744">Esse método elimina a necessidade de usar o tratamento de exceções para testar se um <xref:System.FormatException> se `value` é inválido e não pode ser analisado com êxito.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1744">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="c19c5-1745">O parâmetro `value` deve ser a representação da cadeia de caracteres de um número decimal na seguinte forma:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1745">The `value` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="c19c5-1746">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="c19c5-1746">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="c19c5-1747">Os elementos entre colchetes ([ e ]) são opcionais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1747">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="c19c5-1748">A tabela a seguir descreve cada elemento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1748">The following table describes each element.</span></span>  
  
|<span data-ttu-id="c19c5-1749">Elemento</span><span class="sxs-lookup"><span data-stu-id="c19c5-1749">Element</span></span>|<span data-ttu-id="c19c5-1750">Descrição</span><span class="sxs-lookup"><span data-stu-id="c19c5-1750">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="c19c5-1751">*ws*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1751">*ws*</span></span>|<span data-ttu-id="c19c5-1752">Espaço em branco opcional.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1752">Optional white space.</span></span>|  
|<span data-ttu-id="c19c5-1753">*sign*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1753">*sign*</span></span>|<span data-ttu-id="c19c5-1754">Um sinal opcional.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1754">An optional sign.</span></span> <span data-ttu-id="c19c5-1755">Os caracteres de sinal válido são determinados pelas propriedades <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> e <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> da cultura atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1755">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="c19c5-1756">*digits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1756">*digits*</span></span>|<span data-ttu-id="c19c5-1757">Uma sequência de dígitos decimais que varia de 0 a 9.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1757">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="c19c5-1758">A cadeia de caracteres especificada pelo `value` parâmetro não pode conter qualquer separadores de grupo ou o separador decimal e ele não pode ter uma parte decimal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1758">The string specified by the `value` parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="c19c5-1759">O parâmetro `value` é interpretado usando-se o estilo <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1759">The `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="c19c5-1760">Além dos dígitos decimais, apenas os espaço à esquerda e à direita com um sinal à esquerda são permitidos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1760">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="c19c5-1761">Para definir explicitamente os elementos de estilo com as informações de formatação específicas da cultura podem estar presentes em `value`, chame o <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> método.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1761">To explicitly define the style elements with the culture-specific formatting information that can be present in `value`, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method.</span></span>  
  
 <span data-ttu-id="c19c5-1762">O `value` parâmetro é analisado usando as informações de formatação em um <xref:System.Globalization.NumberFormatInfo> objeto para a cultura atual.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1762">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="c19c5-1763">Para obter mais informações, consulte <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1763">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c19c5-1764">Essa sobrecarga interpreta todos os dígitos no `value` parâmetro como dígitos decimais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1764">This overload interprets all digits in the `value` parameter as decimal digits.</span></span> <span data-ttu-id="c19c5-1765">Para analisar a representação de cadeia de caracteres de um número hexadecimal, chame o <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> sobrecarga em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1765">To parse the string representation of a hexadecimal number, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-1766">O exemplo a seguir usa o <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> método para instanciar dois <xref:System.Numerics.BigInteger> objetos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1766">The following example uses the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="c19c5-1767">Se as conversões tiverem êxito, ele multiplica cada objeto por outro número e, em seguida, chama o <xref:System.Numerics.BigInteger.Compare%2A> método para determinar a relação entre os dois objetos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1767">If the conversions succeed, it multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two objects.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/cs/System.Numeric.BigInteger.TryParse.cs#1)]
 [!code-vb[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/vb/System.Numeric.BigInteger.TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c19c5-1768"><paramref name="value" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1768"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.ToString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c19c5-1769">A representação de cadeia de caracteres de um número.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1769">The string representation of a number.</span></span> <span data-ttu-id="c19c5-1770">A cadeia de caracteres é interpretada usando-se o estilo especificado por <paramref name="style" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1770">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="c19c5-1771">Um combinação bit a bit de valores de enumeração que indica os elementos de estilo que podem estar presentes em <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1771">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="value" />.</span></span> <span data-ttu-id="c19c5-1772">Um valor típico a ser especificado é <see cref="F:System.Globalization.NumberStyles.Integer" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1772">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="c19c5-1773">Um objeto que fornece informações de formatação específicas de cultura sobre <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1773">An object that supplies culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <param name="result"><span data-ttu-id="c19c5-1774">Quando esse método é retornado, contém o equivalente <see cref="T:System.Numerics.BigInteger" /> do número contido em <paramref name="value" /> ou <see cref="P:System.Numerics.BigInteger.Zero" /> se a conversão falhou.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1774">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or <see cref="P:System.Numerics.BigInteger.Zero" /> if the conversion failed.</span></span> <span data-ttu-id="c19c5-1775">A conversão falhará se o parâmetro <paramref name="value" /> for <see langword="null" /> ou não estiver em um formato em conformidade com <paramref name="style" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1775">The conversion fails if the <paramref name="value" /> parameter is <see langword="null" /> or is not in a format that is compliant with <paramref name="style" />.</span></span> <span data-ttu-id="c19c5-1776">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1776">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="c19c5-1777">Tenta converter a representação de cadeia de caracteres de um número em um estilo e formato específico à cultura especificados no equivalente <see cref="T:System.Numerics.BigInteger" /> e retorna um valor que indica se a conversão foi bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1777">Tries to convert the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="c19c5-1778"><see langword="true" /> caso o parâmetro <paramref name="value" /> tenha sido convertido com êxito; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1778"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1779">O <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> método é como o <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> método, exceto que ele não gerará uma exceção se a conversão falhar.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1779">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="c19c5-1780">Esse método elimina a necessidade de usar o tratamento de exceções para testar se um <xref:System.FormatException> se `value` é inválido e não pode ser analisado com êxito.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1780">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="c19c5-1781">O parâmetro `style` define os elementos de estilo (como o espaço em branco ou um sinal positivo ou negativo) que são permitidos no parâmetro `value` para que a operação de análise seja bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1781">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="c19c5-1782">Ele deve ser uma combinação de sinalizadores de bits da enumeração <xref:System.Globalization.NumberStyles>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1782">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="c19c5-1783">Dependendo do valor de `style`, o parâmetro `value` pode incluir os seguintes elementos:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1783">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="c19c5-1784">[*ws*] [*$*] [*entrada*] [*dígitos*,]*dígitos*[. *dígitos fracionários*] [E [*sinal*]*exponential_digits*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="c19c5-1784">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="c19c5-1785">Se o `style` parâmetro inclui <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, o `value` parâmetro pode incluir os seguintes elementos:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1785">If the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="c19c5-1786">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="c19c5-1786">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="c19c5-1787">Os elementos entre colchetes ([ e ]) são opcionais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1787">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="c19c5-1788">A tabela a seguir descreve cada elemento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1788">The following table describes each element.</span></span>  
  
|<span data-ttu-id="c19c5-1789">Elemento</span><span class="sxs-lookup"><span data-stu-id="c19c5-1789">Element</span></span>|<span data-ttu-id="c19c5-1790">Descrição</span><span class="sxs-lookup"><span data-stu-id="c19c5-1790">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="c19c5-1791">*ws*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1791">*ws*</span></span>|<span data-ttu-id="c19c5-1792">Espaço em branco opcional.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1792">Optional white space.</span></span> <span data-ttu-id="c19c5-1793">Espaço em branco podem aparecer no início da `value` se `style` inclui as <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> sinalizador, ou no final da `value` se `style` inclui o <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1793">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="c19c5-1794">Um símbolo de moeda específico de cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1794">A culture-specific currency symbol.</span></span> <span data-ttu-id="c19c5-1795">A posição na cadeia de caracteres é definida pela propriedade <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> do objeto <xref:System.Globalization.NumberFormatInfo> retornado pelo método <xref:System.IFormatProvider.GetFormat%2A> do parâmetro `provider`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1795">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="c19c5-1796">O símbolo de moeda pode ser exibido em `value` caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1796">The currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1797">*sign*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1797">*sign*</span></span>|<span data-ttu-id="c19c5-1798">Um sinal opcional.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1798">An optional sign.</span></span> <span data-ttu-id="c19c5-1799">O sinal pode ser exibido no início de `value` caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> e ele pode ser exibido no final de `value` caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1799">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c19c5-1800">Os parênteses podem ser usados em `value` para indicar um valor negativo caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1800">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1801">*digits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1801">*digits*</span></span>|<span data-ttu-id="c19c5-1802">Uma sequência de dígitos de 0 a 9.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1802">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="c19c5-1803">*,*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1803">*,*</span></span>|<span data-ttu-id="c19c5-1804">Um separador de grupo específico de cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1804">A culture-specific group separator.</span></span> <span data-ttu-id="c19c5-1805">O separador de grupo da cultura especificada por `provider` pode aparecer em `value` se `style` inclui o <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1805">The group separator of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1806">*.*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1806">*.*</span></span>|<span data-ttu-id="c19c5-1807">Um símbolo de vírgula decimal específico de cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1807">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="c19c5-1808">O símbolo da vírgula decimal da cultura especificada por `provider` pode ser exibido em `value` caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1808">The decimal point symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1809">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1809">*fractional_digits*</span></span>|<span data-ttu-id="c19c5-1810">Uma ou mais ocorrências de dígito 0.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1810">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="c19c5-1811">Os dígitos fracionários só podem ser exibidos em `value` caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1811">Fractional digits can appear in `value` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1812">E</span><span class="sxs-lookup"><span data-stu-id="c19c5-1812">E</span></span>|<span data-ttu-id="c19c5-1813">O caractere "e" ou "E", que indica que o valor é representado em notação exponencial (científica).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1813">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="c19c5-1814">O parâmetro `value` pode representar um número em notação exponencial caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1814">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1815">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1815">*exponential_digits*</span></span>|<span data-ttu-id="c19c5-1816">Uma sequência de dígitos de 0 a 9.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1816">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="c19c5-1817">O parâmetro `value` pode representar um número em notação exponencial caso `style` inclua o sinalizador <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1817">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c19c5-1818">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="c19c5-1818">*hexdigits*</span></span>|<span data-ttu-id="c19c5-1819">Uma sequência de dígitos hexadecimais de 0 a f ou de 0 a F.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1819">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="c19c5-1820">Quaisquer caracteres de (U + 0000) terminação NUL no `s` são ignorados pela operação de análise, independentemente do valor de `style` argumento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1820">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="c19c5-1821">Uma cadeia de caracteres apenas com dígitos decimais (que corresponde ao sinalizador <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> ) sempre é analisada com êxito.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1821">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="c19c5-1822">A maioria dos elementos de controle de membros <xref:System.Globalization.NumberStyles> restantes que podem estar presentes, mas que não precisam estar presentes, na cadeia de caracteres de entrada.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1822">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="c19c5-1823">A tabela a seguir indica como os membros <xref:System.Globalization.NumberStyles> individuais afetam os elementos que podem estar presentes em `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1823">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="c19c5-1824">Valores `NumberStyles` não compostos</span><span class="sxs-lookup"><span data-stu-id="c19c5-1824">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="c19c5-1825">Elementos permitidos no valor além de dígitos</span><span class="sxs-lookup"><span data-stu-id="c19c5-1825">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="c19c5-1826">Somente dígitos decimais.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1826">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="c19c5-1827">O ponto decimal (*.*) e *dígitos fracionários* elementos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1827">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="c19c5-1828">No entanto, *fractional_digits* deve consistir em apenas um ou mais dígitos 0 ou o método retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1828">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="c19c5-1829">O "e" ou o caractere "E, que indica a notação exponencial, juntamente com" *exponential_digits*.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1829">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="c19c5-1830">Se `value` representa um número em notação exponencial, ele não pode ter um componente diferente de zero, a fração.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1830">If `value` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="c19c5-1831">O *ws* elemento no início de `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1831">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="c19c5-1832">O elemento *ws* no final de `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1832">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="c19c5-1833">O *sinal* elemento antes *dígitos*.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1833">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="c19c5-1834">O *sinal* elemento após *dígitos*.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1834">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="c19c5-1835">O elemento *sinal* na forma de parênteses que incluem o valor numérico.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1835">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="c19c5-1836">O separador de grupo (*,*) elemento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1836">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="c19c5-1837">A moeda (*$*) elemento.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1837">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="c19c5-1838">Todos os elementos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1838">All elements.</span></span> <span data-ttu-id="c19c5-1839">No entanto, `value` não pode representar um número hexadecimal ou um número em notação exponencial.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1839">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="c19c5-1840">O *ws* elemento no início ou final do `value`, *sign* no início do `value`e o ponto decimal (*.*) símbolo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1840">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="c19c5-1841">O parâmetro `value` também pode usar notação exponencial.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1841">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="c19c5-1842">O *ws*, *sinal*, separador de grupo (*,*) e o ponto decimal (*.*) elementos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1842">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="c19c5-1843">Todos os elementos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1843">All elements.</span></span> <span data-ttu-id="c19c5-1844">No entanto, `value` não pode representar um número hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1844">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="c19c5-1845">Se você usar o <xref:System.Numerics.BigInteger.TryParse%2A> método para a representação de cadeia de caracteres de ida e volta de um <xref:System.Numerics.BigInteger> valor que foi a saída pela <xref:System.Numerics.BigInteger.ToString%2A> método, você deve usar o <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> método com o especificador de formato "R" para gerar a representação de cadeia de caracteres da <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1845">If you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="c19c5-1846">Caso contrário, a representação de cadeia de caracteres da <xref:System.Numerics.BigInteger> preserva apenas os 50 dígitos mais significativos do valor original e os dados podem ser perdidos quando você usa o <xref:System.Numerics.BigInteger.TryParse%2A> método para restaurar o <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1846">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="c19c5-1847">Caso o sinalizador <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> seja usado, `value` deve ser um valor hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1847">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `value` must be a hexadecimal value.</span></span> <span data-ttu-id="c19c5-1848">Os únicos outros sinalizadores que podem estar presentes em `style` são <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> e <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1848">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c19c5-1849">(A enumeração <xref:System.Globalization.NumberStyles> tem um estilo composto, <xref:System.Globalization.NumberStyles.HexNumber>, que inclui ambos os sinalizadores de espaço em branco.)</span><span class="sxs-lookup"><span data-stu-id="c19c5-1849">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c19c5-1850">Caso `value` seja a representação da cadeia de caracteres de um número hexadecimal, ele não pode ser precedido por qualquer decoração (como `0x` ou `&h`) que o diferencia como um número hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1850">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="c19c5-1851">Isso faz a conversão falhar.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1851">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="c19c5-1852">Se `value` é uma cadeia de caracteres hexadecimal, o <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> método interpreta `value` como um número negativo armazenado usando a representação de complemento de dois se seus dois primeiros dígitos hexadecimais são maiores que ou igual a `0x80`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1852">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="c19c5-1853">Em outras palavras, o método interpreta o bit de ordem mais alta do primeiro byte em `value` como o bit de sinal.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1853">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="c19c5-1854">Para certificar-se de que uma cadeia de caracteres hexadecimal é interpretada corretamente como um número positivo, o primeiro dígito em `value` deve ter um valor igual a zero.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1854">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="c19c5-1855">Por exemplo, o método interpreta `0x80` como um valor negativo, mas ele interpreta o `0x080` ou `0x0080` como um valor positivo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1855">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="c19c5-1856">O exemplo a seguir ilustra a diferença entre cadeias de caracteres hexadecimais que representam valores positivos e negativos.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1856">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParseHex1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParseHex1.vb#1)]  
  
 <span data-ttu-id="c19c5-1857">O parâmetro `provider` é uma implementação de <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1857">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="c19c5-1858">O método <xref:System.IFormatProvider.GetFormat%2A> retorna um objeto <xref:System.Globalization.NumberFormatInfo> que fornece informações específicas de cultura sobre o formato de `value`.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1858">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="c19c5-1859">O parâmetro `provider` pode ser qualquer um dos seguintes:</span><span class="sxs-lookup"><span data-stu-id="c19c5-1859">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="c19c5-1860">Um objeto <xref:System.Globalization.CultureInfo> que representa a cultura que fornece informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1860">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="c19c5-1861">O método <xref:System.Globalization.CultureInfo.GetFormat%2A> retorna o objeto <xref:System.Globalization.NumberFormatInfo> que fornece informações de formatação numérica para essa cultura.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1861">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="c19c5-1862">Um objeto <xref:System.Globalization.NumberFormatInfo> que fornece informações de formatação numérica.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1862">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="c19c5-1863">(Sua implementação de <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> retorna apenas ele próprio.)</span><span class="sxs-lookup"><span data-stu-id="c19c5-1863">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="c19c5-1864">Um objeto personalizado que implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1864">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="c19c5-1865">O método <xref:System.IFormatProvider.GetFormat%2A> cria uma instância e retorna o objeto <xref:System.Globalization.NumberFormatInfo> que fornece informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1865">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="c19c5-1866">Caso `provider` seja `null`, o objeto <xref:System.Globalization.NumberFormatInfo> da cultura atual é usado.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1866">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c19c5-1867">O exemplo a seguir faz algumas chamadas para o <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> método usando várias combinações de valores para o `style` e `provider` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1867">The following example makes some calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#2)]  
  
 <span data-ttu-id="c19c5-1868">Um número de chamadas individuais para o <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> método passar uma instância das seguintes `BigIntegerFormatProvider` classe, que define um til (~) como o sinal negativo.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1868">A number of the individual calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c19c5-1869"><paramref name="style" /> não é um valor <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1869"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="c19c5-1870">- ou -</span><span class="sxs-lookup"><span data-stu-id="c19c5-1870">-or-</span></span> 
 <span data-ttu-id="c19c5-1871"><paramref name="style" /> inclui o sinalizador <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> ou <see cref="F:System.Globalization.NumberStyles.HexNumber" /> em conjunto com outro valor.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1871"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public bool TryWriteBytes (Span&lt;byte&gt; destination, out int bytesWritten, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryWriteBytes (destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryWriteBytes : Span&lt;byte&gt; *  * bool * bool -&gt; bool" Usage="bigInteger.TryWriteBytes (destination, bytesWritten, isUnsigned, isBigEndian)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isUnsigned" Type="System.Boolean" />
        <Parameter Name="isBigEndian" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger Zero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger Zero { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.Zero : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Zero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c19c5-1872">Obtém um valor que representa o número 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1872">Gets a value that represents the number 0 (zero).</span></span></summary>
        <value><span data-ttu-id="c19c5-1873">Um inteiro cujo valor é 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="c19c5-1873">An integer whose value is 0 (zero).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19c5-1874">O <xref:System.Numerics.BigInteger> objeto retornado por essa propriedade fornece uma fonte conveniente de um valor de zero para uso em comparações e atribuições.</span><span class="sxs-lookup"><span data-stu-id="c19c5-1874">The <xref:System.Numerics.BigInteger> object returned by this property provides a convenient source of a zero value for use in assignments and comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsZero" />
      </Docs>
    </Member>
  </Members>
</Type>