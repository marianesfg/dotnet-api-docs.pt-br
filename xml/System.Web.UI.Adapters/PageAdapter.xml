<Type Name="PageAdapter" FullName="System.Web.UI.Adapters.PageAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ed6d6f1617aee1fb32e775ee41037489b2274cb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37542563" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PageAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.PageAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageAdapter&#xA;Inherits ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAdapter abstract : System::Web::UI::Adapters::ControlAdapter" />
  <TypeSignature Language="F#" Value="type PageAdapter = class&#xA;    inherit ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Adapta uma página da Web para um navegador específico e fornece a classe base da qual todos os adaptadores de página são herdados, direta ou indiretamente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Adapters.PageAdapter> é uma classe abstrata que se adapta a uma página da Web para uma classe específica de navegadores, definidos pela linguagem de marcação que usa o navegador (por exemplo, HTML ou XHTML). Grande parte da capacidade de adaptação no comportamento de renderização pode ser encapsulado nas classes de gravador de texto especializado que derivam de <xref:System.Web.UI.HtmlTextWriter> classe, portanto, nem sempre é necessário fornecer um adaptador de página.  
  
 A maioria dos membros de adaptadores de página derivada são chamados da <xref:System.Web.UI.Page> classe ou de adaptadores de controle. Primeiro, o <xref:System.Web.UI.Page> adaptadores de controle ou classe detectar a presença do adaptador de página derivado e, em seguida, chamar o membro ou fornecem a funcionalidade, se o adaptador de página não estiver presente.  
  
 Os membros do <xref:System.Web.UI.Adapters.PageAdapter> classe fornecem a seguinte funcionalidade:  
  
-   O <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> e <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams%2A> propriedades definem os cabeçalhos HTTP adicionais e HTTP `GET` e `POST` parâmetros que podem ser usados para variar o cache. Eles são chamados durante a inicialização do cache do <xref:System.Web.UI.Page> classe.  
  
-   O <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> método retorna um objeto que pode ser usado para manter os estados de exibição e controle combinados da página. Ele é referenciado no <xref:System.Web.UI.Page.PageStatePersister%2A> propriedade se um adaptador de página derivado está presente.  
  
-   O <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> método fornece um fragmento de código DHTML que pode ser usado para fazer referência a formulários em scripts.  
  
-   O <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> método retorna uma coleção de variáveis de postback, se a página estiver no postback. Ele é chamado pelo .NET Framework em vez do <xref:System.Web.UI.Page.DeterminePostBackMode%2A?displayProperty=nameWithType> método se um adaptador de página derivado está presente.  
  
-   O <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> e <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> métodos são usados por adaptadores de controle para renderizar os hiperlinks se um adaptador de página derivado está presente.  
  
-   O <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> método renderiza um hiperlink ou uma marca de postback do cliente que pode enviar o formulário.  
  
-   O <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> e <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> métodos são usados por adaptadores de controle de botão de rádio para fazer referência a outra <xref:System.Web.UI.WebControls.RadioButton> controles em um grupo de botões de opção.  
  
-   O <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> propriedade fornece acesso aos estados de controle e exibição combinados do <xref:System.Web.UI.Page> objeto por meio do internal `ClientState` propriedade do <xref:System.Web.UI.Page> classe.  
  
-   O <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> método é usado por adaptadores de controle para executar a transformação de texto específicos do dispositivo.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como derivar uma classe chamada `CustomPageAdapter` do <xref:System.Web.UI.Adapters.PageAdapter> de classe e substituir o <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método. O <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método adiciona um atributo chamado `src` a um hiperlink, que contém uma referência à página atual. Todos os hiperlinks renderizados em páginas para as quais `CustomPageAdapter` está anexado terá o `src` atributo.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.Adapters.PageAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O .NET Framework constrói esse adaptador internamente quando ele cria correspondente <xref:System.Web.UI.Page> classe ou classe derivada.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByHeaders As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByHeaders { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByHeaders : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma lista de cabeçalhos HTTP adicionais pela qual o cache é variado para a página da Web à qual este adaptador de página derivado está anexado.</summary>
        <value>Uma <see cref="T:System.Collections.IList" /> que contém uma lista de cabeçalhos HTTP; caso contrário, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entidades na Web que armazena em cache as páginas da Web em cache várias versões, com base em cabeçalhos HTTP e outros fatores. Por exemplo, uma versão para cada idioma em que uma página é gerada normalmente é armazenado em cache, com base no `Accept-Language` cabeçalho HTTP.  
  
 Para navegadores específicos, pode ser necessário variar o cache cabeçalhos HTTP, além de cabeçalhos de cache de destino independente desse controle. Por exemplo, pode ser necessário para armazenar em cache versões diferentes de uma página para diferentes tamanhos de tela.  
  
 Os nomes de cabeçalho retornados pela <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> propriedade são adicionados à lista de cabeçalhos no `Vary` cabeçalho HTTP enviado ao navegador do cliente.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando você herda o <see cref="T:System.Web.UI.Adapters.PageAdapter" /> classe, você pode substituir o <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> propriedade para retornar uma lista dos cabeçalhos adicionais para controlar o cache de destino específico. O <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> base retorna propriedade <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByHeaders" />
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByParams">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByParams As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByParams { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByParams : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma lista de parâmetros adicionais de solicitações HTTP GET e POST pela qual o cache é variado para a página da Web à qual este adaptador de página derivado está anexado.</summary>
        <value>Uma <see cref="T:System.Collections.IList" /> que contém uma lista dos parâmetros de GET e POST; caso contrário, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entidades na Web que o cache de páginas da Web cache várias versões com base em, entre outros fatores, os parâmetros de solicitação. Por exemplo, uma versão para cada local do repositório dentro de uma cadeia de varejo para o qual uma página pode ser gerada seria normalmente ser armazenados em cache com base no nome do parâmetro (por exemplo, `StoreID`).  
  
 Para navegadores específicos, pode ser necessário variar o cache GET ou parâmetros além dos parâmetros de POSTAGEM que cache de destino independente de controle. Por exemplo, pode ser necessário para armazenar em cache versões diferentes de uma página diferente de celular para provedores de serviço.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando você herda o <see cref="T:System.Web.UI.Adapters.PageAdapter" /> classe, você pode substituir o <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> propriedade para retornar uma lista dos parâmetros adicionais de GET ou POST para controlar o cache de destino específico. O <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> retorno do método de base <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
      </Docs>
    </Member>
    <Member MemberName="ClientState">
      <MemberSignature Language="C#" Value="protected string ClientState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientState As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ClientState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientState : string" Usage="System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma cadeia de caracteres codificada que contém os dados de estados de exibição e controle da página da Web à qual este adaptador de página derivada está anexado.</summary>
        <value>Um codificada <see cref="T:System.String" /> que contém os estados de exibição e controle combinados dos controles no associado <see cref="T:System.Web.UI.Page" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> propriedade fornece acesso para interno `ClientState` propriedade do <xref:System.Web.UI.Page> classe.  
  
 Exibir dados de estado armazenados, o <xref:System.Web.UI.PageStatePersister> objeto interno `ClientState` propriedade de <xref:System.Web.UI.Page> sempre será salvo no campo oculto na página da Web.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao herdar dos <see cref="T:System.Web.UI.Adapters.PageAdapter" /> classe, você não pode substituir o <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> propriedade porque ele não é <see langword="virtual" />. Para modificar o comportamento de <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> em uma classe derivada, implementa uma nova <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> propriedade que faz referência a <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> propriedade da classe base.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se a página da Web está em um postback e retorna uma coleção de nomes/valores das variáveis de postback.</summary>
        <returns>Uma <see cref="T:System.Collections.Specialized.NameValueCollection" /> das variáveis de postback, se houver; caso contrário, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> método retorna um dos seguintes coleções:  
  
-   Variáveis de formulário, se o método de transferência de dados HTTP é `POST`.  
  
-   Variáveis de cadeia de caracteres de consulta, se o método HTTP é `GET`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando você herda o <see cref="T:System.Web.UI.Adapters.PageAdapter" /> classe, você pode substituir o <see cref="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" /> método para fornecer tratamento de destino específico da coleção de variáveis de postback.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Page.DeterminePostBackMode" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackModeUnvalidated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma coleção de nome-valor de dados que foram enviados à página usando um comando POST ou GET, sem executar a validação de solicitação do ASP.NET na solicitação.</summary>
        <returns>Os dados de formulário invalidados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações, consulte a classe <xref:System.Web.UnvalidatedRequestValues>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackFormReference">
      <MemberSignature Language="C#" Value="protected internal virtual string GetPostBackFormReference (string formId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetPostBackFormReference(string formId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetPostBackFormReference (formId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetPostBackFormReference(System::String ^ formId);" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackFormReference : string -&gt; string&#xA;override this.GetPostBackFormReference : string -&gt; string" Usage="pageAdapter.GetPostBackFormReference formId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formId">Uma <see cref="T:System.String" /> que contém a ID do cliente do formulário que foi postado.</param>
        <summary>Retorna um fragmento de código DHTML que o navegador do cliente pode usar para referenciar o formulário na página que foi postado.</summary>
        <returns>Uma <see cref="T:System.String" /> com uma referência ao formulário na página que foi postado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> método fornece uma referência ao formulário de postback. O fragmento de código tem o seguinte formato:  
  
 `document.forms['``formID``']`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando você herda o <see cref="T:System.Web.UI.Adapters.PageAdapter" /> classe, você pode substituir o <see cref="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" /> método se a marcação para o navegador com suporte pelo adaptador requer um formato diferente para a referência de postback do formulário. Por exemplo, o padrão de HTML 3.2 usado pelos navegadores PocketPC requer o seguinte formato: <c>documento.</c><paramref name="formID" /></para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="GetRadioButtonsByGroup">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetRadioButtonsByGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRadioButtonsByGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRadioButtonsByGroup (groupName As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ICollection ^ GetRadioButtonsByGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="abstract member GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection&#xA;override this.GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection" Usage="pageAdapter.GetRadioButtonsByGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Uma <see cref="T:System.String" /> que é o nome do grupo <see cref="T:System.Web.UI.WebControls.RadioButton" /> a ser recuperado.</param>
        <summary>Recupera uma coleção de controles de botão de opção especificada pelo <paramref name="groupName" />.</summary>
        <returns>Uma <see cref="T:System.Collections.ICollection" /> de controles <see cref="T:System.Web.UI.WebControls.RadioButton" /> que compõem o <paramref name="groupName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uso de adaptadores de controle de botão de opção de <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> e <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> métodos para fazer referência a outra <xref:System.Web.UI.WebControls.RadioButton> controles no grupo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="GetStatePersister">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.PageStatePersister GetStatePersister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.PageStatePersister GetStatePersister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatePersister () As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::PageStatePersister ^ GetStatePersister();" />
      <MemberSignature Language="F#" Value="abstract member GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister&#xA;override this.GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister" Usage="pageAdapter.GetStatePersister " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um objeto que é usado pela página da Web para manter os estados de exibição e controle.</summary>
        <returns>Um objeto derivado de <see cref="T:System.Web.UI.PageStatePersister" /> que dá suporte à criação e extração dos estados de controle e exibição combinados da <see cref="T:System.Web.UI.Page" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Page.PageStatePersister%2A> usos de propriedade a <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> método para retornar o objeto derivado de <xref:System.Web.UI.PageStatePersister> classe, que de formulários e extrai os estados de controle e exibição combinados da página. Se não houver nenhum adaptador de página derivado anexado à página, um <xref:System.Web.UI.HiddenFieldPageStatePersister> objeto é usado para manter o estado em um campo oculto na página.  
  
|Tipo de vínculo|Link resultante|  
|---------------|--------------------|  
|Referência de entidade de código, cer|<xref:System.Char.ToString%2A>|  
|Entidade de referência qualificado, cerq de código|<xref:System.Char.ToString%2A?displayProperty=nameWithType>|  
|Entidade de referência específico, as cers de código|<xref:System.Char.ToString%28System.Char%29>|  
|Entidade de referência qualificada específico, cerqs de código|<xref:System.Char.ToString%28System.Char%29?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Exibir dados de estado armazenados pelo <see cref="T:System.Web.UI.PageStatePersister" /> objeto no interna <see langword="ClientState" /> propriedade do <see cref="T:System.Web.UI.Page" /> sempre será salvo no campo oculto na página da Web.</para>
        </block>
        <block subset="none" type="overrides">
          <para>Quando você herda o <see cref="T:System.Web.UI.Adapters.PageAdapter" /> classe, você pode substituir o <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> método para retornar outro derivado persister de estado da página se ela não for viável para manter o estado combinado em um campo oculto (por exemplo, devido a recursos limitados).  O <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> base classe retorna uma <see cref="T:System.Web.UI.HiddenFieldPageStatePersister" /> objeto. Você pode usar o <see cref="T:System.Web.UI.SessionPageStatePersister" /> classe para manter o estado da página no estado de sessão.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
        <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
        <altmember cref="T:System.Web.UI.SessionPageStatePersister" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRadioButton">
      <MemberSignature Language="C#" Value="public virtual void RegisterRadioButton (System.Web.UI.WebControls.RadioButton radioButton);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRadioButton(class System.Web.UI.WebControls.RadioButton radioButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRadioButton(System::Web::UI::WebControls::RadioButton ^ radioButton);" />
      <MemberSignature Language="F#" Value="abstract member RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit&#xA;override this.RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit" Usage="pageAdapter.RegisterRadioButton radioButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radioButton" Type="System.Web.UI.WebControls.RadioButton" />
      </Parameters>
      <Docs>
        <param name="radioButton">O <see cref="T:System.Web.UI.WebControls.RadioButton" /> a adicionar à coleção.</param>
        <summary>Adiciona um controle de botão de opção à coleção para um grupo de botões de opção especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Adapters.PageAdapter> classe usa um <xref:System.Collections.Specialized.ListDictionary> objeto para manter uma lista de grupos de botões de rádio. Cada elemento na <xref:System.Collections.Specialized.ListDictionary> é uma coleção do <xref:System.Web.UI.WebControls.RadioButton> controles em um grupo de botões de opção. O <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> método adiciona uma <xref:System.Web.UI.WebControls.RadioButton> controle à coleção apropriada, criando a coleção se ele ainda não existir e criando <xref:System.Collections.Specialized.ListDictionary> se são não registrados anteriormente <xref:System.Web.UI.WebControls.RadioButton> controles.  
  
 Uso de adaptadores de controle de botão de opção de <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> e <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> métodos para fazer referência a outra <xref:System.Web.UI.WebControls.RadioButton> controles em um grupo de botões de opção.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Renderiza uma marcação de hiperlink de abertura para o fluxo de resposta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que contém os métodos para renderizar a saída específica do destino.</param>
        <param name="targetUrl">O valor <see cref="T:System.String" /> que contém a URL de destino do link.</param>
        <param name="encodeUrl">
          <see langword="true" /> para usar <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> para codificar o fluxo de saída; caso contrário, <see langword="false" />.</param>
        <param name="softkeyLabel">O valor <see cref="T:System.String" /> a ser usado como um rótulo de tecla.</param>
        <summary>Renderiza uma marcação de hiperlink de abertura que inclui a URL de destino para o fluxo de resposta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método grava uma abertura marcação de hiperlink. Quando `writer` é <xref:System.Web.UI.HtmlTextWriter>, essa marca tem o seguinte formato:  
  
 `<a href="``targetUrl``">`  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como derivar uma classe chamada `CustomPageAdapter` do <xref:System.Web.UI.Adapters.PageAdapter> de classe e substituir o <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método. O <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método adiciona um atributo chamado `src` a um hiperlink, que contém uma referência à página atual. Todos os hiperlinks renderizados em páginas para as quais `CustomPageAdapter` está anexado terá o `src` atributo.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao herdar dos <see cref="T:System.Web.UI.Adapters.PageAdapter" /> classe, você pode substituir o <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> método para gravar um formato diferente para um hiperlink de abertura de marca ou marca adicional de gravar atributos. Por exemplo, o <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> método base não grava um atributo para <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que contém os métodos para renderizar a saída específica do destino.</param>
        <param name="targetUrl">O valor <see cref="T:System.String" /> que contém a URL de destino do link.</param>
        <param name="encodeUrl">
          <see langword="true" /> para usar <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> para codificar o fluxo de saída; caso contrário, <see langword="false" />.</param>
        <param name="softkeyLabel">O valor <see cref="T:System.String" /> a ser usado como um rótulo de tecla.</param>
        <param name="accessKey">O valor <see cref="T:System.String" /> a ser atribuído ao atributo <see langword="accessKey" /> do link a ser criado.</param>
        <summary>Renderiza uma marcação de hiperlink de abertura que inclui a URL de destino e uma chave de acesso para o fluxo de resposta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método grava uma abertura marcação de hiperlink. Quando `writer` é um <xref:System.Web.UI.HtmlTextWriter> do objeto, essa marca tem o seguinte formato:  
  
 `<a href="``targetUrl``" accessKey="``accessKey``">`  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como derivar uma classe chamada `CustomPageAdapter` do <xref:System.Web.UI.Adapters.PageAdapter> de classe e substituir o <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Adiciona um atributo chamado `src` a um hiperlink, que contém uma referência à página atual. Todos os hiperlinks renderizados em páginas para as quais `CustomPageAdapter` está anexado terá o `src` atributo.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessKey" /> é maior que um caractere.</exception>
        <block subset="none" type="overrides">
          <para>Ao herdar dos <see cref="T:System.Web.UI.Adapters.PageAdapter" /> classe, você pode substituir o <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> método para gravar um formato diferente para um hiperlink de abertura de marca ou marca adicional de gravar atributos. Por exemplo, o <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> método base não grava um atributo para <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderEndHyperlink (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndHyperlink(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndHyperlink (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndHyperlink(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="pageAdapter.RenderEndHyperlink writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que contém os métodos para renderizar a saída específica ao destino.</param>
        <summary>Renderiza uma marcação de hiperlink de fechamento para o fluxo de resposta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> método grava um fechamento marcação de hiperlink. Quando o gravador de texto é um <xref:System.Web.UI.HtmlTextWriter> do objeto, essa marca tem o seguinte formato:  
  
 `</a>`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao herdar dos <see cref="T:System.Web.UI.Adapters.PageAdapter" /> classe, você pode substituir o <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" /> e <see cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" /> métodos quando em um formato diferente do hiperlink devem ser renderizados.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderPostBackEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Renderiza um evento de postback no fluxo de resposta como um link, incluindo todos os argumentos necessários.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que contém os métodos para renderizar a saída específica do destino.</param>
        <param name="target">O valor <see cref="T:System.String" /> que contém o nome de destino do evento de postback.</param>
        <param name="argument">O valor <see cref="T:System.String" /> que contém o argumento a ser passado para o evento de destino de postback.</param>
        <param name="softkeyLabel">O valor <see cref="T:System.String" /> a ser usado como um rótulo de tecla.</param>
        <param name="text">O valor <see cref="T:System.String" /> do texto a ser exibido como o link.</param>
        <summary>Renderiza um evento de postback no fluxo de resposta como um hiperlink, incluindo o estado da exibição codificado e possivelmente criptografado e um destino de evento e argumento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> método grava um evento de postback como um hiperlink sem script.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao herdar dos <see cref="T:System.Web.UI.Adapters.PageAdapter" /> classe, você pode substituir o <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> método se um formato diferente é necessário para o hiperlink de evento de postback ou o navegador tem outros requisitos exclusivos. Por exemplo, alguns navegadores exigem ser não vazio se o link é renderizar o texto do hiperlink. Você também pode substituir <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> se recursos limitados impedir incluindo o estado de exibição como um parâmetro de URL. O <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> método base não grava um atributo para <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que contém os métodos para renderizar a saída específica do destino.</param>
        <param name="target">O valor <see cref="T:System.String" /> que contém o nome de destino do evento de postback.</param>
        <param name="argument">O valor <see cref="T:System.String" /> que contém o argumento a ser passado para o evento de destino de postback.</param>
        <param name="softkeyLabel">O valor <see cref="T:System.String" /> a ser usado como um rótulo de tecla.</param>
        <param name="text">O valor <see cref="T:System.String" /> do texto a ser exibido como o link.</param>
        <param name="postUrl">O valor <see cref="T:System.String" /> que contém a página da URL de destino do postback.</param>
        <param name="accessKey">O valor <see cref="T:System.String" /> usado a ser atribuído ao atributo <see langword="accessKey" /> do link criado.</param>
        <summary>Renderiza um evento de postback no fluxo de resposta como um hiperlink, incluindo o estado da exibição codificado e possivelmente criptografado, um destino de evento e argumento, um parâmetro de página anterior e uma chave de acesso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> método grava um evento de postback como um hiperlink sem script, incluindo possivelmente fragmentada <xref:System.Web.HttpUtility.UrlEncode%2A> estado de exibição, `__EVENTTARGET=target`, `__EVENTARGUMENT=argument`, `__PREVIOUSPAGE=currentFilePath` parâmetros e um `accessKey="accessKey"` atributo.  
  
 Estado de exibição será criptografado se a `enableViewStateMac` atributo do [Element (ASP.NET Settings Schema) de páginas](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) elemento de configuração é definido como `true`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao herdar dos <see cref="T:System.Web.UI.Adapters.PageAdapter" /> classe, você pode substituir o <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> método se um formato diferente é necessário para o hiperlink de evento de postback ou o navegador tem outros requisitos exclusivos. Por exemplo, alguns navegadores exigem ser não vazio se o link é renderizar o texto do hiperlink. Você também pode substituir <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> se recursos limitados impedir incluindo o estado de exibição como um parâmetro de URL. O <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> método base não grava um atributo para <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string * bool -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que contém os métodos para renderizar a saída específica do destino.</param>
        <param name="target">O valor <see cref="T:System.String" /> que contém o nome de destino do evento de postback.</param>
        <param name="argument">O valor <see cref="T:System.String" /> que contém o argumento a ser passado para o evento de destino de postback.</param>
        <param name="softkeyLabel">O valor <see cref="T:System.String" /> a ser usado como um rótulo de tecla.</param>
        <param name="text">O valor <see cref="T:System.String" /> do texto a ser exibido como o link.</param>
        <param name="postUrl">O valor <see cref="T:System.String" /> que contém a página da URL de destino do postback.</param>
        <param name="accessKey">O valor <see cref="T:System.String" /> a ser atribuído ao atributo <see langword="accessKey" /> do link criado.</param>
        <param name="encode">
          <see langword="true" /> para usar <c>&amp;amp;</c> como o separador de parâmetro de URL; <see langword="false" /> para usar <c>&amp;</c>.</param>
        <summary>Renderiza um evento de postback no fluxo de resposta como um hiperlink, incluindo o estado da exibição codificado, um destino de evento e argumento, um parâmetro de página anterior e uma chave de acesso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> método grava um evento de postback como um hiperlink sem script, incluindo possivelmente fragmentada <xref:System.Web.HttpUtility.UrlEncode%2A> estado de exibição, `__EVENTTARGET=target`, `__EVENTARGUMENT=argument`, `__PREVIOUSPAGE=currentFilePath` parâmetros e um `accessKey="accessKey"` atributo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao herdar dos <see cref="T:System.Web.UI.Adapters.PageAdapter" /> classe, você pode substituir o <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> método se um formato diferente é necessário para o hiperlink de evento de postback ou o navegador tem outros requisitos exclusivos. Por exemplo, alguns navegadores exigem ser não vazio se o link é renderizar o texto do hiperlink. Você também pode substituir <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> se recursos limitados impedir incluindo o estado de exibição como um parâmetro de URL. O <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> método base não grava um atributo para <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="TransformText">
      <MemberSignature Language="C#" Value="public virtual string TransformText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TransformText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TransformText (text As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ TransformText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member TransformText : string -&gt; string&#xA;override this.TransformText : string -&gt; string" Usage="pageAdapter.TransformText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Uma <see cref="T:System.String" /> que é o texto a ser transformado.</param>
        <summary>Transforma o texto para o navegador de destino.</summary>
        <returns>Uma <see cref="T:System.String" /> que contém o texto transformado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> método pode ser usado, por exemplo, para transformar os caracteres de tabulação (`\t`) em quebras de linha (`\n`).  
  
 O <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> retorno do método de base `text` inalterado.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando você herda o <see cref="T:System.Web.UI.Adapters.PageAdapter" /> classe, você pode substituir <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> se uma marcação específica tem uma construção de uma forma diferente de HTML padrão. Por exemplo, se um navegador requer um identificador diferente para uma marca que o que seria usado em HTML, <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> método pode ser substituído para localizar essa marca e alterá-lo.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
  </Members>
</Type>