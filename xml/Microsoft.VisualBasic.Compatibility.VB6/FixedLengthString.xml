<Type Name="FixedLengthString" FullName="Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e0966dfa8ea041b22866d1fbc10f8593f66acbc2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FixedLengthString" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi FixedLengthString extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />
  <TypeSignature Language="VB.NET" Value="Public Class FixedLengthString" />
  <TypeSignature Language="C++ CLI" Value="public ref class FixedLengthString" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ac2aa-101">Emulates the behavior of a Visual Basic 6.0 fixed-length string.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac2aa-101">Emulates the behavior of a Visual Basic 6.0 fixed-length string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac2aa-102">No Visual Basic 6.0, um `String` poderiam ser declarados com um comprimento fixo.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-102">In Visual Basic 6.0, a `String` could be declared with a fixed length.</span></span> <span data-ttu-id="ac2aa-103">Em [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], cadeias de caracteres de comprimento fixo não tem suportada e um novo <xref:System.String> é alocada toda vez que o comprimento do <xref:System.String> é alterado.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-103">In [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], fixed-length strings are no longer supported and a new <xref:System.String> is allocated every time the length of the <xref:System.String> is changed.</span></span>  
  
 <span data-ttu-id="ac2aa-104">O `FixedLengthString` classe pode ser usada para emular o comportamento de uma cadeia de caracteres do Visual Basic 6.0, que permite que você declare uma cadeia de caracteres com comprimento fixo.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-104">The `FixedLengthString` class can be used to emulate the behavior of a Visual Basic 6.0 string, which enables you to declare a string with a fixed length.</span></span> <span data-ttu-id="ac2aa-105">Um `FixedLengthString` não pode ser convertido em um <xref:System.String>; você deve referenciar o <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.Value%2A> propriedade ou chamada a <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.ToString%2A> método para converter o tipo.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-105">A `FixedLengthString` cannot be converted to a <xref:System.String>; you must either reference the <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.Value%2A> property or call the <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.ToString%2A> method to convert the type.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
   
  
## Examples  
 <span data-ttu-id="ac2aa-106">O exemplo a seguir demonstra como declarar e usar um `FixedLengthString`.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-106">The following example demonstrates how to declare and use a `FixedLengthString`.</span></span>  
  
```  
Private Sub DemoFixedLengthString()  
    ' Declare a string that has a length of 7 characters and assign the  
    ' initial string. The additional 5 positions will be padded with  
    ' spaces.  
    Dim fixedString As New FixedLengthString(7, "He")  
    ' Display the string in a message box.  
    MsgBox(fixedString.ToString)  
    ' Assign a new value to the string.  
    fixedString.Value = "Hello World"  
    ' Display again. Note that only the first 7 characters are shown.  
    MsgBox(fixedString.ToString)  
End Sub  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac2aa-107">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac2aa-107">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FixedLengthString (int MaxChars);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(int32 MaxChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (MaxChars As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FixedLengthString(int MaxChars);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="MaxChars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="MaxChars">
          <span data-ttu-id="ac2aa-108">An <see langword="Integer" /> that specifies the length of the string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac2aa-108">An <see langword="Integer" /> that specifies the length of the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac2aa-109">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> class, specifying the length.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac2aa-109">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> class, specifying the length.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac2aa-110">No Visual Basic 6.0, você pode especificar o comprimento de uma cadeia de caracteres na sua declaração.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-110">In Visual Basic 6.0, you can specify the length of a string in its declaration.</span></span> <span data-ttu-id="ac2aa-111">Em [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], você não pode declarar uma cadeia de caracteres para ter um comprimento fixo, a menos que você use o <xref:Microsoft.VisualBasic.VBFixedStringAttribute> atributo na declaração.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-111">In [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], you cannot declare a string to have a fixed length unless you use the <xref:Microsoft.VisualBasic.VBFixedStringAttribute> attribute in the declaration.</span></span>  
  
 <span data-ttu-id="ac2aa-112">Use esta classe para declarar uma cadeia de caracteres de comprimento fixo sem usar o atributo.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-112">Use this class to declare a fixed-length string without using the attribute.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
   
  
## Examples  
 <span data-ttu-id="ac2aa-113">O exemplo a seguir demonstra como declarar e usar um <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString>.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-113">The following example demonstrates how to declare and use a <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString>.</span></span>  
  
```  
Private Sub DemoFixedLengthString()  
    ' Declare a string that has a length of 7 characters.   
    Dim fixedString As New FixedLengthString(7)  
    ' Assign a value to the string.  
    fixedString.Value = "Hello World"  
    ' Display the string in a message box.  
    ' Note that only the first 7 characters are shown.  
    MsgBox(fixedString.ToString)  
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FixedLengthString (int MaxChars, string InitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(int32 MaxChars, string InitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (MaxChars As Integer, InitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FixedLengthString(int MaxChars, System::String ^ InitialValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="MaxChars" Type="System.Int32" />
        <Parameter Name="InitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="MaxChars">
          <span data-ttu-id="ac2aa-114">An <see langword="Integer" /> that specifies the length of the string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac2aa-114">An <see langword="Integer" /> that specifies the length of the string.</span>
          </span>
        </param>
        <param name="InitialValue">
          <span data-ttu-id="ac2aa-115">A <see cref="T:System.String" /> that specifies the initial contents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac2aa-115">A <see cref="T:System.String" /> that specifies the initial contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac2aa-116">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> class, specifying the length and the initial value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac2aa-116">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> class, specifying the length and the initial value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac2aa-117">No Visual Basic 6.0, você pode especificar o comprimento de uma cadeia de caracteres na sua declaração.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-117">In Visual Basic 6.0, you can specify the length of a string in its declaration.</span></span> <span data-ttu-id="ac2aa-118">Em [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], você não pode declarar uma cadeia de caracteres para ter um comprimento fixo, a menos que você use o <xref:Microsoft.VisualBasic.VBFixedStringAttribute> atributo na declaração.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-118">In [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], you cannot declare a string to have a fixed length unless you use the <xref:Microsoft.VisualBasic.VBFixedStringAttribute> attribute in the declaration.</span></span>  
  
 <span data-ttu-id="ac2aa-119">Use esta classe para declarar uma cadeia de caracteres de comprimento fixo sem usar o atributo.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-119">Use this class to declare a fixed length string without using the attribute.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
   
  
## Examples  
 <span data-ttu-id="ac2aa-120">O exemplo a seguir demonstra como declarar e usar um <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString>.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-120">The following example demonstrates how to declare and use a <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString>.</span></span>  
  
```  
Private Sub DemoFixedLengthString()  
    ' Declare a string that has a length of 7 characters and assign the  
    ' initial string. The additional 5 positions will be padded with  
    ' spaces.  
    Dim fixedString As New FixedLengthString(7, "He")  
    ' Display the string in a message box.  
    MsgBox(fixedString.ToString)  
    ' Assign a new value to the string.  
    fixedString.Value = "Hello World"  
    ' Display again. Note that only the first 7 characters are shown.  
    MsgBox(fixedString.ToString)  
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="m_nMaxChars">
      <MemberSignature Language="C#" Value="protected int m_nMaxChars;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 m_nMaxChars" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.m_nMaxChars" />
      <MemberSignature Language="VB.NET" Value="Protected m_nMaxChars As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int m_nMaxChars;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac2aa-121">Stores the length of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac2aa-121">Stores the length of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="m_strValue">
      <MemberSignature Language="C#" Value="protected string m_strValue;" />
      <MemberSignature Language="ILAsm" Value=".field family string m_strValue" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.m_strValue" />
      <MemberSignature Language="VB.NET" Value="Protected m_strValue As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ m_strValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac2aa-122">Stores the value of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac2aa-122">Stores the value of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ac2aa-123">Converts a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> to a <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac2aa-123">Converts a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac2aa-124">A <see cref="T:System.String" /> that contains the value of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac2aa-124">A <see cref="T:System.String" /> that contains the value of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac2aa-125">O <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString> classe pode ser usada para emular o comportamento de uma cadeia de caracteres do Visual Basic 6.0, que permite que você declare uma cadeia de caracteres com comprimento fixo.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-125">The <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString> class can be used to emulate the behavior of a Visual Basic 6.0 string, which enables you to declare a string with a fixed length.</span></span> <span data-ttu-id="ac2aa-126">Um <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString> não pode ser convertido em um <xref:System.String>; você deve referenciar o <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.Value%2A> propriedade ou chamada a <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.ToString%2A> método para converter o tipo.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-126">A <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString> cannot be converted to a <xref:System.String>; you must either reference the <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.Value%2A> property or call the <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.ToString%2A> method to convert the type.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
   
  
## Examples  
 <span data-ttu-id="ac2aa-127">O exemplo a seguir demonstra como declarar e usar um <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString>.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-127">The following example demonstrates how to declare and use a <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString>.</span></span>  
  
```  
Private Sub DemoFixedLengthString()  
    ' Declare a string that has a length of 7 characters and assign the  
    ' initial string. The additional 5 positions will be padded with  
    ' spaces.  
    Dim fixedString As New FixedLengthString(7, "He")  
    ' Display the string in a message box.  
    MsgBox(fixedString.ToString)  
    ' Assign a new value to the string.  
    fixedString.Value = "Hello World"  
    ' Display again. Note that only the first 7 characters are shown.  
    MsgBox(fixedString.ToString)  
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac2aa-128">Gets or sets the contents of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac2aa-128">Gets or sets the contents of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ac2aa-129">Um <see cref="T:System.String" /> que contém o valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac2aa-129">A <see cref="T:System.String" /> that contains the value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac2aa-130">O <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString> classe pode ser usada para emular o comportamento de uma cadeia de caracteres do Visual Basic 6.0, que permite que você declare uma cadeia de caracteres com comprimento fixo.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-130">The <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString> class can be used to emulate the behavior of a Visual Basic 6.0 string, which enables you to declare a string with a fixed length.</span></span> <span data-ttu-id="ac2aa-131">Um <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString> não pode ser convertido em um <xref:System.String>; você deve referenciar o <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.Value%2A> propriedade ou chamada a <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.ToString%2A> método para converter o tipo.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-131">A <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString> cannot be converted to a <xref:System.String>; you must either reference the <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.Value%2A> property or call the <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.ToString%2A> method to convert the type.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
   
  
## Examples  
 <span data-ttu-id="ac2aa-132">O exemplo a seguir demonstra como declarar e usar um <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString>.</span><span class="sxs-lookup"><span data-stu-id="ac2aa-132">The following example demonstrates how to declare and use a <xref:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString>.</span></span>  
  
```  
Private Sub DemoFixedLengthString()  
    ' Declare a string that has a length of 7 characters and assign the  
    ' initial string. The additional 5 positions will be padded with  
    ' spaces.  
    Dim fixedString As New FixedLengthString(7, "He")  
    ' Display the string in a message box.  
    MsgBox(fixedString.ToString)  
    ' Assign a new value to the string.  
    fixedString.Value = "Hello World"  
    ' Display again. Note that only the first 7 characters are shown.  
    MsgBox(fixedString.ToString)  
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>