<Type Name="Support" FullName="Microsoft.VisualBasic.Compatibility.VB6.Support">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e52d979fcd3006ad8a52a976efae312be7620ca1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37713308" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Support" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Support extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.Support" />
  <TypeSignature Language="VB.NET" Value="Public Module Support" />
  <TypeSignature Language="C++ CLI" Value="public ref class Support sealed" />
  <TypeSignature Language="F#" Value="type Support = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="002d8-101">Contém várias funções do utilitário para fins de compatibilidade com versões anteriores do Visual Basic 6.0.</span>
      <span class="sxs-lookup">
        <span data-stu-id="002d8-101">Contains various utility functions for backward compatibility with Visual Basic 6.0.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-102">As funções nesta classe são usadas durante a atualização de projetos do Visual Basic 6.0 para Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="002d8-102">The functions in this class are used during the upgrade of Visual Basic 6.0 projects to Visual Basic.</span></span> <span data-ttu-id="002d8-103">Algumas funções substituem funções do Visual Basic 6.0 que não são mais suportadas no Visual Basic; outras pessoas compensam diferenças nos modelos de objeto.</span><span class="sxs-lookup"><span data-stu-id="002d8-103">Some functions replace Visual Basic 6.0 functions that are no longer supported in Visual Basic; others compensate for differences in the object models.</span></span>  
  
 <span data-ttu-id="002d8-104">Para usar funções nessa classe em um projeto do Visual Basic, adicione uma referência para o `Microsoft.VisualBasic.Compatibility.VB6` namespace.</span><span class="sxs-lookup"><span data-stu-id="002d8-104">To use functions in this class in a Visual Basic project, add a reference to the `Microsoft.VisualBasic.Compatibility.VB6` namespace.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyArray">
      <MemberSignature Language="C#" Value="public static Array CopyArray (Array SourceArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Array CopyArray(class System.Array SourceArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyArray (SourceArray As Array) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CopyArray(Array ^ SourceArray);" />
      <MemberSignature Language="F#" Value="static member CopyArray : Array -&gt; Array" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray SourceArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="SourceArray">
          <span data-ttu-id="002d8-105">Um <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-105">A <see cref="T:System.Array" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-106">Duplica a funcionalidade do Visual Basic 6.0 de atribuir um <see langword="Array" /> para um <see langword="Variant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-106">Duplicates Visual Basic 6.0 functionality of assigning an <see langword="Array" /> to a <see langword="Variant" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-107">A matriz a ser copiada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-107">The array to copy.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-108">O Visual Basic 6.0 `Variant` não há suporte para o tipo de dados no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="002d8-108">The Visual Basic 6.0 `Variant` data type is no longer supported in Visual Basic.</span></span> <span data-ttu-id="002d8-109">O `CopyArray` pelas ferramentas de atualização, a função é usada para copiar um `Array` ou para um `Variant` matriz.</span><span class="sxs-lookup"><span data-stu-id="002d8-109">The `CopyArray` function is used by the upgrade tools to copy an `Array` to or from a `Variant` array.</span></span>  
  
 <span data-ttu-id="002d8-110">Para copiar uma matriz no Visual Basic, use o <xref:System.Array.Clone%2A>, <xref:System.Array.Copy%2A> ou <xref:System.Array.CopyTo%2A> métodos do <xref:System.Array> classe.</span><span class="sxs-lookup"><span data-stu-id="002d8-110">To copy an array in Visual Basic, use the <xref:System.Array.Clone%2A>, <xref:System.Array.Copy%2A> or <xref:System.Array.CopyTo%2A> methods of the <xref:System.Array> class.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorToIPicture">
      <MemberSignature Language="C#" Value="public static object CursorToIPicture (System.Windows.Forms.Cursor curs);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CursorToIPicture(class System.Windows.Forms.Cursor curs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)" />
      <MemberSignature Language="VB.NET" Value="Public Function CursorToIPicture (curs As Cursor) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CursorToIPicture(System::Windows::Forms::Cursor ^ curs);" />
      <MemberSignature Language="F#" Value="static member CursorToIPicture : System.Windows.Forms.Cursor -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture curs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curs" Type="System.Windows.Forms.Cursor" />
      </Parameters>
      <Docs>
        <param name="curs">
          <span data-ttu-id="002d8-111">O <see cref="T:System.Windows.Forms.Cursor" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-111">The <see cref="T:System.Windows.Forms.Cursor" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-112">Retorna um objeto <see langword="IPicture" /> OLE que corresponde ao <see cref="T:System.Windows.Forms.Cursor" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-112">Returns an OLE <see langword="IPicture" /> object that corresponds to the specified <see cref="T:System.Windows.Forms.Cursor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-113">Um <see cref="T:System.Object" /> que representa o objeto <see langword="IPicture" /> OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-113">An <see cref="T:System.Object" /> that represents the OLE <see langword="IPicture" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-114">No Visual Basic 6.0, o `MouseIcon` propriedade de um formulário ou controle pode ser usada para carregar um personalizado `MousePointer` (cursor).</span><span class="sxs-lookup"><span data-stu-id="002d8-114">In Visual Basic 6.0, the `MouseIcon` property of a form or control could be used to load a custom `MousePointer` (cursor).</span></span> <span data-ttu-id="002d8-115">Em alguns casos, a imagem para o `MouseIcon` foi armazenada como uma `stdOle.IPicture`; essa função é usada pela ferramenta de atualização para converter um <xref:System.Windows.Forms.Cursor> para um `stdOle.IPicture`.</span><span class="sxs-lookup"><span data-stu-id="002d8-115">In some cases, the image for the `MouseIcon` was stored as a `stdOle.IPicture`; this function is used by the upgrade tool to convert a <xref:System.Windows.Forms.Cursor> to a `stdOle.IPicture`.</span></span>  
  
 <span data-ttu-id="002d8-116">Para converter um <xref:System.Windows.Forms.Cursor> no Visual Basic, use o <xref:System.Windows.Forms.AxHost.GetIPictureFromCursor%2A> método o <xref:System.Windows.Forms.AxHost> classe.</span><span class="sxs-lookup"><span data-stu-id="002d8-116">To convert a <xref:System.Windows.Forms.Cursor> in Visual Basic, use the <xref:System.Windows.Forms.AxHost.GetIPictureFromCursor%2A> method of the <xref:System.Windows.Forms.AxHost> class.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Eqv">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="002d8-117">Executa uma equivalência lógica em duas expressões.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-117">Performs a logical equivalence on two expressions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static bool Eqv (bool a, bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool Eqv(bool a, bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Boolean, b As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Eqv(bool a, bool b);" />
      <MemberSignature Language="F#" Value="static member Eqv : bool * bool -&gt; bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean" />
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="002d8-118">Um <see cref="T:System.Boolean" /> para comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-118">A <see cref="T:System.Boolean" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="002d8-119">Um <see cref="T:System.Boolean" /> para comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-119">A <see cref="T:System.Boolean" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-120">Executa uma equivalência lógica em duas expressões <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-120">Performs a logical equivalence on two <see cref="T:System.Boolean" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-121">
            <see langword="true" /> se as duas expressões forem iguais, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-121">
              <see langword="true" /> if the two expressions are equal; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-122">Se qualquer expressão for `Null`, também, o resultado é `Null`.</span><span class="sxs-lookup"><span data-stu-id="002d8-122">If either expression is `Null`, result is also `Null`.</span></span> <span data-ttu-id="002d8-123">Quando nenhuma expressão for `Null`, resultado é determinado de acordo com a tabela a seguir:</span><span class="sxs-lookup"><span data-stu-id="002d8-123">When neither expression is `Null`, result is determined according to the following table:</span></span>  
  
|<span data-ttu-id="002d8-124">Se a expression1 for</span><span class="sxs-lookup"><span data-stu-id="002d8-124">If expression1 is</span></span>|<span data-ttu-id="002d8-125">E expression2 for</span><span class="sxs-lookup"><span data-stu-id="002d8-125">And expression2 is</span></span>|<span data-ttu-id="002d8-126">O resultado é</span><span class="sxs-lookup"><span data-stu-id="002d8-126">The result is</span></span>|  
|-----------------------|------------------------|-------------------|  
|`true`|`true`|`true`|  
|`true`|`false`|`false`|  
|`false`|`true`|`false`|  
|`false`|`false`|`true`|  
  
 <span data-ttu-id="002d8-127">No Visual Basic, o `Eqv` operador não é mais uma parte da linguagem Visual Basic; use o operador de comparação de igualdade (=) no lugar de `Eqv` para avaliações lógicas.</span><span class="sxs-lookup"><span data-stu-id="002d8-127">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; use the equals (=) comparison operator in place of `Eqv` for logical evaluations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static byte Eqv (byte a, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static unsigned int8 Eqv(unsigned int8 a, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Byte, b As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Eqv(System::Byte a, System::Byte b);" />
      <MemberSignature Language="F#" Value="static member Eqv : byte * byte -&gt; byte" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="002d8-128">Um <see cref="T:System.Byte" /> para comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-128">A <see cref="T:System.Byte" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="002d8-129">Um <see cref="T:System.Byte" /> para comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-129">A <see cref="T:System.Byte" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-130">Executa uma equivalência lógica em duas expressões <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-130">Performs a logical equivalence on two <see cref="T:System.Byte" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-131">Um <see cref="T:System.Byte" /> que contém o resultado da comparação bit a bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-131">A <see cref="T:System.Byte" /> that contains the result of the bitwise comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-132">O `Eqv` operador executa uma comparação bit a bit dos bits posicionados de forma idêntica em duas expressões numéricas e define o bit de acordo com a tabela a seguir correspondente:</span><span class="sxs-lookup"><span data-stu-id="002d8-132">The `Eqv` operator performs a bitwise comparison of identically positioned bits in two numeric expressions and sets the corresponding bit according to the following table:</span></span>  
  
|<span data-ttu-id="002d8-133">Se o bit na expression1 for</span><span class="sxs-lookup"><span data-stu-id="002d8-133">If bit in expression1 is</span></span>|<span data-ttu-id="002d8-134">E o bit na expression2 for</span><span class="sxs-lookup"><span data-stu-id="002d8-134">And bit in expression2 is</span></span>|<span data-ttu-id="002d8-135">O resultado é</span><span class="sxs-lookup"><span data-stu-id="002d8-135">The result is</span></span>|  
|------------------------------|-------------------------------|-------------------|  
|<span data-ttu-id="002d8-136">0</span><span class="sxs-lookup"><span data-stu-id="002d8-136">0</span></span>|<span data-ttu-id="002d8-137">0</span><span class="sxs-lookup"><span data-stu-id="002d8-137">0</span></span>|<span data-ttu-id="002d8-138">1</span><span class="sxs-lookup"><span data-stu-id="002d8-138">1</span></span>|  
|<span data-ttu-id="002d8-139">0</span><span class="sxs-lookup"><span data-stu-id="002d8-139">0</span></span>|<span data-ttu-id="002d8-140">1</span><span class="sxs-lookup"><span data-stu-id="002d8-140">1</span></span>|<span data-ttu-id="002d8-141">0</span><span class="sxs-lookup"><span data-stu-id="002d8-141">0</span></span>|  
|<span data-ttu-id="002d8-142">1</span><span class="sxs-lookup"><span data-stu-id="002d8-142">1</span></span>|<span data-ttu-id="002d8-143">0</span><span class="sxs-lookup"><span data-stu-id="002d8-143">0</span></span>|<span data-ttu-id="002d8-144">0</span><span class="sxs-lookup"><span data-stu-id="002d8-144">0</span></span>|  
|<span data-ttu-id="002d8-145">1</span><span class="sxs-lookup"><span data-stu-id="002d8-145">1</span></span>|<span data-ttu-id="002d8-146">1</span><span class="sxs-lookup"><span data-stu-id="002d8-146">1</span></span>|<span data-ttu-id="002d8-147">1</span><span class="sxs-lookup"><span data-stu-id="002d8-147">1</span></span>|  
  
 <span data-ttu-id="002d8-148">No Visual Basic, o `Eqv` operador não é mais uma parte da linguagem Visual Basic; para o uso de bit a bit de avaliações de `Not` e `XOr` operadores.</span><span class="sxs-lookup"><span data-stu-id="002d8-148">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static short Eqv (short a, short b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Eqv(int16 a, int16 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Short, b As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Eqv(short a, short b);" />
      <MemberSignature Language="F#" Value="static member Eqv : int16 * int16 -&gt; int16" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16" />
        <Parameter Name="b" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="002d8-149">Um <see cref="T:System.Int16" /> para comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-149">A <see cref="T:System.Int16" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="002d8-150">Um <see cref="T:System.Int16" /> para comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-150">A <see cref="T:System.Int16" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-151">Executa uma equivalência lógica em duas expressões <see cref="T:System.Int16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-151">Performs a logical equivalence on two <see cref="T:System.Int16" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-152">Um <see cref="T:System.Int16" /> que contém o resultado da comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-152">A <see cref="T:System.Int16" /> that contains the result of the comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-153">No Visual Basic, o `Eqv` operador não é mais uma parte da linguagem Visual Basic; para o uso de bit a bit de avaliações de `Not` e `XOr` operadores.</span><span class="sxs-lookup"><span data-stu-id="002d8-153">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static int Eqv (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Eqv(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Integer, b As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Eqv(int a, int b);" />
      <MemberSignature Language="F#" Value="static member Eqv : int * int -&gt; int" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="002d8-154">Um <see cref="T:System.Int32" /> para comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-154">A <see cref="T:System.Int32" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="002d8-155">Um <see cref="T:System.Int32" /> para comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-155">A <see cref="T:System.Int32" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-156">Executa uma equivalência lógica em duas expressões <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-156">Performs a logical equivalence on two <see cref="T:System.Int32" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-157">Um <see cref="T:System.Int32" /> que contém o resultado da comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-157">A <see cref="T:System.Int32" /> that contains the result of the comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-158">No Visual Basic, o `Eqv` operador não é mais uma parte da linguagem Visual Basic; para o uso de bit a bit de avaliações de `Not` e `XOr` operadores.</span><span class="sxs-lookup"><span data-stu-id="002d8-158">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static long Eqv (long a, long b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Eqv(int64 a, int64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Long, b As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Eqv(long a, long b);" />
      <MemberSignature Language="F#" Value="static member Eqv : int64 * int64 -&gt; int64" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="002d8-159">Um <see cref="T:System.Int64" /> para comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-159">A <see cref="T:System.Int64" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="002d8-160">Um <see cref="T:System.Int64" /> para comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-160">A <see cref="T:System.Int64" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-161">Executa uma equivalência lógica em duas expressões <see cref="T:System.Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-161">Performs a logical equivalence on two <see cref="T:System.Int64" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-162">Um <see cref="T:System.Int64" /> que contém o resultado da comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-162">A <see cref="T:System.Int64" /> that contains the result of the comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-163">No Visual Basic, o `Eqv` operador não é mais uma parte da linguagem Visual Basic; para o uso de bit a bit de avaliações de `Not` e `XOr` operadores.</span><span class="sxs-lookup"><span data-stu-id="002d8-163">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static object Eqv (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Eqv(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Object, b As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eqv(System::Object ^ a, System::Object ^ b);" />
      <MemberSignature Language="F#" Value="static member Eqv : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="002d8-164">Um <see cref="T:System.Object" /> para comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-164">A <see cref="T:System.Object" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="002d8-165">Um <see cref="T:System.Object" /> para comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-165">A <see cref="T:System.Object" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-166">Executa uma equivalência lógica em duas expressões <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-166">Performs a logical equivalence on two <see cref="T:System.Object" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-167">Um <see cref="T:System.Object" /> que contém o resultado da comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-167">A <see cref="T:System.Object" /> that contains the result of the comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-168">No Visual Basic, o `Eqv` operador não é mais uma parte da linguagem Visual Basic; para o uso de bit a bit de avaliações de `Not` e `XOr` operadores.</span><span class="sxs-lookup"><span data-stu-id="002d8-168">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeBold">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeBold (System.Drawing.Font CurrentFont, bool Bold);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeBold(class System.Drawing.Font CurrentFont, bool Bold) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeBold (CurrentFont As Font, Bold As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeBold(System::Drawing::Font ^ CurrentFont, bool Bold);" />
      <MemberSignature Language="F#" Value="static member FontChangeBold : System.Drawing.Font * bool -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold (CurrentFont, Bold)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Bold" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="002d8-169">Um <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-169">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Bold">
          <span data-ttu-id="002d8-170">
            <see langword="true" /> para definir o bit de estilo <see cref="F:System.Drawing.FontStyle.Bold" />, caso contrário <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-170">
              <see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Bold" /> style bit; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-171">Altera o bit de estilo <see cref="F:System.Drawing.FontStyle.Bold" /> de uma fonte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-171">Changes the <see cref="F:System.Drawing.FontStyle.Bold" /> style bit for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-172">Um <see cref="T:System.Drawing.Font" /> com o novo estilo aplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-172">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-173">No Visual Basic 6.0, os estilos de fonte foram aplicados, definindo propriedades; no Visual Basic fonte estilos são aplicados usando um <xref:System.Drawing.FontStyle> enumeração.</span><span class="sxs-lookup"><span data-stu-id="002d8-173">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="002d8-174">Esta função é usada pelas ferramentas de atualização para converter as propriedades do Visual Basic 6.0 nas novas enumerações.</span><span class="sxs-lookup"><span data-stu-id="002d8-174">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeGdiCharSet">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeGdiCharSet (System.Drawing.Font CurrentFont, byte GdiCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeGdiCharSet(class System.Drawing.Font CurrentFont, unsigned int8 GdiCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeGdiCharSet (CurrentFont As Font, GdiCharSet As Byte) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeGdiCharSet(System::Drawing::Font ^ CurrentFont, System::Byte GdiCharSet);" />
      <MemberSignature Language="F#" Value="static member FontChangeGdiCharSet : System.Drawing.Font * byte -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet (CurrentFont, GdiCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="GdiCharSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="002d8-175">Um <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-175">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="GdiCharSet">
          <span data-ttu-id="002d8-176">Um valor de byte que especifica o conjunto de caracteres GDI a ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-176">A byte value that specifies the GDI character set to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-177">Retorna uma fonte para um conjunto de caracteres GDI especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-177">Returns a font for a specified GDI character set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-178">Um <see cref="T:System.Drawing.Font" /> para o conjunto de caracteres GDI especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-178">A <see cref="T:System.Drawing.Font" /> for the specified GDI character set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-179">No Visual Basic 6.0, o `stdFont` objeto tinha um `CharSet` conjunto para uma fonte de caracteres de propriedade que especificou a GDI.</span><span class="sxs-lookup"><span data-stu-id="002d8-179">In Visual Basic 6.0, the `stdFont` object had a `CharSet` property that specified the GDI character set for a font.</span></span> <span data-ttu-id="002d8-180">No Visual Basic, o conjunto de caracteres é especificado como um recurso opcional de um <xref:System.Drawing.Font> construtor.</span><span class="sxs-lookup"><span data-stu-id="002d8-180">In Visual Basic, the character set is specified as an optional of a <xref:System.Drawing.Font> constructor.</span></span> <span data-ttu-id="002d8-181">Essa função é usada pelas ferramentas de atualização para converter um `stdFont` para um <xref:System.Drawing.Font>.</span><span class="sxs-lookup"><span data-stu-id="002d8-181">This function is used by the upgrade tools to convert a `stdFont` to a <xref:System.Drawing.Font>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Font.GdiCharSet" />
      </Docs>
    </Member>
    <Member MemberName="FontChangeItalic">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeItalic (System.Drawing.Font CurrentFont, bool Italic);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeItalic(class System.Drawing.Font CurrentFont, bool Italic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeItalic (CurrentFont As Font, Italic As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeItalic(System::Drawing::Font ^ CurrentFont, bool Italic);" />
      <MemberSignature Language="F#" Value="static member FontChangeItalic : System.Drawing.Font * bool -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic (CurrentFont, Italic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Italic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="002d8-182">Um <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-182">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Italic">
          <span data-ttu-id="002d8-183">
            <see langword="true" /> para definir o bit de estilo <see cref="F:System.Drawing.FontStyle.Italic" />, caso contrário <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-183">
              <see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Italic" /> style bit; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-184">Altera o bit de estilo <see cref="F:System.Drawing.FontStyle.Italic" /> de uma fonte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-184">Changes the <see cref="F:System.Drawing.FontStyle.Italic" /> style bit for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-185">Um <see cref="T:System.Drawing.Font" /> com o novo estilo aplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-185">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-186">No Visual Basic 6.0, os estilos de fonte foram aplicados, definindo propriedades; no Visual Basic fonte estilos são aplicados usando um <xref:System.Drawing.FontStyle> enumeração.</span><span class="sxs-lookup"><span data-stu-id="002d8-186">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="002d8-187">Esta função é usada pelas ferramentas de atualização para converter as propriedades do Visual Basic 6.0 nas novas enumerações.</span><span class="sxs-lookup"><span data-stu-id="002d8-187">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeName">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeName (System.Drawing.Font CurrentFont, string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeName(class System.Drawing.Font CurrentFont, string Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeName (CurrentFont As Font, Name As String) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeName(System::Drawing::Font ^ CurrentFont, System::String ^ Name);" />
      <MemberSignature Language="F#" Value="static member FontChangeName : System.Drawing.Font * string -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName (CurrentFont, Name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="002d8-188">Um <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-188">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="002d8-189">Um <see langword="String" /> que representa a propriedade <see langword="Font" /> do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-189">A <see langword="String" /> that represents the Visual Basic 6.0 <see langword="Font" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-190">Retorna um novo <see cref="T:System.Drawing.Font" /> para um determinado <see langword="Font" /> do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-190">Returns a new <see cref="T:System.Drawing.Font" /> for a given Visual Basic 6.0 <see langword="Font" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-191">Um <see cref="T:System.Drawing.Font" /> que corresponde ao <see langword="Font" /> do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-191">A <see cref="T:System.Drawing.Font" /> that matches the Visual Basic 6.0 <see langword="Font" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-192">No Visual Basic 6.0, o nome de uma fonte foi especificado o `Font` propriedade; no Visual Basic, <xref:System.Drawing.Font.Name%2A> é uma propriedade do <xref:System.Drawing.Font> objeto.</span><span class="sxs-lookup"><span data-stu-id="002d8-192">In Visual Basic 6.0, the name of a font was specified by the `Font` property; in Visual Basic, <xref:System.Drawing.Font.Name%2A> is a property of the <xref:System.Drawing.Font> object.</span></span> <span data-ttu-id="002d8-193">Essa função é usada pelas ferramentas de atualização para converter um Visual Basic 6.0 `Font` para um <xref:System.Drawing.Font>.</span><span class="sxs-lookup"><span data-stu-id="002d8-193">This function is used by the upgrade tools to convert a Visual Basic 6.0 `Font` to a <xref:System.Drawing.Font>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeSize (System.Drawing.Font CurrentFont, float Size);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeSize(class System.Drawing.Font CurrentFont, float32 Size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeSize (CurrentFont As Font, Size As Single) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeSize(System::Drawing::Font ^ CurrentFont, float Size);" />
      <MemberSignature Language="F#" Value="static member FontChangeSize : System.Drawing.Font * single -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize (CurrentFont, Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Size" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="002d8-194">Um <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-194">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Size">
          <span data-ttu-id="002d8-195">Um <see langword="Single" /> que representa a propriedade <see langword="FontSize" /> do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-195">A <see langword="Single" /> that represents the Visual Basic 6.0 <see langword="FontSize" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-196">Altera a propriedade <see cref="P:System.Drawing.Font.Size" /> de uma fonte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-196">Changes the <see cref="P:System.Drawing.Font.Size" /> property for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-197">Um <see cref="T:System.Drawing.Font" /> que corresponde ao <see langword="FontSize" /> do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-197">A <see cref="T:System.Drawing.Font" /> that matches the Visual Basic 6.0 <see langword="FontSize" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-198">No Visual Basic 6.0, o tamanho de uma fonte foi especificado o `FontSize` propriedade; no Visual Basic, <xref:System.Drawing.Font.Size%2A> é uma propriedade do <xref:System.Drawing.Font> objeto.</span><span class="sxs-lookup"><span data-stu-id="002d8-198">In Visual Basic 6.0, the size of a font was specified by the `FontSize` property; in Visual Basic, <xref:System.Drawing.Font.Size%2A> is a property of the <xref:System.Drawing.Font> object.</span></span> <span data-ttu-id="002d8-199">Essa função é usada pelas ferramentas de atualização para converter um Visual Basic 6.0 `Font` para um <xref:System.Drawing.Font>.</span><span class="sxs-lookup"><span data-stu-id="002d8-199">This function is used by the upgrade tools to convert a Visual Basic 6.0 `Font` to a <xref:System.Drawing.Font>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeStrikeout">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeStrikeout (System.Drawing.Font CurrentFont, bool Strikeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeStrikeout(class System.Drawing.Font CurrentFont, bool Strikeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeStrikeout (CurrentFont As Font, Strikeout As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeStrikeout(System::Drawing::Font ^ CurrentFont, bool Strikeout);" />
      <MemberSignature Language="F#" Value="static member FontChangeStrikeout : System.Drawing.Font * bool -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout (CurrentFont, Strikeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Strikeout" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="002d8-200">Um <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-200">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Strikeout">
          <span data-ttu-id="002d8-201">
            <see langword="true" /> para definir o bit de estilo <see cref="F:System.Drawing.FontStyle.Strikeout" />, caso contrário <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-201">
              <see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Strikeout" /> style bit; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-202">Altera o bit de estilo <see cref="F:System.Drawing.FontStyle.Strikeout" /> de uma fonte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-202">Changes the <see cref="F:System.Drawing.FontStyle.Strikeout" /> style bit for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-203">Um <see cref="T:System.Drawing.Font" /> com o novo estilo aplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-203">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-204">No Visual Basic 6.0, os estilos de fonte foram aplicados, definindo propriedades; no Visual Basic fonte estilos são aplicados usando um <xref:System.Drawing.FontStyle> enumeração.</span><span class="sxs-lookup"><span data-stu-id="002d8-204">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="002d8-205">Esta função é usada pelas ferramentas de atualização para converter as propriedades do Visual Basic 6.0 nas novas enumerações.</span><span class="sxs-lookup"><span data-stu-id="002d8-205">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeUnderline">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeUnderline (System.Drawing.Font CurrentFont, bool Underline);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeUnderline(class System.Drawing.Font CurrentFont, bool Underline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeUnderline (CurrentFont As Font, Underline As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeUnderline(System::Drawing::Font ^ CurrentFont, bool Underline);" />
      <MemberSignature Language="F#" Value="static member FontChangeUnderline : System.Drawing.Font * bool -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline (CurrentFont, Underline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Underline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="002d8-206">Um <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-206">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Underline">
          <span data-ttu-id="002d8-207">
            <see langword="true" /> para definir o bit de estilo <see cref="F:System.Drawing.FontStyle.Underline" />, caso contrário <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-207">
              <see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Underline" /> style bit; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-208">Altera o bit de estilo <see cref="F:System.Drawing.FontStyle.Underline" /> de uma fonte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-208">Changes the <see cref="F:System.Drawing.FontStyle.Underline" /> style bit for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-209">Um <see cref="T:System.Drawing.Font" /> com o novo estilo aplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-209">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-210">No Visual Basic 6.0, os estilos de fonte foram aplicados, definindo propriedades; no Visual Basic fonte estilos são aplicados usando um <xref:System.Drawing.FontStyle> enumeração.</span><span class="sxs-lookup"><span data-stu-id="002d8-210">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="002d8-211">Esta função é usada pelas ferramentas de atualização para converter as propriedades do Visual Basic 6.0 nas novas enumerações.</span><span class="sxs-lookup"><span data-stu-id="002d8-211">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontToIFont">
      <MemberSignature Language="C#" Value="public static object FontToIFont (System.Drawing.Font fnt);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FontToIFont(class System.Drawing.Font fnt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontToIFont (fnt As Font) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FontToIFont(System::Drawing::Font ^ fnt);" />
      <MemberSignature Language="F#" Value="static member FontToIFont : System.Drawing.Font -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont fnt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fnt" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="fnt">
          <span data-ttu-id="002d8-212">O <see cref="T:System.Drawing.Font" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-212">The <see cref="T:System.Drawing.Font" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-213">Converte um <see cref="T:System.Drawing.Font" /> em um objeto <see langword="stdFont" /> do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-213">Converts a <see cref="T:System.Drawing.Font" /> to a Visual Basic 6.0 <see langword="stdFont" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-214">Um objeto <see langword="stdFont" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-214">A <see langword="stdFont" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-215">O Visual Basic 6.0 `stdFont` objeto foi baseado em COM e não tem nenhum equivalente no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="002d8-215">The Visual Basic 6.0 `stdFont` object was COM-based and has no equivalent in Visual Basic.</span></span> <span data-ttu-id="002d8-216">Essa função é usada pelas ferramentas de atualização para converter entre um <xref:System.Drawing.Font> e um `stdFont` durante a atualização do projeto.</span><span class="sxs-lookup"><span data-stu-id="002d8-216">This function is used by the upgrade tools to convert between a <xref:System.Drawing.Font> and a `stdFont` during project upgrade.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (object Expression, string Style = &quot;&quot;, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = 1, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Format(object Expression, string Style, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (Expression As Object, Optional Style As String = &quot;&quot;, Optional DayOfWeek As FirstDayOfWeek = 1, Optional WeekOfYear As FirstWeekOfYear = 1) As String" />
      <MemberSignature Language="F#" Value="static member Format : obj * string * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Format (Expression, Style, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="Style" Type="System.String" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="002d8-217">A expressão <see cref="T:System.Object" /> a ser convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-217">The <see cref="T:System.Object" /> expression to convert.</span>
          </span>
        </param>
        <param name="Style">
          <span data-ttu-id="002d8-218">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-218">Optional.</span>
          </span>
          <span data-ttu-id="002d8-219">Um <see cref="T:System.String" /> que representa um formato de data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-219">A <see cref="T:System.String" /> that represents a date format.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="002d8-220">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-220">Optional.</span>
          </span>
          <span data-ttu-id="002d8-221">Uma enumeração <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-221">A <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration.</span>
          </span>
        </param>
        <param name="WeekOfYear">
          <span data-ttu-id="002d8-222">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-222">Optional.</span>
          </span>
          <span data-ttu-id="002d8-223">Uma enumeração <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-223">A <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-224">Converte a função <see langword="Format" /> do Visual Basic 6.0 para ser compatível com o Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-224">Converts the Visual Basic 6.0 <see langword="Format" /> function to be compatible with Visual Basic.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-225">Um <see cref="T:System.String" /> que contém os dados formatados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-225">A <see cref="T:System.String" /> that contains the formatted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-226">O Visual Basic 6.0 `Format` função pode operar em um `Variant` tipo de dados; no Visual Basic a `Variant` tipo de dados não existe mais.</span><span class="sxs-lookup"><span data-stu-id="002d8-226">The Visual Basic 6.0 `Format` function could operate on a `Variant` data type; in Visual Basic the `Variant` data type no longer exists.</span></span> <span data-ttu-id="002d8-227">Essa função é usada pelas ferramentas de atualização para converter um `Variant` formatados usando o `Format` função em um tipo em conformidade com o tempo de execução de linguagem comum.</span><span class="sxs-lookup"><span data-stu-id="002d8-227">This function is used by the upgrade tools to convert a `Variant` formatted by using the `Format` function to a common language runtime-compliant type.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserHeight">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserHeight (double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserHeight(float64 Height, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserHeight (Height As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserHeight(double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="F#" Value="static member FromPixelsUserHeight : double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight (Height, ScaleHeight, OriginalHeightInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Height" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Height">
          <span data-ttu-id="002d8-228">Um <see cref="T:System.Double" /> que representa a altura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-228">A <see cref="T:System.Double" /> that represents the height.</span>
          </span>
        </param>
        <param name="ScaleHeight">
          <span data-ttu-id="002d8-229">Um <see cref="T:System.Double" /> que representa o Visual Basic 6.0 <see langword="ScaleHeight" /> para o <see langword="ScaleMode" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-229">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalHeightInPixels">
          <span data-ttu-id="002d8-230">Um <see langword="Integer" /> que representa a altura em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-230">An <see langword="Integer" /> that represents the height in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-231">Converte uma medida em pixels em uma medida <see langword="ScaleHeight" /> do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-231">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleHeight" /> measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-232">Um <see cref="T:System.Double" /> que contém o <see langword="ScaleHeight" /> do Visual Basic 6.0 convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-232">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleHeight" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-233">O Visual Basic 6.0 dava suporte a vários sistemas de coordenadas definidos por uma propriedade `ScaleMode`.</span><span class="sxs-lookup"><span data-stu-id="002d8-233">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="002d8-234">Isso incluía um valor definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-234">This included a user-defined value.</span></span> <span data-ttu-id="002d8-235">Visual Basic somente oferece suporte a um sistema de coordenadas que se baseia em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-235">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="002d8-236">Esta função é usada pelas ferramentas de atualização para converter entre pixels e um valor de escala definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-236">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserWidth">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserWidth (double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserWidth(float64 Width, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserWidth (Width As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserWidth(double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="F#" Value="static member FromPixelsUserWidth : double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth (Width, ScaleWidth, OriginalWidthInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Width" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Width">
          <span data-ttu-id="002d8-237">Um <see cref="T:System.Double" /> que representa a largura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-237">A <see cref="T:System.Double" /> that represents the width.</span>
          </span>
        </param>
        <param name="ScaleWidth">
          <span data-ttu-id="002d8-238">Um <see cref="T:System.Double" /> que representa o Visual Basic 6.0 <see langword="ScaleWidth" /> para o <see langword="ScaleMode" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-238">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalWidthInPixels">
          <span data-ttu-id="002d8-239">Um <see langword="Integer" /> que representa a largura em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-239">An <see langword="Integer" /> that represents the width in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-240">Converte uma medida em pixels em uma medida <see langword="ScaleWidth" /> do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-240">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleWidth" /> measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-241">Um <see cref="T:System.Double" /> que contém o <see langword="ScaleWidth" /> do Visual Basic 6.0 convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-241">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleWidth" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-242">O Visual Basic 6.0 dava suporte a vários sistemas de coordenadas definidos por uma propriedade `ScaleMode`.</span><span class="sxs-lookup"><span data-stu-id="002d8-242">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="002d8-243">Isso incluía um valor definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-243">This included a user-defined value.</span></span> <span data-ttu-id="002d8-244">Visual Basic somente oferece suporte a um sistema de coordenadas que se baseia em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-244">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="002d8-245">Esta função é usada pelas ferramentas de atualização para converter entre pixels e um valor de escala definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-245">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserX">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserX (double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserX(float64 X, float64 ScaleLeft, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserX (X As Double, ScaleLeft As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserX(double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="F#" Value="static member FromPixelsUserX : double * double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX (X, ScaleLeft, ScaleWidth, OriginalWidthInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ScaleLeft" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="002d8-246">Um <see cref="T:System.Double" /> que representa a coordenada X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-246">A <see cref="T:System.Double" /> that represents the X coordinate.</span>
          </span>
        </param>
        <param name="ScaleLeft">
          <span data-ttu-id="002d8-247">Um <see cref="T:System.Double" /> que representa o Visual Basic 6.0 <see langword="ScaleLeft" /> para o <see langword="ScaleMode" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-247">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleLeft" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="ScaleWidth">
          <span data-ttu-id="002d8-248">Um <see cref="T:System.Double" /> que representa o Visual Basic 6.0 <see langword="ScaleWidth" /> para o <see langword="ScaleMode" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-248">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalWidthInPixels">
          <span data-ttu-id="002d8-249">Um <see langword="Integer" /> que representa a largura em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-249">An <see langword="Integer" /> that represents the width in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-250">Converte uma medida em pixels em uma medida <see langword="ScaleLeft" /> do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-250">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleLeft" /> measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-251">Um <see cref="T:System.Double" /> que contém o <see langword="ScaleLeft" /> do Visual Basic 6.0 convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-251">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleLeft" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-252">O Visual Basic 6.0 dava suporte a vários sistemas de coordenadas definidos por uma propriedade `ScaleMode`.</span><span class="sxs-lookup"><span data-stu-id="002d8-252">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="002d8-253">Isso incluía um valor definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-253">This included a user-defined value.</span></span> <span data-ttu-id="002d8-254">Visual Basic somente oferece suporte a um sistema de coordenadas que se baseia em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-254">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="002d8-255">Esta função é usada pelas ferramentas de atualização para converter entre pixels e um valor de escala definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-255">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserY">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserY (double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserY(float64 Y, float64 ScaleTop, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserY (Y As Double, ScaleTop As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserY(double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="F#" Value="static member FromPixelsUserY : double * double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY (Y, ScaleTop, ScaleHeight, OriginalHeightInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ScaleTop" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="002d8-256">Um <see cref="T:System.Double" /> que representa a coordenada X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-256">A <see cref="T:System.Double" /> that represents the X coordinate.</span>
          </span>
        </param>
        <param name="ScaleTop">
          <span data-ttu-id="002d8-257">Um <see cref="T:System.Double" /> que representa o Visual Basic 6.0 <see langword="ScaleTop" /> para o <see langword="ScaleMode" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-257">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleTop" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="ScaleHeight">
          <span data-ttu-id="002d8-258">Um <see cref="T:System.Double" /> que representa o Visual Basic 6.0 <see langword="ScaleHeight" /> para o <see langword="ScaleMode" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-258">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalHeightInPixels">
          <span data-ttu-id="002d8-259">Um <see langword="Integer" /> que representa a altura em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-259">An <see langword="Integer" /> that represents the height in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-260">Converte uma medida em pixels em uma medida <see langword="ScaleTop" /> do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-260">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleTop" /> measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-261">Um <see cref="T:System.Double" /> que contém o <see langword="ScaleTop" /> do Visual Basic 6.0 convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-261">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleTop" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-262">O Visual Basic 6.0 dava suporte a vários sistemas de coordenadas definidos por uma propriedade `ScaleMode`.</span><span class="sxs-lookup"><span data-stu-id="002d8-262">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="002d8-263">Isso incluía um valor definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-263">This included a user-defined value.</span></span> <span data-ttu-id="002d8-264">Visual Basic somente oferece suporte a um sistema de coordenadas que se baseia em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-264">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="002d8-265">Esta função é usada pelas ferramentas de atualização para converter entre pixels e um valor de escala definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-265">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsX">
      <MemberSignature Language="C#" Value="public static double FromPixelsX (double X, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsX(float64 X, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsX (X As Double, ToScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsX(double X, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode ToScale);" />
      <MemberSignature Language="F#" Value="static member FromPixelsX : double * Microsoft.VisualBasic.Compatibility.VB6.ScaleMode -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX (X, ToScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ToScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="002d8-266">Um <see cref="T:System.Double" /> que representa a coordenada X em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-266">A <see cref="T:System.Double" /> that represents the X coordinate in pixels.</span>
          </span>
        </param>
        <param name="ToScale">
          <span data-ttu-id="002d8-267">Uma enumeração <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> que representa o <see langword="ScaleMode" /> do Visual Basic 6.0 para o qual converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-267">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-268">Converte uma medida em pixels em uma medida do Visual Basic 6.0 para um determinado <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-268">Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-269">Um <see cref="T:System.Double" /> que contém o valor do Visual Basic 6.0 para o <see langword="ScaleMode" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-269">A <see cref="T:System.Double" /> that contains the Visual Basic 6.0 value for the specified <see langword="ScaleMode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-270">O Visual Basic 6.0 dava suporte a vários sistemas de coordenadas definidos por uma propriedade `ScaleMode`.</span><span class="sxs-lookup"><span data-stu-id="002d8-270">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="002d8-271">Isso incluía um valor definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-271">This included a user-defined value.</span></span> <span data-ttu-id="002d8-272">Visual Basic somente oferece suporte a um sistema de coordenadas que se baseia em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-272">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="002d8-273">Esta função é usada pelas ferramentas de atualização para converter entre pixels e um valor de escala definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-273">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsY">
      <MemberSignature Language="C#" Value="public static double FromPixelsY (double Y, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsY(float64 Y, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsY (Y As Double, ToScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsY(double Y, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode ToScale);" />
      <MemberSignature Language="F#" Value="static member FromPixelsY : double * Microsoft.VisualBasic.Compatibility.VB6.ScaleMode -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY (Y, ToScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ToScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="002d8-274">Um <see cref="T:System.Double" /> que representa a coordenada Y em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-274">A <see cref="T:System.Double" /> that represents the Y coordinate in pixels.</span>
          </span>
        </param>
        <param name="ToScale">
          <span data-ttu-id="002d8-275">Uma enumeração <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> que representa o <see langword="ScaleMode" /> do Visual Basic 6.0 para o qual converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-275">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-276">Converte uma medida em pixels em uma medida do Visual Basic 6.0 para um determinado <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-276">Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-277">Um <see cref="T:System.Double" /> que contém o valor do Visual Basic 6.0 para o <see langword="ScaleMode" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-277">A <see cref="T:System.Double" /> that contains the Visual Basic 6.0 value for the specified <see langword="ScaleMode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-278">O Visual Basic 6.0 dava suporte a vários sistemas de coordenadas definidos por uma propriedade `ScaleMode`.</span><span class="sxs-lookup"><span data-stu-id="002d8-278">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="002d8-279">Isso incluía um valor definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-279">This included a user-defined value.</span></span> <span data-ttu-id="002d8-280">Visual Basic somente oferece suporte a um sistema de coordenadas que se baseia em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-280">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="002d8-281">Esta função é usada pelas ferramentas de atualização para converter entre pixels e um valor de escala definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-281">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveControl">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Control GetActiveControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Windows.Forms.Control GetActiveControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActiveControl () As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::Control ^ GetActiveControl();" />
      <MemberSignature Language="F#" Value="static member GetActiveControl : unit -&gt; System.Windows.Forms.Control" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="002d8-282">Obtém o controle que tem o foco no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-282">Gets the control that currently has focus.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-283">O controle que tem o foco no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-283">The control that currently has focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-284">Essa função é usada pelas ferramentas de atualização para substituir o Visual Basic 6.0 `Screen.ActiveControl` propriedade.</span><span class="sxs-lookup"><span data-stu-id="002d8-284">This function is used by the upgrade tools to replace the Visual Basic 6.0 `Screen.ActiveControl` property.</span></span> <span data-ttu-id="002d8-285">É o equivalente a chamar <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="002d8-285">It is the equivalent of calling <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> in Visual Basic.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCancel">
      <MemberSignature Language="C#" Value="public static bool GetCancel (System.Windows.Forms.Button btn);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GetCancel(class System.Windows.Forms.Button btn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCancel (btn As Button) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetCancel(System::Windows::Forms::Button ^ btn);" />
      <MemberSignature Language="F#" Value="static member GetCancel : System.Windows.Forms.Button -&gt; bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel btn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
      </Parameters>
      <Docs>
        <param name="btn">
          <span data-ttu-id="002d8-286">Um controle <see cref="T:System.Windows.Forms.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-286">A <see cref="T:System.Windows.Forms.Button" /> control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-287">Obtém um valor que indica se um <see cref="T:System.Windows.Forms.Button" /> é um botão Cancelar em um formulário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-287">Gets a value that indicates whether a <see cref="T:System.Windows.Forms.Button" /> is the cancel button on a form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-288">
            <see langword="true" /> se <paramref name="btn" /> for um botão Cancelar, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-288">
              <see langword="true" /> if <paramref name="btn" /> is the cancel button; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-289">Essa função é o equivalente de verificar a <xref:System.Windows.Forms.Form.CancelButton%2A> propriedade de um <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="002d8-289">This function is the equivalent of checking the <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefault">
      <MemberSignature Language="C#" Value="public static bool GetDefault (System.Windows.Forms.Button btn);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GetDefault(class System.Windows.Forms.Button btn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefault (btn As Button) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetDefault(System::Windows::Forms::Button ^ btn);" />
      <MemberSignature Language="F#" Value="static member GetDefault : System.Windows.Forms.Button -&gt; bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault btn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
      </Parameters>
      <Docs>
        <param name="btn">
          <span data-ttu-id="002d8-290">Um controle <see cref="T:System.Windows.Forms.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-290">A <see cref="T:System.Windows.Forms.Button" /> control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-291">Obtém ou define um valor que determina se um controle <see cref="T:System.Windows.Forms.Button" /> é o botão padrão em um formulário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-291">Gets sets a value that determines whether a <see cref="T:System.Windows.Forms.Button" /> control is the default button on a form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-292">
            <see langword="true" /> se <paramref name="btn" /> for o botão padrão, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-292">
              <see langword="true" /> if <paramref name="btn" /> is the default button; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-293">Essa função é o equivalente de verificar a <xref:System.Windows.Forms.Form.AcceptButton%2A> propriedade de um <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="002d8-293">This function is the equivalent of checking the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEXEName">
      <MemberSignature Language="C#" Value="public static string GetEXEName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetEXEName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEXEName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEXEName();" />
      <MemberSignature Language="F#" Value="static member GetEXEName : unit -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="002d8-294">Obtém o nome do arquivo executável (.exe) para o aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-294">Gets the name of the executable file (.exe) for the current application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-295">Um <see cref="T:System.String" /> que contém o nome sem uma extensão de nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-295">A <see cref="T:System.String" /> that contains the name without a file name extension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHInstance">
      <MemberSignature Language="C#" Value="public static IntPtr GetHInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public static native int GetHInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHInstance () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHInstance();" />
      <MemberSignature Language="F#" Value="static member GetHInstance : unit -&gt; nativeint" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="002d8-296">Obtém o identificador de instância (HINSTANCE) para o aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-296">Gets the instance handle (HINSTANCE) for the current application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-297">Um <see cref="T:System.IntPtr" /> para a instância do aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-297">An <see cref="T:System.IntPtr" /> for the current application instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-298">Essa função é o equivalente a chamar <xref:System.Runtime.InteropServices.Marshal.GetHINSTANCE%2A>.</span><span class="sxs-lookup"><span data-stu-id="002d8-298">This function is the equivalent of calling <xref:System.Runtime.InteropServices.Marshal.GetHINSTANCE%2A>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemData">
      <MemberSignature Language="C#" Value="public static int GetItemData (System.Windows.Forms.Control Control, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 GetItemData(class System.Windows.Forms.Control Control, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetItemData(System::Windows::Forms::Control ^ Control, int Index);" />
      <MemberSignature Language="F#" Value="static member GetItemData : System.Windows.Forms.Control * int -&gt; int" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData (Control, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="002d8-299">Um controle <see cref="T:System.Windows.Forms.ListBox" /> ou <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-299">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="002d8-300">Um <see langword="Integer" /> que representa o índice do <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-300">An <see langword="Integer" /> that represents the index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-301">Obtém um <see langword="Integer" /> associado a um item <see cref="T:System.Windows.Forms.ListBox" /> ou <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-301">Gets an <see langword="Integer" /> associated with a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-302">O <see langword="Integer" /> associado ao <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-302">The <see langword="Integer" /> associated with the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-303">No Visual Basic 6.0, o `ItemData` propriedade para um `ListBox` ou `ComboBox` controle pode ser definida no tempo de design no **as propriedades** janela para associar um `Integer` com um `ListBox` ou `ComboBox` item.</span><span class="sxs-lookup"><span data-stu-id="002d8-303">In Visual Basic 6.0, the `ItemData` property for a `ListBox` or `ComboBox` control could be set at design time in the **Properties** window to associate an `Integer` with a `ListBox` or `ComboBox` item.</span></span> <span data-ttu-id="002d8-304">No Visual Basic, o `ItemData` propriedade não existe mais; a `GetItemData` e <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> métodos podem ser usados para emular o comportamento de `ItemData`.</span><span class="sxs-lookup"><span data-stu-id="002d8-304">In Visual Basic, the `ItemData` property no longer exists; the `GetItemData` and <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> methods can be used to emulate the behavior of `ItemData`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemString">
      <MemberSignature Language="C#" Value="public static string GetItemString (System.Windows.Forms.Control Control, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetItemString(class System.Windows.Forms.Control Control, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetItemString(System::Windows::Forms::Control ^ Control, int Index);" />
      <MemberSignature Language="F#" Value="static member GetItemString : System.Windows.Forms.Control * int -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString (Control, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="002d8-305">Um controle <see cref="T:System.Windows.Forms.ListBox" /> ou <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-305">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="002d8-306">Um <see langword="Integer" /> que representa o índice do <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-306">An <see langword="Integer" /> that represents the index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-307">Obtém um <see cref="T:System.String" /> associado a um item <see cref="T:System.Windows.Forms.ListBox" /> ou <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-307">Gets a <see cref="T:System.String" /> associated with a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-308">O <see cref="T:System.String" /> associado ao <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-308">The <see cref="T:System.String" /> associated with the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-309">Essa função é usada pelas ferramentas de atualização para emular o Visual Basic 6.0 `List` propriedade.</span><span class="sxs-lookup"><span data-stu-id="002d8-309">This function is used by the upgrade tools to emulate the Visual Basic 6.0 `List` property.</span></span> <span data-ttu-id="002d8-310">No Visual Basic, use o <xref:System.Windows.Forms.ComboBox.Items%2A> ou <xref:System.Windows.Forms.ListBox.Items%2A> propriedade em vez disso.</span><span class="sxs-lookup"><span data-stu-id="002d8-310">In Visual Basic, use the <xref:System.Windows.Forms.ComboBox.Items%2A> or <xref:System.Windows.Forms.ListBox.Items%2A> property instead.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPath">
      <MemberSignature Language="C#" Value="public static string GetPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPath();" />
      <MemberSignature Language="F#" Value="static member GetPath : unit -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="002d8-311">Obtém o caminho atual do aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-311">Gets the current path for the application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-312">Um <see cref="T:System.String" /> que contém o caminho do assembly em execução no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-312">A <see cref="T:System.String" /> that contains the path of the currently executing assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconToIPicture">
      <MemberSignature Language="C#" Value="public static object IconToIPicture (System.Drawing.Icon ico);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IconToIPicture(class System.Drawing.Icon ico) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)" />
      <MemberSignature Language="VB.NET" Value="Public Function IconToIPicture (ico As Icon) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IconToIPicture(System::Drawing::Icon ^ ico);" />
      <MemberSignature Language="F#" Value="static member IconToIPicture : System.Drawing.Icon -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture ico" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ico" Type="System.Drawing.Icon" />
      </Parameters>
      <Docs>
        <param name="ico">
          <span data-ttu-id="002d8-313">Um <see cref="T:System.Drawing.Icon" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-313">A <see cref="T:System.Drawing.Icon" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-314">Obtém um objeto <see langword="IPicture" /> OLE para um determinado <see cref="T:System.Drawing.Icon" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-314">Gets an OLE <see langword="IPicture" /> object for a given <see cref="T:System.Drawing.Icon" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-315">Um <see cref="T:System.Object" /> que representa o objeto <see langword="IPicture" /> OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-315">An <see cref="T:System.Object" /> representing the OLE <see langword="IPicture" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-316">No Visual Basic 6.0, uma OLE `IPicture` objeto pode ser usado para especificar um ícone; no Visual Basic, o OLE `IPicture` formato não é mais suportado.</span><span class="sxs-lookup"><span data-stu-id="002d8-316">In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an icon; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="002d8-317">Essa função é usada pelas ferramentas de atualização para converter entre um `IPicture` e um <xref:System.Drawing.Icon>.</span><span class="sxs-lookup"><span data-stu-id="002d8-317">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Icon>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IFontToFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font IFontToFont (object objFnt);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font IFontToFont(object objFnt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IFontToFont (objFnt As Object) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ IFontToFont(System::Object ^ objFnt);" />
      <MemberSignature Language="F#" Value="static member IFontToFont : obj -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont objFnt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objFnt" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objFnt">
          <span data-ttu-id="002d8-318">Um <see cref="T:System.Object" /> que contém um <see langword="stdFont" /> do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-318">An <see cref="T:System.Object" /> that contains a Visual Basic 6.0 <see langword="stdFont" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-319">Converte um objeto <see langword="stdFont" /> do Visual Basic 6.0 em um <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-319">Converts a Visual Basic 6.0 <see langword="stdFont" /> object to a <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-320">Um objeto especificado a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-320">A specified object to convert.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-321">O Visual Basic 6.0 `stdFont` objeto foi baseado em COM e não tem nenhum equivalente no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="002d8-321">The Visual Basic 6.0 `stdFont` object was COM-based and has no equivalent in Visual Basic.</span></span> <span data-ttu-id="002d8-322">Essa função é usada pelas ferramentas de atualização para converter entre um <xref:System.Drawing.Font> e um `stdFont` durante a atualização do projeto.</span><span class="sxs-lookup"><span data-stu-id="002d8-322">This function is used by the upgrade tools to convert between a <xref:System.Drawing.Font> and a `stdFont` during project upgrade.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageToIPicture">
      <MemberSignature Language="C#" Value="public static object ImageToIPicture (System.Drawing.Image img);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ImageToIPicture(class System.Drawing.Image img) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImageToIPicture (img As Image) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ImageToIPicture(System::Drawing::Image ^ img);" />
      <MemberSignature Language="F#" Value="static member ImageToIPicture : System.Drawing.Image -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture img" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="img" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="img">
          <span data-ttu-id="002d8-323">Um <see cref="T:System.Drawing.Image" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-323">A <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-324">Obtém um objeto <see langword="IPicture" /> OLE para um determinado <see cref="T:System.Drawing.Image" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-324">Gets an OLE <see langword="IPicture" /> object for a given <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-325">Um <see cref="T:System.Object" /> que representa o objeto <see langword="IPicture" /> OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-325">An <see cref="T:System.Object" /> representing the OLE <see langword="IPicture" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-326">No Visual Basic 6.0, uma OLE `IPicture` objeto pode ser usado para especificar uma imagem; no Visual Basic, o OLE `IPicture` formato não é mais suportado.</span><span class="sxs-lookup"><span data-stu-id="002d8-326">In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="002d8-327">Essa função é usada pelas ferramentas de atualização para converter entre um `IPicture` e um <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="002d8-327">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageToIPictureDisp">
      <MemberSignature Language="C#" Value="public static object ImageToIPictureDisp (System.Drawing.Image img);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ImageToIPictureDisp(class System.Drawing.Image img) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImageToIPictureDisp (img As Image) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ImageToIPictureDisp(System::Drawing::Image ^ img);" />
      <MemberSignature Language="F#" Value="static member ImageToIPictureDisp : System.Drawing.Image -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp img" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="img" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="img">
          <span data-ttu-id="002d8-328">Um <see cref="T:System.Drawing.Image" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-328">A <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-329">Obtém um objeto <see langword="IPictureDisp" /> OLE para um determinado <see cref="T:System.Drawing.Image" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-329">Gets an OLE <see langword="IPictureDisp" /> object for a given <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-330">Um <see cref="T:System.Object" /> que representa o objeto <see langword="IPictureDisp" /> OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-330">An <see cref="T:System.Object" /> representing the OLE <see langword="IPictureDisp" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-331">No Visual Basic 6.0, uma OLE `IPictureDisp` objeto pode ser usado para especificar uma imagem; no Visual Basic, o OLE `IPicture` formato não é mais suportado.</span><span class="sxs-lookup"><span data-stu-id="002d8-331">In Visual Basic 6.0, an OLE `IPictureDisp` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="002d8-332">Essa função é usada pelas ferramentas de atualização para converter entre um `IPicture` e um <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="002d8-332">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Imp">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="002d8-333">Executa uma implicação lógica em duas expressões.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-333">Performs a logical implication on two expressions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static bool Imp (bool a, bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool Imp(bool a, bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Boolean, b As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Imp(bool a, bool b);" />
      <MemberSignature Language="F#" Value="static member Imp : bool * bool -&gt; bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean" />
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="002d8-334">Uma expressão <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-334">A <see cref="T:System.Boolean" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="002d8-335">Uma expressão <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-335">A <see cref="T:System.Boolean" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-336">Executa uma implicação lógica em duas expressões <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-336">Performs a logical implication on two <see cref="T:System.Boolean" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-337">Um <see cref="T:System.Boolean" /> que contém o resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-337">A <see cref="T:System.Boolean" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-338">O Visual Basic 6.0 `Imp` operador não é mais suportado no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="002d8-338">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="002d8-339">Esta função é usada pelas ferramentas de atualização para substituir o operador `Imp` durante a atualização do projeto.</span><span class="sxs-lookup"><span data-stu-id="002d8-339">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="002d8-340">No Visual Basic, use `Not` e `XOr` em vez de `Imp`.</span><span class="sxs-lookup"><span data-stu-id="002d8-340">In Visual Basic, use `Not` and `XOr` instead of `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static byte Imp (byte a, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static unsigned int8 Imp(unsigned int8 a, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Byte, b As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Imp(System::Byte a, System::Byte b);" />
      <MemberSignature Language="F#" Value="static member Imp : byte * byte -&gt; byte" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="002d8-341">Uma expressão <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-341">A <see cref="T:System.Byte" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="002d8-342">Uma expressão <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-342">A <see cref="T:System.Byte" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-343">Executa uma implicação lógica em duas expressões <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-343">Performs a logical implication on two <see cref="T:System.Byte" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-344">Um <see cref="T:System.Byte" /> que contém o resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-344">A <see cref="T:System.Byte" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-345">O Visual Basic 6.0 `Imp` operador não é mais suportado no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="002d8-345">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="002d8-346">Esta função é usada pelas ferramentas de atualização para substituir o operador `Imp` durante a atualização do projeto.</span><span class="sxs-lookup"><span data-stu-id="002d8-346">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="002d8-347">No Visual Basic, use `Not` e `XOr` substituir `Imp`.</span><span class="sxs-lookup"><span data-stu-id="002d8-347">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static short Imp (short a, short b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Imp(int16 a, int16 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Short, b As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Imp(short a, short b);" />
      <MemberSignature Language="F#" Value="static member Imp : int16 * int16 -&gt; int16" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16" />
        <Parameter Name="b" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="002d8-348">Uma expressão <see langword="Short" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-348">A <see langword="Short" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="002d8-349">Uma expressão <see langword="Short" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-349">A <see langword="Short" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-350">Executa uma implicação lógica em duas expressões <see cref="T:System.Int16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-350">Performs a logical implication on two <see cref="T:System.Int16" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-351">Um <see langword="Short" /> que contém o resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-351">A <see langword="Short" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-352">O Visual Basic 6.0 `Imp` operador não é mais suportado no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="002d8-352">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="002d8-353">Esta função é usada pelas ferramentas de atualização para substituir o operador `Imp` durante a atualização do projeto.</span><span class="sxs-lookup"><span data-stu-id="002d8-353">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="002d8-354">No Visual Basic, use `Not` e `XOr` substituir `Imp`.</span><span class="sxs-lookup"><span data-stu-id="002d8-354">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static int Imp (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Imp(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Integer, b As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Imp(int a, int b);" />
      <MemberSignature Language="F#" Value="static member Imp : int * int -&gt; int" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="002d8-355">Uma expressão <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-355">An <see langword="Integer" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="002d8-356">Uma expressão <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-356">An <see langword="Integer" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-357">Executa uma implicação lógica em duas expressões <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-357">Performs a logical implication on two <see cref="T:System.Int32" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-358">Um <see langword="Integer" /> que contém o resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-358">An <see langword="Integer" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-359">O Visual Basic 6.0 `Imp` operador não é mais suportado no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="002d8-359">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="002d8-360">Esta função é usada pelas ferramentas de atualização para substituir o operador `Imp` durante a atualização do projeto.</span><span class="sxs-lookup"><span data-stu-id="002d8-360">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="002d8-361">No Visual Basic, use `Not` e `XOr` substituir `Imp`.</span><span class="sxs-lookup"><span data-stu-id="002d8-361">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static long Imp (long a, long b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Imp(int64 a, int64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Long, b As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Imp(long a, long b);" />
      <MemberSignature Language="F#" Value="static member Imp : int64 * int64 -&gt; int64" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="002d8-362">Uma expressão <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-362">A <see langword="Long" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="002d8-363">Uma expressão <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-363">A <see langword="Long" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-364">Executa uma implicação lógica em duas expressões <see cref="T:System.Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-364">Performs a logical implication on two <see cref="T:System.Int64" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-365">Um <see langword="Long" /> que contém o resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-365">A <see langword="Long" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-366">O Visual Basic 6.0 `Imp` operador não é mais suportado no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="002d8-366">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="002d8-367">Esta função é usada pelas ferramentas de atualização para substituir o operador `Imp` durante a atualização do projeto.</span><span class="sxs-lookup"><span data-stu-id="002d8-367">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="002d8-368">No Visual Basic, use `Not` e `XOr` substituir `Imp`.</span><span class="sxs-lookup"><span data-stu-id="002d8-368">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static object Imp (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Imp(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Object, b As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Imp(System::Object ^ a, System::Object ^ b);" />
      <MemberSignature Language="F#" Value="static member Imp : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="002d8-369">Uma expressão <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-369">An <see cref="T:System.Object" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="002d8-370">Uma expressão <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-370">An <see cref="T:System.Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-371">Executa uma implicação lógica em duas expressões <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-371">Performs a logical implication on two <see cref="T:System.Object" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-372">Um <see cref="T:System.Object" /> que contém o resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-372">An <see cref="T:System.Object" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-373">O Visual Basic 6.0 `Imp` operador não é mais suportado no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="002d8-373">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="002d8-374">Esta função é usada pelas ferramentas de atualização para substituir o operador `Imp` durante a atualização do projeto.</span><span class="sxs-lookup"><span data-stu-id="002d8-374">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span> <span data-ttu-id="002d8-375">Durante a atualização, o tipo de dados variante é atualizado para <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="002d8-375">During upgrade, the Variant data type is upgraded to <xref:System.Object>.</span></span>  
  
 <span data-ttu-id="002d8-376">No Visual Basic, use `Not` e `XOr` substituir `Imp`.</span><span class="sxs-lookup"><span data-stu-id="002d8-376">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IPictureDispToImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image IPictureDispToImage (object pict);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Image IPictureDispToImage(object pict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPictureDispToImage (pict As Object) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ IPictureDispToImage(System::Object ^ pict);" />
      <MemberSignature Language="F#" Value="static member IPictureDispToImage : obj -&gt; System.Drawing.Image" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage pict" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pict" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pict">
          <span data-ttu-id="002d8-377">Um objeto <see langword="IPictureDisp" /> OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-377">An OLE <see langword="IPictureDisp" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-378">Obtém um <see cref="T:System.Drawing.Image" /> para um determinado objeto <see langword="IPictureDisp" /> OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-378">Gets an <see cref="T:System.Drawing.Image" /> for a given OLE <see langword="IPictureDisp" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-379">Um objeto de imagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-379">An image object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-380">No Visual Basic 6.0, uma OLE `IPictureDisp` objeto pode ser usado para especificar uma imagem; no Visual Basic, o OLE `IPicture` formato não é mais suportado.</span><span class="sxs-lookup"><span data-stu-id="002d8-380">In Visual Basic 6.0, an OLE `IPictureDisp` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="002d8-381">Essa função é usada pelas ferramentas de atualização para converter entre um `IPictureDisp` e um <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="002d8-381">This function is used by the upgrade tools to convert between an `IPictureDisp` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IPictureToImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image IPictureToImage (object pict);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Image IPictureToImage(object pict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPictureToImage (pict As Object) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ IPictureToImage(System::Object ^ pict);" />
      <MemberSignature Language="F#" Value="static member IPictureToImage : obj -&gt; System.Drawing.Image" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage pict" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pict" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pict">
          <span data-ttu-id="002d8-382">Um objeto <see langword="IPicture" /> OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-382">An OLE <see langword="IPicture" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-383">Obtém um <see cref="T:System.Drawing.Image" /> para um determinado objeto <see langword="IPicture" /> OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-383">Gets an <see cref="T:System.Drawing.Image" /> for a given OLE <see langword="IPicture" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-384">Um objeto convertido em imagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-384">A converted object to image.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-385">No Visual Basic 6.0, uma OLE `IPicture` objeto pode ser usado para especificar uma imagem; no Visual Basic, o OLE `IPicture` formato não é mais suportado.</span><span class="sxs-lookup"><span data-stu-id="002d8-385">In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="002d8-386">Essa função é usada pelas ferramentas de atualização para converter entre um `IPicture` e um <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="002d8-386">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="002d8-387">Carrega dados de vários tipos possíveis de um arquivo de recurso (.res) e retorna uma matriz <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-387">Loads data of several possible types from a resource (.res) file and returns a <see cref="T:System.Byte" /> array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResData">
      <MemberSignature Language="C#" Value="public static object LoadResData (object ID, object restype);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResData(object ID, object restype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResData (ID As Object, restype As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResData(System::Object ^ ID, System::Object ^ restype);" />
      <MemberSignature Language="F#" Value="static member LoadResData : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData (ID, restype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="002d8-388">Um <see cref="T:System.Object" /> que especifica os dados no arquivo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-388">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="restype">
          <span data-ttu-id="002d8-389">Um <see cref="T:System.Object" /> que especifica o tipo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-389">An <see cref="T:System.Object" /> that specifies the resource type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-390">Carrega dados de vários tipos possíveis de um arquivo de recurso (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-390">Loads data of several possible types from a resource (.res) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-391">Um <see cref="T:System.Object" /> que contém o recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-391">An <see cref="T:System.Object" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-392">No Visual Basic 6.0, as versões internacionais de um aplicativo eram criadas colocando-se todas as informações localizáveis, como cadeias de caracteres, em um arquivo de recurso separado (.res) para cada idioma.</span><span class="sxs-lookup"><span data-stu-id="002d8-392">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="002d8-393">No tempo de execução, os recursos específicos da localidade foram carregados do arquivo de recurso chamando as funções `LoadResString`, `LoadResPicture` e `LoadResData`.</span><span class="sxs-lookup"><span data-stu-id="002d8-393">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="002d8-394">No Visual Basic, as versões internacionais de um aplicativo são criadas alterando o `Language` propriedade de um formulário em tempo de design.</span><span class="sxs-lookup"><span data-stu-id="002d8-394">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="002d8-395">Um arquivo de recurso separado (.resx) é criado automaticamente para cada localidade selecionada.</span><span class="sxs-lookup"><span data-stu-id="002d8-395">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="002d8-396">Você não precisa mais carregar explicitamente recursos do código; os recursos são carregados automaticamente com base na localidade do usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-396">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="002d8-397">Para obter mais informações, consulte [aplicativos Globalizando Formulários do Windows](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="002d8-397">For more information, see [Globalizing Windows Forms applications](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadResData">
      <MemberSignature Language="C#" Value="public static object LoadResData (object ID, object restype, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResData(object ID, object restype, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResData (ID As Object, restype As Object, Culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResData(System::Object ^ ID, System::Object ^ restype, System::Globalization::CultureInfo ^ Culture);" />
      <MemberSignature Language="F#" Value="static member LoadResData : obj * obj * System.Globalization.CultureInfo -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData (ID, restype, Culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="System.Object" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="002d8-398">Um <see cref="T:System.Object" /> que especifica os dados no arquivo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-398">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="restype">
          <span data-ttu-id="002d8-399">Um <see cref="T:System.Object" /> que especifica o tipo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-399">An <see cref="T:System.Object" /> that specifies the resource type.</span>
          </span>
        </param>
        <param name="Culture">
          <span data-ttu-id="002d8-400">Um objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica a localidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-400">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-401">Carrega dados de vários tipos possíveis de um arquivo de recurso (.res), especificando uma localidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-401">Loads data of several possible types from a resource (.res) file, specifying a locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-402">Um <see cref="T:System.Object" /> que contém o recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-402">An <see cref="T:System.Object" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-403">No Visual Basic 6.0, as versões internacionais de um aplicativo eram criadas colocando-se todas as informações localizáveis, como cadeias de caracteres, em um arquivo de recurso separado (.res) para cada idioma.</span><span class="sxs-lookup"><span data-stu-id="002d8-403">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="002d8-404">No tempo de execução, os recursos específicos da localidade foram carregados do arquivo de recurso chamando as funções `LoadResString`, `LoadResPicture` e `LoadResData`.</span><span class="sxs-lookup"><span data-stu-id="002d8-404">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="002d8-405">No Visual Basic, as versões internacionais de um aplicativo são criadas alterando o `Language` propriedade de um formulário em tempo de design.</span><span class="sxs-lookup"><span data-stu-id="002d8-405">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="002d8-406">Um arquivo de recurso separado (.resx) é criado automaticamente para cada localidade selecionada.</span><span class="sxs-lookup"><span data-stu-id="002d8-406">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="002d8-407">Você não precisa mais carregar explicitamente recursos do código; os recursos são carregados automaticamente com base na localidade do usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-407">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="002d8-408">Para obter mais informações, consulte [aplicativos Globalizando Formulários do Windows](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="002d8-408">For more information, see [Globalizing Windows Forms applications](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResPicture">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="002d8-409">Carrega um bitmap, ícone ou cursor de um arquivo de recurso (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-409">Loads a bitmap, icon, or cursor from a resource (.res) file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResPicture">
      <MemberSignature Language="C#" Value="public static object LoadResPicture (object ID, Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResPicture(object ID, valuetype Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResPicture (ID As Object, restype As LoadResConstants) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResPicture(System::Object ^ ID, Microsoft::VisualBasic::Compatibility::VB6::LoadResConstants restype);" />
      <MemberSignature Language="F#" Value="static member LoadResPicture : obj * Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture (ID, restype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="002d8-410">Um <see cref="T:System.Object" /> que especifica os dados no arquivo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-410">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="restype">
          <span data-ttu-id="002d8-411">Uma enumeração <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> que especifica o tipo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-411">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> enumeration that specifies the resource type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-412">Carrega um bitmap, ícone ou cursor de um arquivo de recurso (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-412">Loads a bitmap, icon, or cursor from a resource (.res) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-413">Um <see cref="T:System.Object" /> que contém o recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-413">An <see cref="T:System.Object" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-414">No Visual Basic 6.0, as versões internacionais de um aplicativo eram criadas colocando-se todas as informações localizáveis, como cadeias de caracteres, em um arquivo de recurso separado (.res) para cada idioma.</span><span class="sxs-lookup"><span data-stu-id="002d8-414">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="002d8-415">No tempo de execução, os recursos específicos da localidade foram carregados do arquivo de recurso chamando as funções `LoadResString`, `LoadResPicture` e `LoadResData`.</span><span class="sxs-lookup"><span data-stu-id="002d8-415">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="002d8-416">No Visual Basic, as versões internacionais de um aplicativo são criadas alterando o `Language` propriedade de um formulário em tempo de design.</span><span class="sxs-lookup"><span data-stu-id="002d8-416">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="002d8-417">Um arquivo de recurso separado (.resx) é criado automaticamente para cada localidade selecionada.</span><span class="sxs-lookup"><span data-stu-id="002d8-417">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="002d8-418">Você não precisa mais carregar explicitamente recursos do código; os recursos são carregados automaticamente com base na localidade do usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-418">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="002d8-419">Para obter mais informações, consulte [aplicativos Globalizando Formulários do Windows](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="002d8-419">For more information, see [Globalizing Windows Forms applications](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadResPicture">
      <MemberSignature Language="C#" Value="public static object LoadResPicture (object ID, Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResPicture(object ID, valuetype Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResPicture (ID As Object, restype As LoadResConstants, Culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResPicture(System::Object ^ ID, Microsoft::VisualBasic::Compatibility::VB6::LoadResConstants restype, System::Globalization::CultureInfo ^ Culture);" />
      <MemberSignature Language="F#" Value="static member LoadResPicture : obj * Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants * System.Globalization.CultureInfo -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture (ID, restype, Culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="002d8-420">Um <see cref="T:System.Object" /> que especifica os dados no arquivo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-420">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="restype">
          <span data-ttu-id="002d8-421">Uma enumeração <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> que especifica o tipo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-421">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> enumeration that specifies the resource type.</span>
          </span>
        </param>
        <param name="Culture">
          <span data-ttu-id="002d8-422">Um objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica a localidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-422">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-423">Carrega um bitmap, ícone ou cursor de um arquivo de recurso (.res), especificando uma localidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-423">Loads a bitmap, icon, or cursor from a resource (.res) file, specifying a locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-424">Um <see cref="T:System.Object" /> que contém o recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-424">An <see cref="T:System.Object" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-425">No Visual Basic 6.0, as versões internacionais de um aplicativo eram criadas colocando-se todas as informações localizáveis, como cadeias de caracteres, em um arquivo de recurso separado (.res) para cada idioma.</span><span class="sxs-lookup"><span data-stu-id="002d8-425">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="002d8-426">No tempo de execução, os recursos específicos da localidade foram carregados do arquivo de recurso chamando as funções `LoadResString`, `LoadResPicture` e `LoadResData`.</span><span class="sxs-lookup"><span data-stu-id="002d8-426">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="002d8-427">No Visual Basic, as versões internacionais de um aplicativo são criadas alterando o `Language` propriedade de um formulário em tempo de design.</span><span class="sxs-lookup"><span data-stu-id="002d8-427">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="002d8-428">Um arquivo de recurso separado (.resx) é criado automaticamente para cada localidade selecionada.</span><span class="sxs-lookup"><span data-stu-id="002d8-428">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="002d8-429">Você não precisa mais carregar explicitamente recursos do código; os recursos são carregados automaticamente com base na localidade do usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-429">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="002d8-430">Para obter mais informações, consulte [aplicativos Globalizando Formulários do Windows](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="002d8-430">For more information, see [Globalizing Windows Forms applications](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResString">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="002d8-431">Carrega uma cadeia de caracteres de um arquivo de recurso (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-431">Loads a string from a resource (.res) file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResString">
      <MemberSignature Language="C#" Value="public static string LoadResString (int ID);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LoadResString(int32 ID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResString (ID As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LoadResString(int ID);" />
      <MemberSignature Language="F#" Value="static member LoadResString : int -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString ID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="002d8-432">Um <see cref="T:System.Object" /> que especifica os dados no arquivo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-432">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-433">Carrega uma cadeia de caracteres de um arquivo de recurso (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-433">Loads a string from a resource (.res) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-434">Um <see cref="T:System.String" /> que contém o recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-434">A <see cref="T:System.String" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-435">No Visual Basic 6.0, as versões internacionais de um aplicativo eram criadas colocando-se todas as informações localizáveis, como cadeias de caracteres, em um arquivo de recurso separado (.res) para cada idioma.</span><span class="sxs-lookup"><span data-stu-id="002d8-435">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="002d8-436">No tempo de execução, os recursos específicos da localidade foram carregados do arquivo de recurso chamando as funções `LoadResString`, `LoadResPicture` e `LoadResData`.</span><span class="sxs-lookup"><span data-stu-id="002d8-436">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="002d8-437">No Visual Basic, as versões internacionais de um aplicativo são criadas alterando o `Language` propriedade de um formulário em tempo de design.</span><span class="sxs-lookup"><span data-stu-id="002d8-437">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="002d8-438">Um arquivo de recurso separado (.resx) é criado automaticamente para cada localidade selecionada.</span><span class="sxs-lookup"><span data-stu-id="002d8-438">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="002d8-439">Você não precisa mais carregar explicitamente recursos do código; os recursos são carregados automaticamente com base na localidade do usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-439">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="002d8-440">Para obter mais informações, consulte [aplicativos Globalizando Formulários do Windows](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="002d8-440">For more information, see [Globalizing Windows Forms applications](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadResString">
      <MemberSignature Language="C#" Value="public static string LoadResString (int ID, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LoadResString(int32 ID, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResString (ID As Integer, Culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LoadResString(int ID, System::Globalization::CultureInfo ^ Culture);" />
      <MemberSignature Language="F#" Value="static member LoadResString : int * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString (ID, Culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="002d8-441">Um <see cref="T:System.Object" /> que especifica os dados no arquivo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-441">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="Culture">
          <span data-ttu-id="002d8-442">Um objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica a localidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-442">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-443">Carrega uma cadeia de caracteres de um arquivo de recurso (.res), especificando uma localidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-443">Loads a string from a resource (.res) file, specifying a locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-444">Um <see cref="T:System.String" /> que contém o recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-444">A <see cref="T:System.String" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-445">No Visual Basic 6.0, as versões internacionais de um aplicativo eram criadas colocando-se todas as informações localizáveis, como cadeias de caracteres, em um arquivo de recurso separado (.res) para cada idioma.</span><span class="sxs-lookup"><span data-stu-id="002d8-445">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="002d8-446">No tempo de execução, os recursos específicos da localidade foram carregados do arquivo de recurso chamando as funções `LoadResString`, `LoadResPicture` e `LoadResData`.</span><span class="sxs-lookup"><span data-stu-id="002d8-446">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="002d8-447">No Visual Basic, as versões internacionais de um aplicativo são criadas alterando o `Language` propriedade de um formulário em tempo de design.</span><span class="sxs-lookup"><span data-stu-id="002d8-447">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="002d8-448">Um arquivo de recurso separado (.resx) é criado automaticamente para cada localidade selecionada.</span><span class="sxs-lookup"><span data-stu-id="002d8-448">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="002d8-449">Você não precisa mais carregar explicitamente recursos do código; os recursos são carregados automaticamente com base na localidade do usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-449">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="002d8-450">Para obter mais informações, consulte [aplicativos Globalizando Formulários do Windows](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="002d8-450">For more information, see [Globalizing Windows Forms applications](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsToTwipsX">
      <MemberSignature Language="C#" Value="public static double PixelsToTwipsX (double X);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PixelsToTwipsX(float64 X) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PixelsToTwipsX (X As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double PixelsToTwipsX(double X);" />
      <MemberSignature Language="F#" Value="static member PixelsToTwipsX : double -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX X" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="002d8-451">Um <see langword="Double" /> que contém a coordenada X a ser convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-451">A <see langword="Double" /> that contains the X coordinate to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-452">Converte uma coordenada X de pixels para twips.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-452">Converts an X coordinate from pixels to twips.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-453">Um <see langword="Double" /> que contém a coordenada X expressa em twips.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-453">A <see langword="Double" /> that contains the X coordinate expressed in twips.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-454">No Visual Basic 6.0, as coordenadas eram expressadas em twips; no Visual Basic, elas são expressas em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-454">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="002d8-455">Esta função é usada pelas ferramentas de atualização para converter entre os dois sistemas de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="002d8-455">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsToTwipsY">
      <MemberSignature Language="C#" Value="public static double PixelsToTwipsY (double Y);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PixelsToTwipsY(float64 Y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PixelsToTwipsY (Y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double PixelsToTwipsY(double Y);" />
      <MemberSignature Language="F#" Value="static member PixelsToTwipsY : double -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY Y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="002d8-456">Um <see langword="Double" /> que contém a coordenada Y a ser convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-456">A <see langword="Double" /> that contains the Y coordinate to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-457">Converte uma coordenada Y de pixels para twips.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-457">Converts a Y coordinate from pixels to twips.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-458">Um <see langword="Double" /> que contém a coordenada Y expressa em twips.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-458">A <see langword="Double" /> that contains the Y coordinate expressed in twips.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-459">No Visual Basic 6.0, as coordenadas eram expressadas em twips; no Visual Basic, elas são expressas em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-459">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="002d8-460">Esta função é usada pelas ferramentas de atualização para converter entre os dois sistemas de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="002d8-460">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public static void SendKeys (string Keys, bool Wait = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SendKeys(string Keys, bool Wait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As String, Optional Wait As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member SendKeys : string * bool -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys (Keys, Wait)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.String" />
        <Parameter Name="Wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Keys">
          <span data-ttu-id="002d8-461">Um <see cref="T:System.String" /> que contém os valores de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-461">A <see cref="T:System.String" /> that contains the key values.</span>
          </span>
        </param>
        <param name="Wait">
          <span data-ttu-id="002d8-462">
            <see langword="true" /> para processar os pressionamentos de tecla antes que o controle seja retornado para o procedimento; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-462">
              <see langword="true" /> to process keystrokes before control is returned to the procedure; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-463">Envia um ou mais pressionamentos de teclas para a janela ativa, como se eles tivessem sido digitados no teclado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-463">Sends one or more keystrokes to the active window as if typed at the keyboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-464">Essa função é usada pelas ferramentas de atualização para emular o Visual Basic 6.0 `SendKeys` método.</span><span class="sxs-lookup"><span data-stu-id="002d8-464">This function is used by the upgrade tools to emulate the Visual Basic 6.0 `SendKeys` method.</span></span> <span data-ttu-id="002d8-465">No Visual Basic, use o `My.Computer.Keyboard.SendKeys` método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="002d8-465">In Visual Basic, use the `My.Computer.Keyboard.SendKeys` method instead.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCancel">
      <MemberSignature Language="C#" Value="public static void SetCancel (System.Windows.Forms.Button btn, bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetCancel(class System.Windows.Forms.Button btn, bool Cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCancel (btn As Button, Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCancel(System::Windows::Forms::Button ^ btn, bool Cancel);" />
      <MemberSignature Language="F#" Value="static member SetCancel : System.Windows.Forms.Button * bool -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel (btn, Cancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
        <Parameter Name="Cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="btn">
          <span data-ttu-id="002d8-466">Um <see cref="T:System.Windows.Forms.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-466">A <see cref="T:System.Windows.Forms.Button" />.</span>
          </span>
        </param>
        <param name="Cancel">
          <span data-ttu-id="002d8-467">
            <see langword="true" /> se a propriedade <see langword="Cancel" /> do controle <see langword="CommandButton" /> do Visual Basic 6.0 for <see langword="true" />, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-467">
              <see langword="true" /> if the Visual Basic 6.0 <see langword="CommandButton" /> control's <see langword="Cancel" /> property is <see langword="true" />; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-468">Define a propriedade <see cref="P:System.Windows.Forms.Form.CancelButton" /> de um <see cref="T:System.Windows.Forms.Form" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-468">Sets the <see cref="P:System.Windows.Forms.Form.CancelButton" /> property of a <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-469">No Visual Basic 6.0, o valor booliano `Default` e `Cancel` propriedades de um `CommandButton` controle determinam se o controle responde às teclas ENTER ou ESC, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="002d8-469">In Visual Basic 6.0, the Boolean `Default` and `Cancel` properties of a `CommandButton` control determine whether the control responds to the ENTER or ESC keys, respectively.</span></span> <span data-ttu-id="002d8-470">No Visual Basic, o <xref:System.Windows.Forms.Button> controle não possui `Default` ou `Cancel` propriedades.</span><span class="sxs-lookup"><span data-stu-id="002d8-470">In Visual Basic, the <xref:System.Windows.Forms.Button> control no longer has `Default` or `Cancel` properties.</span></span> <span data-ttu-id="002d8-471">O <xref:System.Windows.Forms.Form> objeto tem <xref:System.Windows.Forms.Form.AcceptButton%2A> e <xref:System.Windows.Forms.Form.CancelButton%2A> propriedades que fornecem a mesma funcionalidade; essas propriedades levam o nome de um <xref:System.Windows.Forms.Button> controle como um argumento.</span><span class="sxs-lookup"><span data-stu-id="002d8-471">The <xref:System.Windows.Forms.Form> object has <xref:System.Windows.Forms.Form.AcceptButton%2A> and <xref:System.Windows.Forms.Form.CancelButton%2A> properties that provide the same functionality; these properties take the name of a <xref:System.Windows.Forms.Button> control as an argument.</span></span>  
  
 <span data-ttu-id="002d8-472">Essa função é usada pelas ferramentas de atualização para definir o <xref:System.Windows.Forms.Form.CancelButton%2A> propriedade de um <xref:System.Windows.Forms.Form>.based sobre o `Cancel` propriedade de um Visual Basic 6.0 atualizados `CommandButton` controle.</span><span class="sxs-lookup"><span data-stu-id="002d8-472">This function is used by the upgrade tools to set the <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form>.based on the `Cancel` property of an upgraded Visual Basic 6.0 `CommandButton` control.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefault">
      <MemberSignature Language="C#" Value="public static void SetDefault (System.Windows.Forms.Button btn, bool Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetDefault(class System.Windows.Forms.Button btn, bool Default) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefault (btn As Button, Default As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDefault(System::Windows::Forms::Button ^ btn, bool Default);" />
      <MemberSignature Language="F#" Value="static member SetDefault : System.Windows.Forms.Button * bool -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault (btn, Default)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
        <Parameter Name="Default" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="btn">
          <span data-ttu-id="002d8-473">Um <see cref="T:System.Windows.Forms.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-473">A <see cref="T:System.Windows.Forms.Button" />.</span>
          </span>
        </param>
        <param name="Default">
          <span data-ttu-id="002d8-474">
            <see langword="true" /> se a propriedade <see langword="Default" /> do controle <see langword="CommandButton" /> do Visual Basic 6.0 for <see langword="true" />, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-474">
              <see langword="true" /> if the Visual Basic 6.0 <see langword="CommandButton" /> control's <see langword="Default" /> property is <see langword="true" />; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-475">Define a propriedade <see cref="P:System.Windows.Forms.Form.AcceptButton" /> de um <see cref="T:System.Windows.Forms.Form" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-475">Sets the <see cref="P:System.Windows.Forms.Form.AcceptButton" /> property of a <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-476">No Visual Basic 6.0, o valor booliano `Default` e `Cancel` propriedades de um `CommandButton` controle determinam se o controle responde às teclas ENTER ou ESC, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="002d8-476">In Visual Basic 6.0, the Boolean `Default` and `Cancel` properties of a `CommandButton` control determine whether the control responds to the ENTER or ESC keys, respectively.</span></span> <span data-ttu-id="002d8-477">No Visual Basic, o <xref:System.Windows.Forms.Button> controle não possui `Default` ou `Cancel` propriedades.</span><span class="sxs-lookup"><span data-stu-id="002d8-477">In Visual Basic, the <xref:System.Windows.Forms.Button> control no longer has `Default` or `Cancel` properties.</span></span> <span data-ttu-id="002d8-478">O <xref:System.Windows.Forms.Form> objeto tem <xref:System.Windows.Forms.Form.AcceptButton%2A> e <xref:System.Windows.Forms.Form.CancelButton%2A> propriedades que fornecem a mesma funcionalidade; essas propriedades levam o nome de um <xref:System.Windows.Forms.Button> controle como um argumento.</span><span class="sxs-lookup"><span data-stu-id="002d8-478">The <xref:System.Windows.Forms.Form> object has <xref:System.Windows.Forms.Form.AcceptButton%2A> and <xref:System.Windows.Forms.Form.CancelButton%2A> properties that provide the same functionality; these properties take the name of a <xref:System.Windows.Forms.Button> control as an argument.</span></span>  
  
 <span data-ttu-id="002d8-479">Essa função é usada pelas ferramentas de atualização para definir o <xref:System.Windows.Forms.Form.AcceptButton%2A> propriedade de um <xref:System.Windows.Forms.Form>.based sobre o `Default` propriedade de um Visual Basic 6.0 atualizados `CommandButton` controle.</span><span class="sxs-lookup"><span data-stu-id="002d8-479">This function is used by the upgrade tools to set the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of a <xref:System.Windows.Forms.Form>.based on the `Default` property of an upgraded Visual Basic 6.0 `CommandButton` control.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemData">
      <MemberSignature Language="C#" Value="public static void SetItemData (System.Windows.Forms.Control Control, int Index, int ItemData);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetItemData(class System.Windows.Forms.Control Control, int32 Index, int32 ItemData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetItemData(System::Windows::Forms::Control ^ Control, int Index, int ItemData);" />
      <MemberSignature Language="F#" Value="static member SetItemData : System.Windows.Forms.Control * int * int -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData (Control, Index, ItemData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="ItemData" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="002d8-480">Um controle <see cref="T:System.Windows.Forms.ListBox" /> ou <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-480">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="002d8-481">O <see langword="Index" /> do <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-481">The <see langword="Index" /> of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </param>
        <param name="ItemData">
          <span data-ttu-id="002d8-482">Um <see langword="Integer" /> a ser atribuído à propriedade <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-482">An <see langword="Integer" /> to assign to the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-483">Define a propriedade <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> de um <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-483">Sets the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> property for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-484">No Visual Basic 6.0, o `ItemData` propriedade para um `ListBox` ou `ComboBox` controle pode ser definida no tempo de design no **as propriedades** janela para associar um `Integer` com um `ListBox` ou `ComboBox` item.</span><span class="sxs-lookup"><span data-stu-id="002d8-484">In Visual Basic 6.0, the `ItemData` property for a `ListBox` or `ComboBox` control could be set at design time in the **Properties** window to associate an `Integer` with a `ListBox` or `ComboBox` item.</span></span> <span data-ttu-id="002d8-485">No Visual Basic, o `ItemData` propriedade não existe mais; a <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> e `SetItemData` métodos podem ser usados para emular o comportamento de `ItemData`.</span><span class="sxs-lookup"><span data-stu-id="002d8-485">In Visual Basic, the `ItemData` property no longer exists; the <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> and `SetItemData` methods can be used to emulate the behavior of `ItemData`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemString">
      <MemberSignature Language="C#" Value="public static void SetItemString (System.Windows.Forms.Control Control, int Index, string ItemString);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetItemString(class System.Windows.Forms.Control Control, int32 Index, string ItemString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetItemString(System::Windows::Forms::Control ^ Control, int Index, System::String ^ ItemString);" />
      <MemberSignature Language="F#" Value="static member SetItemString : System.Windows.Forms.Control * int * string -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString (Control, Index, ItemString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="ItemString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="002d8-486">Um controle <see cref="T:System.Windows.Forms.ListBox" /><see cref="T:System.Windows.Forms.ListBox" /> ou <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-486">A <see cref="T:System.Windows.Forms.ListBox" /><see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="002d8-487">O <see langword="Index" /> do <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-487">The <see langword="Index" /> of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </param>
        <param name="ItemString">
          <span data-ttu-id="002d8-488">Um <see cref="T:System.String" /> a ser atribuído à propriedade <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-488">A <see cref="T:System.String" /> to assign to the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-489">Define a propriedade <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> de um <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-489">Sets the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> property for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-490">Essa função é usada pelas ferramentas de atualização para emular o Visual Basic 6.0 `List` propriedade.</span><span class="sxs-lookup"><span data-stu-id="002d8-490">This function is used by the upgrade tools to emulate the Visual Basic 6.0 `List` property.</span></span> <span data-ttu-id="002d8-491">No Visual Basic, use o <xref:System.Windows.Forms.ComboBox.Items%2A> ou <xref:System.Windows.Forms.ListBox.Items%2A> propriedade em vez disso.</span><span class="sxs-lookup"><span data-stu-id="002d8-491">In Visual Basic, use the <xref:System.Windows.Forms.ComboBox.Items%2A> or <xref:System.Windows.Forms.ListBox.Items%2A> property instead.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetResourceBaseName">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="002d8-492">Atribui o nome de um arquivo de recurso do Visual Basic 6.0 ao namespace do projeto do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-492">Assigns the name of a Visual Basic 6.0 resource file to the Visual Basic project namespace.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetResourceBaseName">
      <MemberSignature Language="C#" Value="public static void SetResourceBaseName (string BaseFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetResourceBaseName(string BaseFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceBaseName (BaseFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetResourceBaseName(System::String ^ BaseFileName);" />
      <MemberSignature Language="F#" Value="static member SetResourceBaseName : string -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName BaseFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BaseFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="BaseFileName">
          <span data-ttu-id="002d8-493">Um arquivo de recurso (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-493">A resource file (.res).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-494">Atribui o nome de um arquivo de recurso do Visual Basic 6.0 ao namespace do projeto atual do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-494">Assigns the name of a Visual Basic 6.0 resource file to the current Visual Basic project namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-495">Manipulação de recursos é diferente para o Visual Basic 6.0 e Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="002d8-495">Resource handling is different for Visual Basic 6.0 and Visual Basic.</span></span> <span data-ttu-id="002d8-496">Essa função é usada pelas ferramentas de atualização para adicionar um arquivo de recurso do Visual Basic 6.0 a um projeto.</span><span class="sxs-lookup"><span data-stu-id="002d8-496">This function is used by the upgrade tools to add a Visual Basic 6.0 resource file to a project.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResourceBaseName">
      <MemberSignature Language="C#" Value="public static void SetResourceBaseName (string ProjectNamespace, string BaseFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetResourceBaseName(string ProjectNamespace, string BaseFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceBaseName (ProjectNamespace As String, BaseFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetResourceBaseName(System::String ^ ProjectNamespace, System::String ^ BaseFileName);" />
      <MemberSignature Language="F#" Value="static member SetResourceBaseName : string * string -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName (ProjectNamespace, BaseFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProjectNamespace" Type="System.String" />
        <Parameter Name="BaseFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ProjectNamespace">
          <span data-ttu-id="002d8-497">Um <see cref="T:System.String" /> que contém o <see langword="Namespace" /> para o arquivo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-497">A <see cref="T:System.String" /> that contains the <see langword="Namespace" /> for the resource file.</span>
          </span>
        </param>
        <param name="BaseFileName">
          <span data-ttu-id="002d8-498">Um arquivo de recurso (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-498">A resource file (.res).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-499">Atribui o nome de um arquivo de recurso do Visual Basic 6.0 a um namespace do projeto do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-499">Assigns the name of a Visual Basic 6.0 resource file to a Visual Basic project namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-500">Manipulação de recursos é diferente para o Visual Basic 6.0 e Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="002d8-500">Resource handling is different for Visual Basic 6.0 and Visual Basic.</span></span> <span data-ttu-id="002d8-501">Essa função é usada pelas ferramentas de atualização para adicionar um arquivo de recurso do Visual Basic 6.0 a um projeto.</span><span class="sxs-lookup"><span data-stu-id="002d8-501">This function is used by the upgrade tools to add a Visual Basic 6.0 resource file to a project.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowForm">
      <MemberSignature Language="C#" Value="public static void ShowForm (System.Windows.Forms.Form Form, int Modal = 0, System.Windows.Forms.Form OwnerForm = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ShowForm(class System.Windows.Forms.Form Form, int32 Modal, class System.Windows.Forms.Form OwnerForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)" />
      <MemberSignature Language="F#" Value="static member ShowForm : System.Windows.Forms.Form * int * System.Windows.Forms.Form -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm (Form, Modal, OwnerForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.Form" />
        <Parameter Name="Modal" Type="System.Int32" />
        <Parameter Name="OwnerForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="Form">
          <span data-ttu-id="002d8-502">O <see cref="T:System.Windows.Forms.Form" /> a ser exibido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-502">The <see cref="T:System.Windows.Forms.Form" /> to display.</span>
          </span>
        </param>
        <param name="Modal">
          <span data-ttu-id="002d8-503">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-503">Optional.</span>
          </span>
          <span data-ttu-id="002d8-504">Uma enumeração <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants" /> que especifica a modalidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-504">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants" /> enumeration that specifies modality.</span>
          </span>
        </param>
        <param name="OwnerForm">
          <span data-ttu-id="002d8-505">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-505">Optional.</span>
          </span>
          <span data-ttu-id="002d8-506">O parâmetro <c>owner</c> do método <see cref="M:System.Windows.Forms.Form.ShowDialog" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-506">The <c>owner</c> parameter of the <see cref="M:System.Windows.Forms.Form.ShowDialog" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-507">Exibe um formulário chamando o método <see cref="M:System.Windows.Forms.Control.Show" /> ou <see cref="M:System.Windows.Forms.Form.ShowDialog" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-507">Displays a form by calling either the <see cref="M:System.Windows.Forms.Control.Show" /> or <see cref="M:System.Windows.Forms.Form.ShowDialog" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-508">No Visual Basic 6.0, o `Show` método especificado, se um formulário seria exibido modalmente; no Visual Basic, ele será substituído pelo <xref:System.Windows.Forms.Control.Show%2A> e <xref:System.Windows.Forms.Form.ShowDialog%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="002d8-508">In Visual Basic 6.0, the `Show` method specified whether a Form would be displayed modally; in Visual Basic it is replaced by the <xref:System.Windows.Forms.Control.Show%2A> and <xref:System.Windows.Forms.Form.ShowDialog%2A> methods.</span></span> <span data-ttu-id="002d8-509">Essa função é usada pelas ferramentas de atualização para mapear o Visual Basic 6.0 `Show` método como o <xref:System.Windows.Forms.Control.Show%2A> ou <xref:System.Windows.Forms.Form.ShowDialog%2A> método.</span><span class="sxs-lookup"><span data-stu-id="002d8-509">This function is used by the upgrade tools to map the Visual Basic 6.0 `Show` method to either the <xref:System.Windows.Forms.Control.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabLayout">
      <MemberSignature Language="C#" Value="public static string TabLayout (params object[] Args);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TabLayout(object[] Args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TabLayout (ParamArray Args As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TabLayout(... cli::array &lt;System::Object ^&gt; ^ Args);" />
      <MemberSignature Language="F#" Value="static member TabLayout : obj[] -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout Args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Args">
          <span data-ttu-id="002d8-510">Uma expressão ou uma lista de expressões a ser impressa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-510">An expression or list of expressions to print.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-511">Formata cadeias de caracteres para simular a funcionalidade <see langword="Debug.Print" /> do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-511">Formats strings to simulate the Visual Basic 6.0 <see langword="Debug.Print" /> functionality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-512">Um <see cref="T:System.String" /> formatado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-512">A formatted <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-513">No Visual Basic 6.0, o `Debug.Print` o método tem um `outputlist` parâmetro que é especificado como a saída era formatada na **imediato** janela.</span><span class="sxs-lookup"><span data-stu-id="002d8-513">In Visual Basic 6.0, the `Debug.Print` method had an `outputlist` parameter that specified how output was formatted in the **Immediate** window.</span></span> <span data-ttu-id="002d8-514">Essa função é usada pelas ferramentas de atualização para converter o `outputlist` parâmetro em uma cadeia de caracteres para exibição em de **imediato** janela.</span><span class="sxs-lookup"><span data-stu-id="002d8-514">This function is used by the upgrade tools to translate the `outputlist` parameter into a string for display in the **Immediate** window.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserHeight">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserHeight (double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserHeight(float64 Height, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserHeight (Height As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserHeight(double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="F#" Value="static member ToPixelsUserHeight : double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight (Height, ScaleHeight, OriginalHeightInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Height" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Height">
          <span data-ttu-id="002d8-515">Um <see cref="T:System.Double" /> que representa a altura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-515">A <see cref="T:System.Double" /> that represents the height.</span>
          </span>
        </param>
        <param name="ScaleHeight">
          <span data-ttu-id="002d8-516">Um <see cref="T:System.Double" /> que representa o Visual Basic 6.0 <see langword="ScaleHeight" /> para o <see langword="ScaleMode" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-516">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalHeightInPixels">
          <span data-ttu-id="002d8-517">Um <see langword="Integer" /> que representa a altura em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-517">An <see langword="Integer" /> that represents the height in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-518">Converte uma medida <see langword="ScaleHeight" /> do Visual Basic 6.0 em uma medida em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-518">Converts a Visual Basic 6.0 <see langword="ScaleHeight" /> measurement to a pixel measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-519">Um <see cref="T:System.Double" /> que contém o <see langword="ScaleHeight" /> do Visual Basic 6.0 convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-519">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleHeight" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-520">O Visual Basic 6.0 dava suporte a vários sistemas de coordenadas definidos por uma propriedade `ScaleMode`.</span><span class="sxs-lookup"><span data-stu-id="002d8-520">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="002d8-521">Isso incluía um valor definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-521">This included a user-defined value.</span></span> <span data-ttu-id="002d8-522">Visual Basic somente oferece suporte a um sistema de coordenadas que se baseia em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-522">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="002d8-523">Esta função é usada pelas ferramentas de atualização para converter entre pixels e um valor de escala definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-523">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserWidth">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserWidth (double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserWidth(float64 Width, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserWidth (Width As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserWidth(double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="F#" Value="static member ToPixelsUserWidth : double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth (Width, ScaleWidth, OriginalWidthInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Width" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Width">
          <span data-ttu-id="002d8-524">Um <see cref="T:System.Double" /> que representa a largura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-524">A <see cref="T:System.Double" /> that represents the width.</span>
          </span>
        </param>
        <param name="ScaleWidth">
          <span data-ttu-id="002d8-525">Um <see cref="T:System.Double" /> que representa o Visual Basic 6.0 <see langword="ScaleWidth" /> para o <see langword="ScaleMode" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-525">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalWidthInPixels">
          <span data-ttu-id="002d8-526">Um <see langword="Integer" /> que representa a largura em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-526">An <see langword="Integer" /> that represents the width in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-527">Converte uma medida <see langword="ScaleWidth" /> do Visual Basic 6.0 em uma medida em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-527">Converts a Visual Basic 6.0 <see langword="ScaleWidth" /> measurement to a pixel measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-528">Um <see cref="T:System.Double" /> que contém o <see langword="ScaleWidth" /> do Visual Basic 6.0 convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-528">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleWidth" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-529">O Visual Basic 6.0 dava suporte a vários sistemas de coordenadas definidos por uma propriedade `ScaleMode`.</span><span class="sxs-lookup"><span data-stu-id="002d8-529">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="002d8-530">Isso incluía um valor definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-530">This included a user-defined value.</span></span> <span data-ttu-id="002d8-531">Visual Basic somente oferece suporte a um sistema de coordenadas que se baseia em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-531">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="002d8-532">Esta função é usada pelas ferramentas de atualização para converter entre pixels e um valor de escala definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-532">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserX">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserX (double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserX(float64 X, float64 ScaleLeft, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserX (X As Double, ScaleLeft As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserX(double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="F#" Value="static member ToPixelsUserX : double * double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX (X, ScaleLeft, ScaleWidth, OriginalWidthInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ScaleLeft" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="002d8-533">Um <see cref="T:System.Double" /> que representa a coordenada X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-533">A <see cref="T:System.Double" /> that represents the X coordinate.</span>
          </span>
        </param>
        <param name="ScaleLeft">
          <span data-ttu-id="002d8-534">Um <see cref="T:System.Double" /> que representa o Visual Basic 6.0 <see langword="ScaleLeft" /> para o <see langword="ScaleMode" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-534">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleLeft" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="ScaleWidth">
          <span data-ttu-id="002d8-535">Um <see cref="T:System.Double" /> que representa o Visual Basic 6.0 <see langword="ScaleWidth" /> para o <see langword="ScaleMode" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-535">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalWidthInPixels">
          <span data-ttu-id="002d8-536">Um <see langword="Integer" /> que representa a largura em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-536">An <see langword="Integer" /> that represents the width in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-537">Converte uma medida <see langword="ScaleLeft" /> do Visual Basic 6.0 em uma medida em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-537">Converts a Visual Basic 6.0 <see langword="ScaleLeft" /> measurement to a pixel measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-538">Um <see cref="T:System.Double" /> que contém o <see langword="ScaleLeft" /> do Visual Basic 6.0 convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-538">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleLeft" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-539">O Visual Basic 6.0 dava suporte a vários sistemas de coordenadas definidos por uma propriedade `ScaleMode`.</span><span class="sxs-lookup"><span data-stu-id="002d8-539">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="002d8-540">Isso incluía um valor definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-540">This included a user-defined value.</span></span> <span data-ttu-id="002d8-541">Visual Basic somente oferece suporte a um sistema de coordenadas que se baseia em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-541">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="002d8-542">Esta função é usada pelas ferramentas de atualização para converter entre pixels e um valor de escala definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-542">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserY">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserY (double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserY(float64 Y, float64 ScaleTop, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserY (Y As Double, ScaleTop As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserY(double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="F#" Value="static member ToPixelsUserY : double * double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY (Y, ScaleTop, ScaleHeight, OriginalHeightInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ScaleTop" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="002d8-543">Um <see cref="T:System.Double" /> que representa a coordenada Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-543">A <see cref="T:System.Double" /> that represents the Y coordinate.</span>
          </span>
        </param>
        <param name="ScaleTop">
          <span data-ttu-id="002d8-544">Um <see cref="T:System.Double" /> que representa o Visual Basic 6.0 <see langword="ScaleTop" /> para o <see langword="ScaleMode" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-544">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleTop" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="ScaleHeight">
          <span data-ttu-id="002d8-545">Um <see cref="T:System.Double" /> que representa o Visual Basic 6.0 <see langword="ScaleHeight" /> para o <see langword="ScaleMode" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-545">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalHeightInPixels">
          <span data-ttu-id="002d8-546">Um <see langword="Integer" /> que representa a altura em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-546">An <see langword="Integer" /> that represents the height in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-547">Converte uma medida <see langword="ScaleTop" /> do Visual Basic 6.0 em uma medida em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-547">Converts a Visual Basic 6.0 <see langword="ScaleTop" /> measurement to a pixel measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-548">Um <see cref="T:System.Double" /> que contém o <see langword="ScaleLeft" /> do Visual Basic 6.0 convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-548">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleLeft" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-549">O Visual Basic 6.0 dava suporte a vários sistemas de coordenadas definidos por uma propriedade `ScaleMode`.</span><span class="sxs-lookup"><span data-stu-id="002d8-549">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="002d8-550">Isso incluía um valor definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-550">This included a user-defined value.</span></span> <span data-ttu-id="002d8-551">Visual Basic somente oferece suporte a um sistema de coordenadas que se baseia em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-551">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="002d8-552">Esta função é usada pelas ferramentas de atualização para converter entre pixels e um valor de escala definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-552">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsX">
      <MemberSignature Language="C#" Value="public static double ToPixelsX (double X, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsX(float64 X, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsX (X As Double, FromScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsX(double X, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode FromScale);" />
      <MemberSignature Language="F#" Value="static member ToPixelsX : double * Microsoft.VisualBasic.Compatibility.VB6.ScaleMode -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX (X, FromScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="FromScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="002d8-553">Um <see cref="T:System.Double" /> que representa a coordenada X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-553">A <see cref="T:System.Double" /> that represents the X coordinate.</span>
          </span>
        </param>
        <param name="FromScale">
          <span data-ttu-id="002d8-554">Uma enumeração <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> que representa o <see langword="ScaleMode" /> do Visual Basic 6.0 do qual converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-554">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-555">Converte uma medida do Visual Basic 6.0 em uma medida em pixels para um determinado <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-555">Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-556">Um <see cref="T:System.Double" /> que contém o valor de pixel para o <see langword="ScaleMode" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-556">A <see cref="T:System.Double" /> that contains the pixel value for the specified <see langword="ScaleMode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-557">O Visual Basic 6.0 dava suporte a vários sistemas de coordenadas definidos por uma propriedade `ScaleMode`.</span><span class="sxs-lookup"><span data-stu-id="002d8-557">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="002d8-558">Isso incluía um valor definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-558">This included a user-defined value.</span></span> <span data-ttu-id="002d8-559">Visual Basic somente oferece suporte a um sistema de coordenadas que se baseia em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-559">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="002d8-560">Esta função é usada pelas ferramentas de atualização para converter entre pixels e um valor de escala definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-560">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsY">
      <MemberSignature Language="C#" Value="public static double ToPixelsY (double Y, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsY(float64 Y, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsY (Y As Double, FromScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsY(double Y, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode FromScale);" />
      <MemberSignature Language="F#" Value="static member ToPixelsY : double * Microsoft.VisualBasic.Compatibility.VB6.ScaleMode -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY (Y, FromScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="FromScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="002d8-561">Um <see cref="T:System.Double" /> que representa a coordenada Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-561">A <see cref="T:System.Double" /> that represents the Y coordinate.</span>
          </span>
        </param>
        <param name="FromScale">
          <span data-ttu-id="002d8-562">Uma enumeração <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> que representa o <see langword="ScaleMode" /> do Visual Basic 6.0 do qual converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-562">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-563">Converte uma medida do Visual Basic 6.0 em uma medida em pixels para um determinado <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-563">Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-564">Um <see cref="T:System.Double" /> que contém o valor de pixel para o <see langword="ScaleMode" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-564">A <see cref="T:System.Double" /> that contains the pixel value for the specified <see langword="ScaleMode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-565">O Visual Basic 6.0 dava suporte a vários sistemas de coordenadas definidos por uma propriedade `ScaleMode`.</span><span class="sxs-lookup"><span data-stu-id="002d8-565">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="002d8-566">Isso incluía um valor definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-566">This included a user-defined value.</span></span> <span data-ttu-id="002d8-567">Visual Basic somente oferece suporte a um sistema de coordenadas que se baseia em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-567">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="002d8-568">Esta função é usada pelas ferramentas de atualização para converter entre pixels e um valor de escala definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="002d8-568">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsPerPixelX">
      <MemberSignature Language="C#" Value="public static float TwipsPerPixelX ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 TwipsPerPixelX() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsPerPixelX () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float TwipsPerPixelX();" />
      <MemberSignature Language="F#" Value="static member TwipsPerPixelX : unit -&gt; single" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="002d8-569">Obtém um valor que é usado para converter twips em pixels com base nas configurações de tela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-569">Gets a value that is used to convert twips to pixels based on screen settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-570">Um <see langword="Double" /> que contém o fator de conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-570">A <see langword="Double" /> that contains the conversion factor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-571">No Visual Basic 6.0, as coordenadas eram expressadas em twips; no Visual Basic, elas são expressas em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-571">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="002d8-572">Esta função é usada pelas ferramentas de atualização para converter entre os dois sistemas de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="002d8-572">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsPerPixelY">
      <MemberSignature Language="C#" Value="public static float TwipsPerPixelY ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 TwipsPerPixelY() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsPerPixelY () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float TwipsPerPixelY();" />
      <MemberSignature Language="F#" Value="static member TwipsPerPixelY : unit -&gt; single" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="002d8-573">Obtém um valor que é usado para converter twips em pixels com base nas configurações de tela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-573">Gets a value that is used to convert twips to pixels based on screen settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-574">Um <see langword="Double" /> que contém o fator de conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-574">A <see langword="Double" /> that contains the conversion factor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-575">No Visual Basic 6.0, as coordenadas eram expressadas em twips; no Visual Basic, elas são expressas em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-575">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="002d8-576">Esta função é usada pelas ferramentas de atualização para converter entre os dois sistemas de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="002d8-576">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsToPixelsX">
      <MemberSignature Language="C#" Value="public static double TwipsToPixelsX (double X);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 TwipsToPixelsX(float64 X) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsToPixelsX (X As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double TwipsToPixelsX(double X);" />
      <MemberSignature Language="F#" Value="static member TwipsToPixelsX : double -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX X" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="002d8-577">Um <see langword="Double" /> que contém a coordenada X a ser convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-577">A <see langword="Double" /> that contains the X coordinate to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-578">Converte uma coordenada X de twips em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-578">Converts an X coordinate from twips to pixels.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-579">Um <see langword="Double" /> que contém a coordenada X expressa em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-579">A <see langword="Double" /> that contains the X coordinate expressed in pixels.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-580">No Visual Basic 6.0, as coordenadas eram expressadas em twips; no Visual Basic, elas são expressas em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-580">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="002d8-581">Esta função é usada pelas ferramentas de atualização para converter entre os dois sistemas de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="002d8-581">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsToPixelsY">
      <MemberSignature Language="C#" Value="public static double TwipsToPixelsY (double Y);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 TwipsToPixelsY(float64 Y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsToPixelsY (Y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double TwipsToPixelsY(double Y);" />
      <MemberSignature Language="F#" Value="static member TwipsToPixelsY : double -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY Y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="002d8-582">Um <see langword="Double" /> que contém a coordenada X a ser convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-582">A <see langword="Double" /> that contains the X coordinate to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-583">Converte uma coordenada Y de twips em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-583">Converts a Y coordinate from twips to pixels.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="002d8-584">Um <see langword="Double" /> que contém a coordenada Y expressa em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-584">A <see langword="Double" /> that contains the Y coordinate expressed in pixels.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-585">No Visual Basic 6.0, as coordenadas eram expressadas em twips; no Visual Basic, elas são expressas em pixels.</span><span class="sxs-lookup"><span data-stu-id="002d8-585">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="002d8-586">Esta função é usada pelas ferramentas de atualização para converter entre os dois sistemas de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="002d8-586">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateControls">
      <MemberSignature Language="C#" Value="public static void ValidateControls (System.Windows.Forms.ContainerControl Form);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ValidateControls(class System.Windows.Forms.ContainerControl Form) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateControls (Form As ContainerControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateControls(System::Windows::Forms::ContainerControl ^ Form);" />
      <MemberSignature Language="F#" Value="static member ValidateControls : System.Windows.Forms.ContainerControl -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls Form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.ContainerControl" />
      </Parameters>
      <Docs>
        <param name="Form">
          <span data-ttu-id="002d8-587">O <see cref="T:System.Windows.Forms.ContainerControl" /> em que o controle tem um pai.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-587">The <see cref="T:System.Windows.Forms.ContainerControl" /> where the control is parented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-588">Emula o comportamento do método <see langword="ValidateControls" /> do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-588">Emulates the behavior of the Visual Basic 6.0 <see langword="ValidateControls" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-589">No Visual Basic 6.0, o `ValidateControls` método foi usado para forçar o `Validate` evento para o controle que tem o foco quando o formulário é fechado; se o `Validate` evento falha, um erro foi gerado.</span><span class="sxs-lookup"><span data-stu-id="002d8-589">In Visual Basic 6.0, the `ValidateControls` method was used to force the `Validate` event for the control that has focus when a form is closed; if the `Validate` event fails, an error was raised.</span></span> <span data-ttu-id="002d8-590">No Visual Basic, o `ValidateControls` método é substituído pelo <xref:System.Windows.Forms.ContainerControl.Validate%2A> método, que retorna `true` ou `false`.</span><span class="sxs-lookup"><span data-stu-id="002d8-590">In Visual Basic, the `ValidateControls` method is replaced by the <xref:System.Windows.Forms.ContainerControl.Validate%2A> method, which returns `true` or `false`.</span></span>  
  
 <span data-ttu-id="002d8-591">Essa função é usada pelas ferramentas de atualização para emular o comportamento do Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="002d8-591">This function is used by the upgrade tools to emulate the Visual Basic 6.0 behavior.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhatsThisMode">
      <MemberSignature Language="C#" Value="public static void WhatsThisMode (System.Windows.Forms.Form Form);" />
      <MemberSignature Language="ILAsm" Value=".method public static void WhatsThisMode(class System.Windows.Forms.Form Form) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WhatsThisMode(System::Windows::Forms::Form ^ Form);" />
      <MemberSignature Language="F#" Value="static member WhatsThisMode : System.Windows.Forms.Form -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode Form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="Form">
          <span data-ttu-id="002d8-592">Um <see cref="T:System.Windows.Forms.Form" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-592">A <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-593">Exibe a Ajuda pop-up para um formulário atualizado do Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-593">Displays pop-up Help for a form upgraded from Visual Basic 6.0.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-594">Ajuda pop-up no Visual Basic 6.0 foi implementada usando o `WhatsThisButton` e `WhatsThisHelp` propriedades de um formulário; pop-up de Ajuda no Visual Basic é implementado usando o <xref:System.Windows.Forms.Form.HelpButton%2A> propriedade de um formulário.</span><span class="sxs-lookup"><span data-stu-id="002d8-594">Pop-up Help in Visual Basic 6.0 was implemented by using the `WhatsThisButton` and `WhatsThisHelp` properties of a form; pop-up Help in Visual Basic is implemented by using the <xref:System.Windows.Forms.Form.HelpButton%2A> property of a form.</span></span> <span data-ttu-id="002d8-595">Essa função é usada pelas ferramentas de atualização para alterar o método de exibir ajuda pop-up em um aplicativo atualizado.</span><span class="sxs-lookup"><span data-stu-id="002d8-595">This function is used by the upgrade tools to change the method of displaying pop-up Help in an upgraded application.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public static void ZOrder (System.Windows.Forms.Control Control, int Position);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ZOrder(class System.Windows.Forms.Control Control, int32 Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZOrder(System::Windows::Forms::Control ^ Control, int Position);" />
      <MemberSignature Language="F#" Value="static member ZOrder : System.Windows.Forms.Control * int -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder (Control, Position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="002d8-596">Um <see cref="T:System.Windows.Forms.Control" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-596">A <see cref="T:System.Windows.Forms.Control" />.</span>
          </span>
        </param>
        <param name="Position">
          <span data-ttu-id="002d8-597">Uma enumeração <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-597">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="002d8-598">Converte o método <see langword="ZOrder" /> do Visual Basic para uso no Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002d8-598">Converts the Visual Basic <see langword="ZOrder" /> method for use in Visual Basic.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d8-599">No Visual Basic 6.0, o `ZOrder` método foi usado para especificar a disposição em camadas de controles; no Visual Basic, recomendamos que ele é substituído pelo <xref:System.Windows.Forms.Control.BringToFront%2A> e <xref:System.Windows.Forms.Control.SendToBack%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="002d8-599">In Visual Basic 6.0, the `ZOrder` method was used to specify the layering of controls; in Visual Basic .it is replaced by the <xref:System.Windows.Forms.Control.BringToFront%2A> and <xref:System.Windows.Forms.Control.SendToBack%2A> methods.</span></span> <span data-ttu-id="002d8-600">Essa função é usada pelas ferramentas de atualização para mapear entre os métodos.</span><span class="sxs-lookup"><span data-stu-id="002d8-600">This function is used by the upgrade tools to map between the methods.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>