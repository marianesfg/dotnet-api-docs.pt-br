<Type Name="IColumnsInfo" FullName="Microsoft.VisualBasic.Compatibility.VB6.IColumnsInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e15f45bada130b88ddc94cd6067f547b54f2e30" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36659866" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IColumnsInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IColumnsInfo" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.IColumnsInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface IColumnsInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class IColumnsInfo" />
  <TypeSignature Language="F#" Value="type IColumnsInfo = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0C733A11-2A1C-11CE-ADE5-00AA0044773D")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f4add-101">Fornece uma implementação da interface <see langword="IColumnInfo" /> do OLE DB a ser usada por aplicativos atualizados do Visual Basic 6.0.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f4add-101">Provides an implementation of the OLE DB <see langword="IColumnInfo" /> interface for use by applications upgraded from Visual Basic 6.0.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetColumnInfo">
      <MemberSignature Language="C#" Value="public void GetColumnInfo (out int cColumns, out IntPtr pColumnInfo, out IntPtr pStringsBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void GetColumnInfo([out] int32&amp; cColumns, [out] native int&amp; pColumnInfo, [out] native int&amp; pStringsBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IColumnsInfo.GetColumnInfo(System.Int32@,System.IntPtr@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetColumnInfo (ByRef cColumns As Integer, ByRef pColumnInfo As IntPtr, ByRef pStringsBuffer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetColumnInfo([Runtime::InteropServices::Out] int % cColumns, [Runtime::InteropServices::Out] IntPtr % pColumnInfo, [Runtime::InteropServices::Out] IntPtr % pStringsBuffer);" />
      <MemberSignature Language="F#" Value="abstract member GetColumnInfo :  *  *  -&gt; unit" Usage="iColumnsInfo.GetColumnInfo (cColumns, pColumnInfo, pStringsBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cColumns" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="pColumnInfo" Type="System.IntPtr&amp;" RefType="out" />
        <Parameter Name="pStringsBuffer" Type="System.IntPtr&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="cColumns">
          <span data-ttu-id="f4add-102">Um ponteiro para a memória no qual retornar o número de colunas no conjunto de linhas; esse número inclui a coluna de indicador, se houver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4add-102">A pointer to memory in which to return the number of columns in the rowset; this number includes the bookmark column, if there is one.</span>
          </span>
        </param>
        <param name="pColumnInfo">
          <span data-ttu-id="f4add-103">Um ponteiro para a memória, no qual retornar uma matriz de estruturas <see langword="DBCOLUMNINFO" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4add-103">A pointer to memory in which to return an array of <see langword="DBCOLUMNINFO" /> structures.</span>
          </span>
        </param>
        <param name="pStringsBuffer">
          <span data-ttu-id="f4add-104">Um ponteiro para a memória na qual retornar um ponteiro para o armazenamento para todos os valores de cadeia de caracteres (nomes usados em columnid ou para pwszName) dentro de um único bloco de alocação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4add-104">A pointer to memory in which to return a pointer to storage for all string values (names used either within columnid or for pwszName) within a single allocation block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4add-105">Retorna os metadados de coluna necessários para a maioria dos consumidores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4add-105">Returns the column metadata needed by most consumers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapColumnIDs">
      <MemberSignature Language="C#" Value="public void MapColumnIDs (int cColumnIDs, Microsoft.VisualBasic.Compatibility.VB6.DBID[] columnIDs, int[] rgColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void MapColumnIDs([in]int32 cColumnIDs, [in]valuetype Microsoft.VisualBasic.Compatibility.VB6.DBID[] columnIDs, [out] int32[] rgColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IColumnsInfo.MapColumnIDs(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBID[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub MapColumnIDs (cColumnIDs As Integer, columnIDs As DBID(), rgColumns As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MapColumnIDs(int cColumnIDs, cli::array &lt;Microsoft::VisualBasic::Compatibility::VB6::DBID&gt; ^ columnIDs, cli::array &lt;int&gt; ^ rgColumns);" />
      <MemberSignature Language="F#" Value="abstract member MapColumnIDs : int * Microsoft.VisualBasic.Compatibility.VB6.DBID[] * int[] -&gt; unit" Usage="iColumnsInfo.MapColumnIDs (cColumnIDs, columnIDs, rgColumns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cColumnIDs" Type="System.Int32" />
        <Parameter Name="columnIDs" Type="Microsoft.VisualBasic.Compatibility.VB6.DBID[]" />
        <Parameter Name="rgColumns" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="cColumnIDs">
          <span data-ttu-id="f4add-106">O número de IDs de coluna a mapear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4add-106">The number of column IDs to map.</span>
          </span>
        </param>
        <param name="columnIDs">
          <span data-ttu-id="f4add-107">Uma matriz de IDs das colunas para as quais determinar ordinais de coluna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4add-107">An array of IDs of the columns for which to determine the column ordinals.</span>
          </span>
        </param>
        <param name="rgColumns">
          <span data-ttu-id="f4add-108">Uma matriz de ordinais <c>cColumnIDs</c> das colunas identificadas pelos elementos de <c>columnIDs</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4add-108">An array of <c>cColumnIDs</c> ordinals of the columns identified by the elements of <c>columnIDs</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4add-109">Retorna uma matriz de ordinais das colunas em um conjunto de linhas que são identificados pelas IDs de coluna especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4add-109">Returns an array of ordinals of the columns in a rowset that are identified by the specified column IDs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>