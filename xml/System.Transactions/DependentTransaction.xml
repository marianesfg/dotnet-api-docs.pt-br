<Type Name="DependentTransaction" FullName="System.Transactions.DependentTransaction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4166ba671801fa4151f470ff0f011cba3bbc0f8d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DependentTransaction : System.Transactions.Transaction, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DependentTransaction extends System.Transactions.Transaction implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.DependentTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependentTransaction&#xA;Inherits Transaction&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependentTransaction sealed : System::Transactions::Transaction, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Transactions.Transaction</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="90e73-101">Descreve um clone de uma transação que assegura que a transação não pode ser confirmada até o aplicativo atingir o estado de repouso com relação ao trabalho na transação.</span>
      <span class="sxs-lookup">
        <span data-stu-id="90e73-101">Describes a clone of a transaction providing guarantee that the transaction cannot be committed until the application comes to rest regarding work on the transaction.</span>
      </span>
      <span data-ttu-id="90e73-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="90e73-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90e73-103">O <xref:System.Transactions.DependentTransaction> é um clone de um <xref:System.Transactions.Transaction> objeto criado usando o <xref:System.Transactions.Transaction.DependentClone%2A> método.</span><span class="sxs-lookup"><span data-stu-id="90e73-103">The <xref:System.Transactions.DependentTransaction> is a clone of a <xref:System.Transactions.Transaction> object created using the <xref:System.Transactions.Transaction.DependentClone%2A> method.</span></span>  <span data-ttu-id="90e73-104">Sua única finalidade é permitir que o aplicativo fique rest e garantir que a transação não pode ser confirmada enquanto o trabalho ainda está sendo executado na transação (por exemplo, em um thread de trabalho).</span><span class="sxs-lookup"><span data-stu-id="90e73-104">Its sole purpose is to allow the application to come to rest and guarantee that the transaction cannot commit while work is still being performed on the transaction (for example, on a worker thread).</span></span>  
  
 <span data-ttu-id="90e73-105">Quando o trabalho feito na transação clonada finalmente é concluído e pronto para ser confirmada, ele pode informar o criador da transação usando o <xref:System.Transactions.DependentTransaction.Complete%2A> método.</span><span class="sxs-lookup"><span data-stu-id="90e73-105">When the work done within the cloned transaction is finally complete and ready to be committed, it can inform the creator of the transaction using the <xref:System.Transactions.DependentTransaction.Complete%2A> method.</span></span> <span data-ttu-id="90e73-106">Portanto, você pode preservar a consistência e a exatidão dos dados.</span><span class="sxs-lookup"><span data-stu-id="90e73-106">Thus you can preserve the consistency and correctness of data.</span></span>  
  
 <span data-ttu-id="90e73-107">O <xref:System.Transactions.DependentCloneOption> enumeração é usada para determinar o comportamento de confirmação.</span><span class="sxs-lookup"><span data-stu-id="90e73-107">The <xref:System.Transactions.DependentCloneOption> enumeration is used to determine the behavior on commit.</span></span>  <span data-ttu-id="90e73-108">Este controle do comportamento permite que um aplicativo parar, bem como fornece suporte à simultaneidade.</span><span class="sxs-lookup"><span data-stu-id="90e73-108">This behavior control allows an application to come to rest, as well as provides concurrency support.</span></span> <span data-ttu-id="90e73-109">Para obter mais informações sobre como essa enumeração é usada, consulte [gerenciamento de simultaneidade com DependentTransaction](http://msdn.microsoft.com/library/bdad8468-2a90-4b81-8375-278067120cab).</span><span class="sxs-lookup"><span data-stu-id="90e73-109">For more information on how this enumeration is used, see [Managing Concurrency with DependentTransaction](http://msdn.microsoft.com/library/bdad8468-2a90-4b81-8375-278067120cab).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90e73-110">O exemplo a seguir mostra como criar uma transação dependente.</span><span class="sxs-lookup"><span data-stu-id="90e73-110">The following example shows you how to create a dependent transaction.</span></span>  
  
 [!code-csharp[Tx_DependentTx#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_dependenttx/cs/dependenttx.cs#1)]
 [!code-vb[Tx_DependentTx#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_dependenttx/vb/dependenttx.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="90e73-111">Este tipo é thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="90e73-111">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.DependentTransaction.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90e73-112">Tenta concluir a transação dependente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e73-112">Attempts to complete the dependent transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90e73-113">Chame este método quando quiser que o clone dependente informar o criador da transação que concluiu seu trabalho e a transação pode ser confirmada se o pai também está pronto.</span><span class="sxs-lookup"><span data-stu-id="90e73-113">Call this method when the dependent clone wants to inform the creator of the transaction that it has finished its work, and the transaction can be committed if the parent is also ready.</span></span>  
  
 <span data-ttu-id="90e73-114">Depois que essa chamada é invocada, não tente qualquer trabalho adicional na transação, ou uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="90e73-114">After this call is invoked, you should not attempt any additional work on the transaction, or an exception is thrown.</span></span>  
  
 <span data-ttu-id="90e73-115">Se o domínio do aplicativo falhar depois que este método é chamado e antes que a transação seja concluída, a transação pode anular.</span><span class="sxs-lookup"><span data-stu-id="90e73-115">If the application domain goes down after this method is called, and before the transaction is completed, the transaction might abort.</span></span>  
  
 <span data-ttu-id="90e73-116">**Observação** esse método deve ser chamado apenas uma vez durante o tempo de vida da transação dependente.</span><span class="sxs-lookup"><span data-stu-id="90e73-116">**Note** This method should be called only once during the dependent transaction's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionException">
          <span data-ttu-id="90e73-117">Qualquer tentativa de trabalho adicional na transação depois que este método é chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e73-117">Any attempt for additional work on the transaction after this method is called.</span>
          </span>
          <span data-ttu-id="90e73-118">Isso inclui invocar métodos como <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />, <see cref="Overload:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /> ou todas as operações de serialização na transação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e73-118">These include invoking methods such as <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />, <see cref="Overload:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /> , or any serialization operations on the transaction.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.DependentTransaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>