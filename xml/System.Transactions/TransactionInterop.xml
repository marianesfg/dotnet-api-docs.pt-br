<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TransactionInterop.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca456091686227af2683531393d8d946952f302754920.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">091686227af2683531393d8d946952f302754920</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Transactions.TransactionInterop">
          <source>Facilitates interaction between <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph> and components that were previously written to interact with MSDTC, COM+, or <ph id="ph2">&lt;see cref="N:System.EnterpriseServices" /&gt;</ph>.</source>
          <target state="translated">Facilita a interação entre <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph> e componentes anteriormente escritos para interagir com o MSDTC, COM+ ou <ph id="ph2">&lt;see cref="N:System.EnterpriseServices" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Transactions.TransactionInterop">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>This class provides methods for transaction propagation.</source>
          <target state="translated">Essa classe fornece métodos de propagação de transações.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>For more information on how this process works, see <bpt id="p1">[</bpt>Transaction Propagation<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como esse processo funciona, consulte <bpt id="p1">[</bpt>propagação de transação<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Using the methods provided by this class, you can engage in two types of transaction propagations, Export/Import (push model) and Transmitter/Receiver (pull model).</source>
          <target state="translated">Usando os métodos fornecidos por essa classe, você pode participar de dois tipos de propagação de transações, importação e exportação (modelo de push) e transmissor/receptor (modelo de pull).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>The Export/Import (push model) propagation involves these steps,</source>
          <target state="translated">A propagação de importação/exportação (modelo de push) envolve estas etapas</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the remote machine, obtain the "whereabouts" of the transaction manager of that machine by calling the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetWhereabouts%2A&gt;</ph> method.</source>
          <target state="translated">No computador remoto, obter o "locais" do Gerenciador de transações da máquina ao chamar o <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetWhereabouts%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>You can then cache this piece of information on the client machine for future usage.</source>
          <target state="translated">Em seguida, você pode armazenar essa informação no computador cliente para uso futuro.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Send the data containing the whereabouts to the client machine using any preferred method</source>
          <target state="translated">Enviar os dados que contém os locais para o computador cliente usando qualquer método preferencial</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the client machine, use the whereabouts to "export" the transaction to the remote machine and generate a transaction "cookie".</source>
          <target state="translated">No computador cliente, use os locais para "Exportar" a transação para a máquina remota e gerar uma transação de "cookies".</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>This is done by calling <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> and passing in the remote machine's whereabouts.</source>
          <target state="translated">Isso é feito chamando <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> e passar na localização do computador remoto.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Send the data containing the transaction "cookie" to the remote machine using any preferred method</source>
          <target state="translated">Enviar os dados que contém a transação "cookie" para o computador remoto usando qualquer método preferencial</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the remote machine, use the transaction "cookie" to obtain a clone of the client transaction by calling the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A&gt;</ph> method.</source>
          <target state="translated">No computador remoto, use a transação "cookie" para obter um clone da transação de cliente ao chamar o <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the remote machine, use the clone transaction to enlist the resource manager using the <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Transactions.Transaction&gt;</ph> class.</source>
          <target state="translated">No computador remoto, use a transação de clone para inscrever-se o Gerenciador de recursos usando o <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph> métodos de <ph id="ph3">&lt;xref:System.Transactions.Transaction&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>The Transmitter/Receiver (pull model) propagation involves these steps,</source>
          <target state="translated">A propagação do transmissor/receptor (modelo de pull) envolve estas etapas</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the client machine, using the transaction generates a corresponding "propagation token" by calling <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph></source>
          <target state="translated">No computador cliente, usando a transação gera um correspondente "token de propagação" chamando <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Send the data containing the "propagation token" of the transaction to the remote machine using any preferred method</source>
          <target state="translated">Enviar os dados que contém o "token de propagação" da transação para o computador remoto usando qualquer método preferencial</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the remote machine, use the "propagation token" to obtain a clone of the client transaction by calling <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph></source>
          <target state="translated">No computador remoto, use o token de propagação"" para obter um clone da transação do cliente por meio da chamada <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>The Transmitter/Receiver model provides better performance in scenarios where the transaction token is sent to a remote machine, but the remote machine may not use it to obtain the transaction.</source>
          <target state="translated">O modelo de transmissor/receptor fornece melhor desempenho em cenários onde o token de transação é enviado para um computador remoto, mas o computador remoto não pode usá-lo para obter a transação.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>This is because the transaction is not propagated until <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph> is called.</source>
          <target state="translated">Isso ocorre porque a transação não é propagada até <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Another advantage is that the propagation token can be sent to any remote machine, while the export cookie can be used only on the machine that provided the whereabouts.</source>
          <target state="translated">Outra vantagem é que o token de propagação pode ser enviado para qualquer computador remoto, enquanto o cookie de exportação pode ser usado somente no computador que forneceu os locais.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>However, you should also note that the whereabouts of remote transaction managers are encapsulated in all the propagation tokens, making them bigger than the corresponding transaction cookies from the Export/Import model.</source>
          <target state="translated">No entanto, você também deve observar que os locais de gerenciadores de transações remoto são encapsulados em todos os tokens de propagação, tornando-os maiores do que os cookies de transação correspondente do modelo de importação/exportação.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This type uses <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the <ph id="ph2">`FullTrust`</ph> permission set.</source>
          <target state="translated"><bpt id="p1">**</bpt>Observação<ept id="p1">**</ept> esse tipo usa <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> impedir que ele está sendo chamado de código não confiável; no entanto, apenas o chamador imediato é necessário ter o <ph id="ph2">`FullTrust`</ph> conjunto de permissões.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance to be marshaled.</source>
          <target state="translated">Uma instância <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> em que será realizado marshaling.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> instance that represents a <ph id="ph2">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>.</source>
          <target state="translated">Obtém uma instância <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> que representa um <ph id="ph2">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> instance that represents a <ph id="ph2">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>.</source>
          <target state="translated">Uma instância <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> que representa um <ph id="ph2">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> instance is compatible with the unmanaged form of <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> used by MSDTC and with the Managed form of <ph id="ph2">&lt;see cref="T:System.EnterpriseServices.ITransaction" /&gt;</ph> used by <ph id="ph3">&lt;see cref="N:System.EnterpriseServices" /&gt;</ph>.</source>
          <target state="translated">A instância <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> é compatível com o formulário não gerenciado de <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> usado pelo MSDTC e com o formulário gerenciado do <ph id="ph2">&lt;see cref="T:System.EnterpriseServices.ITransaction" /&gt;</ph> usado pelo <ph id="ph3">&lt;see cref="N:System.EnterpriseServices" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> object to be marshaled.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> que terá marshal realizado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>Transforms a transaction object into an export transaction cookie.</source>
          <target state="translated">Transforma um objeto de transação em um cookie de transação de exportação.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>An export transaction cookie representing the specified <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> object.</source>
          <target state="translated">Um cookie de transação de exportação representando o objeto <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>Call this method if you want to export a transaction.</source>
          <target state="translated">Chame este método se você quiser exportar uma transação.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>The <ph id="ph1">`transaction`</ph> that is passed along is marshaled into a transaction cookie.</source>
          <target state="translated">O <ph id="ph1">`transaction`</ph> que é passado junto é empacotado em um cookie de transação.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>You can then send the transaction cookie to the destination process.</source>
          <target state="translated">Em seguida, você pode enviar o cookie de transação para o processo de destino.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>This is referred to as propagating the transaction between processes or systems.</source>
          <target state="translated">Isso é chamado como propagar a transação entre processos ou sistemas.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>The propagation is considered to be a push model where the local transaction is pushed to the destination.</source>
          <target state="translated">A propagação é considerada um modelo de push onde a transação local é enviada por push para o destino.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>Therefore, information contained in <ph id="ph1">`whereabouts`</ph> must describe the destination transaction manager.</source>
          <target state="translated">Portanto, as informações contidas em <ph id="ph1">`whereabouts`</ph> deve descrever o Gerenciador de transações de destino.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
          <target state="translated">Para obter mais informações sobre modelos de propagação diferentes, consulte a seção Comentários da classe <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
          <source>Generates a <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> from a specified <ph id="ph2">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph>.</source>
          <target state="translated">Gera um <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance that represents the given <ph id="ph2">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph>.</source>
          <target state="translated">Uma instância <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> que representa o <ph id="ph2">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> determinado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
          <source>The <ph id="ph1">`transactionNative`</ph> is compatible with the unmanaged form of <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> used by MSDTC and with the Managed form of <ph id="ph2">&lt;xref:System.EnterpriseServices.ITransaction&gt;</ph> used by <ph id="ph3">&lt;xref:System.EnterpriseServices&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">`transactionNative`</ph> é compatível com o formulário não gerenciado de <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> usado pelo MSDTC e com a forma do gerenciado de <ph id="ph2">&lt;xref:System.EnterpriseServices.ITransaction&gt;</ph> usado pelo <ph id="ph3">&lt;xref:System.EnterpriseServices&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
          <source>Generates a <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> from the specified an export cookie.</source>
          <target state="translated">Gera um <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> do especificado em um cookie de exportação.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> from the specified export cookie.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> do especificado em um cookie de exportação.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
          <target state="translated">Para obter mais informações sobre modelos de propagação diferentes, consulte a seção Comentários da classe <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>Generates a <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance from the specified transmitter propagation token.</source>
          <target state="translated">Gera uma instância <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> do token de propagação do transmissor especificado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> from the specified transmitter propagation token.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> do token de propagação do transmissor especificado.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>This method, together with the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph> method, provide functionality for "pull" propagation, in which the transaction is "pulled" from the remote machine when this method is called to unmarshal the transaction.</source>
          <target state="translated">Esse método, junto com o <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph> método, fornece a funcionalidade de propagação de "pull", em que a transação "retirada" do computador remoto quando este método é chamado para descompactar a transação.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
          <target state="translated">Para obter mais informações sobre modelos de propagação diferentes, consulte a seção Comentários da classe <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>The deserialization of a transaction fails because the transaction manager cannot be contacted.</source>
          <target state="translated">A desserialização de uma transação falha porque o gerenciador de transação não pode ser contatado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>This may be caused by network firewall or security settings.</source>
          <target state="translated">Isso pode ser causado por configurações de firewall ou de segurança de rede.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
          <source>A transaction to be marshaled into a propagation token.</source>
          <target state="translated">Uma transação na qual deverá ser realizado marshal em um token de propagação.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
          <source>Generates a propagation token for the specified <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>.</source>
          <target state="translated">Gera um token de propagação para o <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
          <source>This method, together with the <ph id="ph1">&lt;see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" /&gt;</ph> method, provide functionality for Transmitter/Receiver propagation, in which the transaction is "pulled" from the remote machine when the latter is called to unmarshal the transaction.</source>
          <target state="translated">Esse método, junto com o método <ph id="ph1">&lt;see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" /&gt;</ph>, fornece a funcionalidade de propagação do transmissor/receptor, em que a transação é "puxada" do computador remoto quando o último é chamado para desfazer marshal da transação.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
          <source>For more information on different propagation models, see <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionInterop" /&gt;</ph> class.</source>
          <target state="translated">Para obter mais informações sobre modelos de propagação diferentes, consulte a classe <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionInterop" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>Gets the Whereabouts of the distributed transaction manager that <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph> uses.</source>
          <target state="translated">Obtém a localização do gerenciador de transação distribuída usado por <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>The Whereabouts of the distributed transaction manager that <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph> uses.</source>
          <target state="translated">A localização do gerenciador de transação distribuída usado por <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>The Whereabouts contains an address that describes the location of a transaction manager.</source>
          <target state="translated">A localização contém um endereço que descreve o local de um Gerenciador de transações.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.</source>
          <target state="translated">Isso permite que dois gerenciadores de transações se comuniquem entre si e, portanto, propaguem uma transação de um sistema para outro.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>The information returned by this method can be used to provide location information for push model transaction propagation with the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> method.</source>
          <target state="translated">As informações retornadas por esse método podem ser usadas para fornecer informações de local para a propagação de transação de modelo de push com o <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
          <target state="translated">Para obter mais informações sobre modelos de propagação diferentes, consulte a seção Comentários da classe <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="F:System.Transactions.TransactionInterop.PromoterTypeDtc">
          <source>The type of the distributed transaction processor.</source>
          <target state="translated">O tipo do processador de transação distribuída.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Transactions.TransactionInterop.PromoterTypeDtc">
          <source>This value is used for the <ph id="ph1">`Transaction.PromoterType`</ph> property if the transaction is or will be promoted to MSDTC and the <ph id="ph2">`Transaction.GetPromotedToken`</ph> method will return an MSDTC transaction propagation token for the <ph id="ph3">`byte[]`</ph> result.</source>
          <target state="translated">Esse valor é usado para o <ph id="ph1">`Transaction.PromoterType`</ph> propriedade se a transação está ou será promovida para MSDTC e o <ph id="ph2">`Transaction.GetPromotedToken`</ph> método retornará um token de propagação de transações do MSDTC para o <ph id="ph3">`byte[]`</ph> resultados.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>