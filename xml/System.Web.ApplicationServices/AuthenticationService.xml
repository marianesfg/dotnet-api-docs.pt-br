<Type Name="AuthenticationService" FullName="System.Web.ApplicationServices.AuthenticationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f18ce5bb58dab61ba299eaf2eaa3d0a0c356a14e" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53502745" /></Metadata><TypeSignature Language="C#" Value="public class AuthenticationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.AuthenticationService" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationService" />
  <TypeSignature Language="F#" Value="type AuthenticationService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite o acesso a autenticação de formulários do ASP.NET como um serviço Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.ApplicationServices.AuthenticationService> objeto permite que você autentique usuários por meio de um serviço do Windows Communication Foundation (WCF). Quando você deve autenticar os usuários por meio da associação do ASP.NET de um aplicativo que esteja fora do aplicativo Web que armazena as credenciais do usuário, você usar o serviço de autenticação do WCF. O aplicativo deve ser capaz de enviar e receber a mensagem no formato SOAP. Por meio de <xref:System.Web.ApplicationServices.AuthenticationService> classe, você pode fazer os usuários logon, usuários de log de k-out, validam as credenciais, verifique o status de autenticação, personalizar autenticação e definir o cookie de autenticação.  
  
 O <xref:System.Web.ApplicationServices.AuthenticationService> classe contém quatro métodos que você deve acessar somente por meio de um serviço WCF: o <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, e <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> métodos. Para chamar esses métodos, você pode habilitar o serviço de autenticação em um servidor Web e, em seguida, conecte-se um aplicativo de cliente compatível com o WCF para o serviço Web. Para obter informações sobre como configurar o serviço de autenticação, consulte [como: Habilitar o serviço de autenticação do WCF](https://msdn.microsoft.com/library/f7913259-762e-4a73-a771-ac9e42903f44).  
  
 Para conectar usuários, você passa as credenciais do usuário para o <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> método. Se as credenciais forem válidas, a <xref:System.Web.ApplicationServices.AuthenticationService> classe cria um cookie de autenticação. Se o cookie de autenticação não tiver expirado, você sabe que as credenciais do usuário tiverem sido autenticadas e não é necessário que validar as credenciais novamente. (Autenticação sem cookies não está disponível por meio de <xref:System.Web.ApplicationServices.AuthenticationService> classe.)  
  
 O <xref:System.Web.ApplicationServices.AuthenticationService> pode gerar dois eventos: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> e <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>. O <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> evento ocorre quando as credenciais do usuário estão sendo validadas. Crie um manipulador de eventos para o <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> evento para personalizar como as credenciais do usuário são validadas. O <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> evento ocorre quando o cookie de autenticação está sendo definido depois que as credenciais do usuário foram validadas. Crie um manipulador de eventos para o <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> evento para personalizar o cookie de autenticação.  
  
 O <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> método verifica se as credenciais do usuário para autenticação, mas não retorna um tíquete de autenticação. Use <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> quando um usuário fez logon anteriormente e você deve verificar se as credenciais ainda são válidas no início de uma nova sessão do aplicativo.  
  
 Para obter um exemplo de como usar o serviço de autenticação do WCF de um aplicativo de console, consulte [passo a passo: Usando serviços de aplicativos ASP.NET](https://msdn.microsoft.com/library/f3f394f0-20d6-4361-aa8f-4b21bf4933eb).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Visão geral do serviço de autenticação do Windows Communication Foundation</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthenticationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.ApplicationServices.AuthenticationService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticating">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Authenticating As EventHandler(Of AuthenticatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::AuthenticatingEventArgs ^&gt; ^ Authenticating;" />
      <MemberSignature Language="F#" Value="member this.Authenticating : EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " Usage="member this.Authenticating : System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando as credenciais do usuário estão sendo validadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> evento é gerado quando as credenciais do usuário estão sendo validadas. Crie um manipulador de eventos para o <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> evento para personalizar como as credenciais do usuário são validadas.  
  
   
  
## Examples  
 O exemplo a seguir mostra como associar um manipulador de eventos para o <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> evento no `Application_Start` método do arquivo global. asax.  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#1)]  
  
 O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> evento no arquivo global. asax. O manipulador de eventos lê dois valores de autenticação do <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> propriedade e passa-os junto com o nome de usuário e senha para uma classe de autenticação personalizada denominados `StudentAuthentication`.  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.AuthenticatingEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Visão geral do serviço de autenticação do Windows Communication Foundation</related>
      </Docs>
    </Member>
    <Member MemberName="CreatingCookie">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CreatingCookie As EventHandler(Of CreatingCookieEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::CreatingCookieEventArgs ^&gt; ^ CreatingCookie;" />
      <MemberSignature Language="F#" Value="member this.CreatingCookie : EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " Usage="member this.CreatingCookie : System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o cookie de autenticação está sendo definido.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> evento é gerado quando o cookie de autenticação está sendo definido depois que as credenciais do usuário foram validadas. Crie um manipulador de eventos para o <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> evento para personalizar o cookie de autenticação.  
  
   
  
## Examples  
 O exemplo a seguir mostra como associar um manipulador de eventos para o <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> evento no `Application_Start` método do arquivo global. asax.  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#1)]  
  
 O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> evento no arquivo global. asax. O manipulador de eventos personaliza o cookie de autenticação, adicionando o valor na <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> propriedade para o <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> propriedade. Store o <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> propriedade em um cookie somente se você souber que os dados na propriedade não não confidencias. Usuários mal-intencionados podem acessar os valores no cookie.  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.CreatingCookieEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Visão geral do serviço de autenticação do Windows Communication Foundation</related>
      </Docs>
    </Member>
    <Member MemberName="IsLoggedIn">
      <MemberSignature Language="C#" Value="public bool IsLoggedIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsLoggedIn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLoggedIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLoggedIn();" />
      <MemberSignature Language="F#" Value="member this.IsLoggedIn : unit -&gt; bool" Usage="authenticationService.IsLoggedIn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se o usuário atual é autenticado.</summary>
        <returns><see langword="true" /> se o usuário foi autenticado; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> método verifica se o usuário atual é autenticado, marcando o <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>. Property.  
  
> [!NOTE]
>  Não chame o <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> método do código que está em execução no servidor Web. Você chama o <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> método somente como parte de um serviço WCF.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Visão geral do serviço de autenticação do Windows Communication Foundation</related>
      </Docs>
    </Member>
    <Member MemberName="Login">
      <MemberSignature Language="C#" Value="public bool Login (string username, string password, string customCredential, bool isPersistent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Login(string username, string password, string customCredential, bool isPersistent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Login (username As String, password As String, customCredential As String, isPersistent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Login(System::String ^ username, System::String ^ password, System::String ^ customCredential, bool isPersistent);" />
      <MemberSignature Language="F#" Value="member this.Login : string * string * string * bool -&gt; bool" Usage="authenticationService.Login (username, password, customCredential, isPersistent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">O nome de usuário a ser validado.</param>
        <param name="password">A senha do usuário especificado.</param>
        <param name="customCredential">O valor ou valores para validar além de <paramref name="username" /> e <paramref name="password" />, se houver.</param>
        <param name="isPersistent">Um valor que indica se o tíquete de autenticação permanece válido entre diferentes sessões.</param>
        <summary>Verifica as credenciais de usuário e cria um tíquete de autenticação (cookie) se as credenciais são válidas.</summary>
        <returns><see langword="true" /> se as credenciais do usuário forem válidas; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> método valida as credenciais de usuário por meio de um provedor de associação. Você pode usar o provedor de associação padrão ou especificar um provedor de associação personalizado em tempo de execução. O <xref:System.Web.ApplicationServices.AuthenticationService> classe passes `userName` e `password` para o provedor de associação <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> método, mas não passa `customCredential`. Se <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> retorna `true`, <xref:System.Web.ApplicationServices.AuthenticationService> cria um tíquete de autenticação como um cookie. Defina as `isPersistent` parâmetro para `true` para criar um tíquete de autenticação que dura além da sessão atual.  
  
> [!NOTE]
>  Sempre use o serviço de autenticação junto com o protocolo SSL (SSL, usando HTTPS) para proteger dados confidenciais.  
  
 O <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> método gera a <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> evento e o <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> eventos. Criar um manipulador de eventos <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> para personalizar a autenticação, como verificar os valores `customCredential` ou validar as credenciais por meio de um provedor de associação não-padrão. Os valores em `customCredential` não são validados pelo provedor de associação padrão. Para personalizar o cookie de autenticação, crie um manipulador de eventos <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.  
  
> [!NOTE]
>  Não chame o <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> método do código que está em execução no servidor Web. Você chama o <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> método somente como parte de um serviço WCF. Para obter mais informações, consulte [autenticação do ASP.NET](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userName" /> ou <paramref name="password" /> é <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Visão geral do serviço de autenticação do Windows Communication Foundation</related>
      </Docs>
    </Member>
    <Member MemberName="Logout">
      <MemberSignature Language="C#" Value="public void Logout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Logout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Logout" />
      <MemberSignature Language="VB.NET" Value="Public Sub Logout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Logout();" />
      <MemberSignature Language="F#" Value="member this.Logout : unit -&gt; unit" Usage="authenticationService.Logout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Limpa o tíquete de autenticação (cookie) no navegador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> método limpa o cookie de autenticação da coleção de cookies do navegador. O usuário deve fazer logon novamente para ser autenticado.  
  
 O <xref:System.Web.ApplicationServices.AuthenticationService> não armazena informações no servidor sobre qual autenticação tíquetes foram limpos.  
  
> [!NOTE]
>  Não chame o <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> método do código que está em execução no servidor Web. Você chama o <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> método somente como parte de um serviço WCF. Para obter mais informações, consulte [autenticação do ASP.NET](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Security.FormsAuthentication.SignOut" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Visão geral do serviço de autenticação do Windows Communication Foundation</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public bool ValidateUser (string username, string password, string customCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateUser(string username, string password, string customCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateUser (username As String, password As String, customCredential As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateUser(System::String ^ username, System::String ^ password, System::String ^ customCredential);" />
      <MemberSignature Language="F#" Value="member this.ValidateUser : string * string * string -&gt; bool" Usage="authenticationService.ValidateUser (username, password, customCredential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">O nome de usuário a ser validado.</param>
        <param name="password">A senha do usuário especificado.</param>
        <param name="customCredential">O valor ou os valores a serem validados além de <paramref name="username" /> e <paramref name="password" />, se houver.</param>
        <summary>Autentica as credenciais do usuário sem emitir um tíquete de autenticação.</summary>
        <returns><see langword="true" /> se as credenciais do usuário forem válidas; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> método autentica as credenciais do usuário, mas não define um cookie de autenticação. Sem um cookie de autenticação, o usuário serão não registrado mesmo se as credenciais são válidas.  
  
 Use o <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> método quando você deve verificar se as credenciais do usuário são válidas sem receber um cookie de autenticação. Por exemplo, você pode fazer isso se o cookie de autenticação já esteja armazenado em um aplicativo cliente, mas você deseja verificar se as credenciais do usuário ainda são válidas quando uma nova sessão é iniciada.  
  
 O <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> método gera a <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> evento, mas não gerará o <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> eventos.  
  
> [!NOTE]
>  Não chame o <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> método do código que está em execução no servidor Web. Você chama o <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> método somente como parte de um serviço WCF. Para obter mais informações, consulte [autenticação do ASP.NET](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userName" /> ou <paramref name="password" /> é <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Visão geral do serviço de autenticação do Windows Communication Foundation</related>
      </Docs>
    </Member>
  </Members>
</Type>