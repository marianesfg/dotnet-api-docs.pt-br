<Type Name="Try" FullName="Microsoft.JScript.Try">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc9bc5c24670aaed293473128d8cfeb646362f68" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36729907" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Try : Microsoft.JScript.AST" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Try extends Microsoft.JScript.AST" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.Try" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Try&#xA;Inherits AST" />
  <TypeSignature Language="C++ CLI" Value="public ref class Try sealed : Microsoft::JScript::AST" />
  <TypeSignature Language="F#" Value="type Try = class&#xA;    inherit AST" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.AST</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="80a19-101">Identifica os blocos de código para executar em escopos de tratamento de erro.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80a19-101">Identifies blocks of code to run in error handling scopes.</span>
      </span>
      <span data-ttu-id="80a19-102">Essa classe pertence à categoria de árvore de sintaxe abstrata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80a19-102">This class belongs to the abstract syntax tree category.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="JScriptExceptionValue">
      <MemberSignature Language="C#" Value="public static object JScriptExceptionValue (object e, Microsoft.JScript.Vsa.VsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object JScriptExceptionValue(object e, class Microsoft.JScript.Vsa.VsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Try.JScriptExceptionValue(System.Object,Microsoft.JScript.Vsa.VsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function JScriptExceptionValue (e As Object, engine As VsaEngine) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ JScriptExceptionValue(System::Object ^ e, Microsoft::JScript::Vsa::VsaEngine ^ engine);" />
      <MemberSignature Language="F#" Value="static member JScriptExceptionValue : obj * Microsoft.JScript.Vsa.VsaEngine -&gt; obj" Usage="Microsoft.JScript.Try.JScriptExceptionValue (e, engine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Object" />
        <Parameter Name="engine" Type="Microsoft.JScript.Vsa.VsaEngine" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="80a19-103">O objeto que representa a exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a19-103">The object that represents the exception.</span>
          </span>
        </param>
        <param name="engine">
          <span data-ttu-id="80a19-104">Uma referência ao mecanismo de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a19-104">A reference to the scripting engine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80a19-105">Retorna o objeto especificado como uma exceção, convertendo-o para um determinado <see cref="T:Microsoft.JScript.JScriptException" /> se possível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a19-105">Returns the specified object as an exception, converting it to a specific <see cref="T:Microsoft.JScript.JScriptException" /> if it can.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80a19-106">A exceção <paramref name="e" />, convertida em um <see cref="T:Microsoft.JScript.JScriptException" /> determinado, se isso for possível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a19-106">The exception <paramref name="e" />, converted to a specific <see cref="T:Microsoft.JScript.JScriptException" /> if that is possible.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.JScriptException" />
        <altmember cref="T:Microsoft.JScript.JSError" />
      </Docs>
    </Member>
    <Member MemberName="PushHandlerScope">
      <MemberSignature Language="C#" Value="public static void PushHandlerScope (Microsoft.JScript.Vsa.VsaEngine engine, string id, int scopeId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushHandlerScope(class Microsoft.JScript.Vsa.VsaEngine engine, string id, int32 scopeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Try.PushHandlerScope(Microsoft.JScript.Vsa.VsaEngine,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushHandlerScope (engine As VsaEngine, id As String, scopeId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushHandlerScope(Microsoft::JScript::Vsa::VsaEngine ^ engine, System::String ^ id, int scopeId);" />
      <MemberSignature Language="F#" Value="static member PushHandlerScope : Microsoft.JScript.Vsa.VsaEngine * string * int -&gt; unit" Usage="Microsoft.JScript.Try.PushHandlerScope (engine, id, scopeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="engine" Type="Microsoft.JScript.Vsa.VsaEngine" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="scopeId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="engine">
          <span data-ttu-id="80a19-107">Uma referência ao mecanismo de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a19-107">A reference to the scripting engine.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="80a19-108">O nome do escopo do bloco <see langword="try" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a19-108">The name of the scope of the <see langword="try" /> block.</span>
          </span>
        </param>
        <param name="scopeId">
          <span data-ttu-id="80a19-109">A ID do escopo do bloco <see langword="try" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a19-109">The ID of the scope of the <see langword="try" /> block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80a19-110">Cria um novo objeto <see cref="T:Microsoft.JScript.BlockScope" /> para bloco <see langword="try" /> e envia-o para a pilha de escopo global.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a19-110">Creates a new <see cref="T:Microsoft.JScript.BlockScope" /> object for the <see langword="try" /> block and pushes it onto the global scope stack.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>