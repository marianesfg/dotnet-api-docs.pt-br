<Type Name="TypeErrorObject" FullName="Microsoft.JScript.TypeErrorObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ccdfd15fa47e84640a2ac7f0c6ef6f18daef10d5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36661858" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypeErrorObject : Microsoft.JScript.ErrorObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeErrorObject extends Microsoft.JScript.ErrorObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.TypeErrorObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeErrorObject&#xA;Inherits ErrorObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeErrorObject sealed : Microsoft::JScript::ErrorObject" />
  <TypeSignature Language="F#" Value="type TypeErrorObject = class&#xA;    inherit ErrorObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ErrorObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa um erro de tipo. Por exemplo, um erro de tipo pode ocorrer quando você passa um objeto de um tipo para um método que espera um objeto de outro tipo.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ErrorType" />
  </Docs>
  <Members />
</Type>