<Type Name="TypeReflector" FullName="Microsoft.JScript.TypeReflector">
  <TypeSignature Language="C#" Value="public sealed class TypeReflector : Microsoft.JScript.ScriptObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeReflector extends Microsoft.JScript.ScriptObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.TypeReflector" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeReflector&#xA;Inherits ScriptObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeReflector sealed : Microsoft::JScript::ScriptObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ScriptObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="41e0a-101">Fornece uma implementação de <see cref="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)" /> que é mais rápido que <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" />.</span><span class="sxs-lookup"><span data-stu-id="41e0a-101">Provides an implementation of <see cref="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)" /> that is faster than <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" />.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ScriptObject" />
    <altmember cref="T:System.Type" />
  </Docs>
  <Members>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="41e0a-102">O nome do membro a ser pesquisado.</span><span class="sxs-lookup"><span data-stu-id="41e0a-102">The name of the member to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="41e0a-103">Uma combinação bit a bit dos valores de enumeração que especifica a maneira na qual a pesquisa por tipos e membros é realizada pela operação de reflexão.</span><span class="sxs-lookup"><span data-stu-id="41e0a-103">A bitwise combination of the enumeration values that specify the way in which the search for members and types is conducted by the reflection operation.</span></span></param>
        <summary><span data-ttu-id="41e0a-104">Localiza o membro especificado, usando as restrições de associação especificada.</span><span class="sxs-lookup"><span data-stu-id="41e0a-104">Searches for the specified member, using the specified binding constraints.</span></span></summary>
        <returns><span data-ttu-id="41e0a-105">Uma matriz de <see cref="T:System.Reflection.MemberInfo" /> objetos que representam os membros públicos que têm o nome especificado, se encontrado; caso contrário, uma matriz vazia.</span><span class="sxs-lookup"><span data-stu-id="41e0a-105">An array of <see cref="T:System.Reflection.MemberInfo" /> objects that represents the public members that have the specified name, if found; otherwise, an empty array.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypeReflector.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="41e0a-106">Uma combinação bit a bit dos valores de enumeração que especifica a maneira na qual a pesquisa por tipos e membros é realizada pela operação de reflexão.</span><span class="sxs-lookup"><span data-stu-id="41e0a-106">A bitwise combination of the enumeration values that specify the way in which the search for members and types is conducted by the reflection operation.</span></span></param>
        <summary><span data-ttu-id="41e0a-107">Gera uma exceção <see cref="T:Microsoft.JScript.JScriptException" /> em todos os casos.</span><span class="sxs-lookup"><span data-stu-id="41e0a-107">Throws a <see cref="T:Microsoft.JScript.JScriptException" /> exception in all cases.</span></span></summary>
        <returns><span data-ttu-id="41e0a-108">Gera uma exceção <see cref="T:Microsoft.JScript.JScriptException" /> em todos os casos.</span><span class="sxs-lookup"><span data-stu-id="41e0a-108">Throws a <see cref="T:Microsoft.JScript.JScriptException" /> exception in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Type" />
        <altmember cref="F:Microsoft.JScript.JSError.InternalError" />
      </Docs>
    </Member>
  </Members>
</Type>