<Type Name="TypedArray" FullName="Microsoft.JScript.TypedArray">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6380883ca9119a1dcb22e28fa3db4c34a26f6260" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39790017" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypedArray : System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypedArray extends System.Object implements class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.TypedArray" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypedArray&#xA;Implements IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypedArray sealed : System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type TypedArray = class&#xA;    interface IReflect" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="7f6cb-101">Representa uma referência refletível à classe base <see cref="T:System.Array" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7f6cb-101">Represents a reflectable reference to the <see cref="T:System.Array" /> class.</span>
      </span>
      <span data-ttu-id="7f6cb-102">Essa classe armazena o tipo de elemento de uma matriz com tipo, mas não armazena dados.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7f6cb-102">This class stores the element type of a typed array, but this class does not store data.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Type" />
    <altmember cref="T:System.Reflection.IReflect" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypedArray (System.Reflection.IReflect elementType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.IReflect elementType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.#ctor(System.Reflection.IReflect,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementType As IReflect, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypedArray(System::Reflection::IReflect ^ elementType, int rank);" />
      <MemberSignature Language="F#" Value="new Microsoft.JScript.TypedArray : System.Reflection.IReflect * int -&gt; Microsoft.JScript.TypedArray" Usage="new Microsoft.JScript.TypedArray (elementType, rank)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementType" Type="System.Reflection.IReflect" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="7f6cb-103">O tipo de elemento de uma matriz com tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-103">The element type of a typed array.</span>
          </span>
        </param>
        <param name="rank">
          <span data-ttu-id="7f6cb-104">A classificação (número de dimensões) da matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-104">The rank (number of dimensions) of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f6cb-105">Inicializa uma nova instância da classe <see cref="T:Microsoft.JScript.TypedArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-105">Initializes a new instance of the <see cref="T:Microsoft.JScript.TypedArray" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="typedArray.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7f6cb-106">A matriz com tipo a ser comparada com a matriz com tipo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-106">The typed array to compare with the current typed array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f6cb-107">Determina se a matriz com tipo especificada tem o mesmo tipo de elemento e classificação que a matriz com tipo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-107">Determines whether the specified typed array has the same element type and rank as the current typed array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-108">
            <see langword="true" /> se <paramref name="obj" /> tiver o mesmo tipo de elemento e classificação que a matriz com tipo atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-108">
              <see langword="true" /> if <paramref name="obj" /> has the same element type and rank as the current typed array; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo&#xA;override this.GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="typedArray.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7f6cb-109">O nome do campo a ser obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-109">The name of the field to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="7f6cb-110">Uma combinação bit a bit dos valores de enumeração que especifica como a pesquisa de membros é realizada por reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-110">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f6cb-111">Obtém um campo do tipo de classe <see cref="T:System.Array" /> que tem o nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-111">Gets a field of the <see cref="T:System.Array" /> class type that has the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-112">Um campo que tem o nome especificado, caso seja encontrado; caso contrário, nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-112">A field that has the specified name, if one is found; otherwise, null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]&#xA;override this.GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="typedArray.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="7f6cb-113">Uma combinação bit a bit dos valores de enumeração que especifica como a pesquisa de membros é realizada por reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-113">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f6cb-114">Obtém uma matriz de objetos <see cref="T:System.Reflection.FieldInfo" /> que correspondem a todos os campos do tipo de classe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-114">Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the <see cref="T:System.Array" /> class type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-115">Uma matriz de objetos que contém todos os campos do tipo de classe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-115">An array of objects that contains all fields of the <see cref="T:System.Array" /> class type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="typedArray.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7f6cb-116">Serve como uma função de hash para o tipo de elemento da matriz com tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-116">Serves as a hash function for the element type of the typed array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-117">Um código hash do objeto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-117">A hash code for the current object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]&#xA;override this.GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="typedArray.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7f6cb-118">O nome do membro a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-118">The name of the member to search for.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="7f6cb-119">Uma combinação bit a bit dos valores de enumeração que especifica como a pesquisa de membros é realizada por reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-119">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f6cb-120">Obtém uma matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> correspondentes a todos os membros do tipo de classe <see cref="T:System.Array" /> que correspondem a um nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-120">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the <see cref="T:System.Array" /> class type that match a specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-121">Uma matriz de objetos que correspondem ao argumento <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-121">An array of objects that match the <paramref name="name" /> argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]&#xA;override this.GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="typedArray.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="7f6cb-122">Uma combinação bit a bit dos valores de enumeração que especifica como a pesquisa de membros é realizada por reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-122">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f6cb-123">Obtém uma matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> que correspondem a todos os membros do tipo de classe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-123">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the <see cref="T:System.Array" /> class type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-124">Uma matriz de objetos que contém todos os membros do tipo de classe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-124">An array of objects that contains all members of the <see cref="T:System.Array" /> class type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7f6cb-125">Obtém um método do tipo de classe <see cref="T:System.Array" /> que tem um nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-125">Gets a method of the <see cref="T:System.Array" /> class type that has a specified name.</span>
          </span>
        </summary>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo&#xA;override this.GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo" Usage="typedArray.GetMethod (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7f6cb-126">O nome do método a ser obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-126">The name of the method to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="7f6cb-127">Uma combinação bit a bit dos valores de enumeração que especifica como a pesquisa de membros é realizada por reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-127">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f6cb-128">Obtém um método do tipo de classe <see cref="T:System.Array" /> que tem o nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-128">Gets a method of the <see cref="T:System.Array" /> class type that has the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-129">Um método que tem o nome especificado, caso seja encontrado; caso contrário, nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-129">A method that has the specified name, if one is found; otherwise, null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo&#xA;override this.GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="typedArray.GetMethod (name, bindingAttr, binder, types, modifiers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7f6cb-130">O nome do método a ser obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-130">The name of the method to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="7f6cb-131">Uma combinação bit a bit dos valores de enumeração que especifica como a pesquisa de membros é realizada por reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-131">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="7f6cb-132">Um objeto que executa a conversão de tipo do tipo de argumento real para o tipo de argumento formal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-132">An object that performs type conversion from actual argument type to formal argument type.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="7f6cb-133">Os tipos de parâmetro usados para localizar um método correspondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-133">The parameter types that are used to locate a matching method.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="7f6cb-134">Uma matriz de modificadores de parâmetro que permite que a associação funcione com assinaturas de parâmetro nas quais os tipos foram modificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-134">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f6cb-135">Obtém um método do tipo de classe <see cref="T:System.Array" /> que tem o nome especificado usando os critérios de seleção especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-135">Gets a method of the <see cref="T:System.Array" /> class type that has the specified name by using the specified selection criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-136">Um método que tem o nome especificado, caso seja encontrado; caso contrário, nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-136">A method that has the specified name, if one is found; otherwise, null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]&#xA;override this.GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="typedArray.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="7f6cb-137">Uma combinação bit a bit dos valores de enumeração que especifica como a pesquisa de membros é realizada por reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-137">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f6cb-138">Obtém uma matriz de objetos <see cref="T:System.Reflection.MethodInfo" /> que correspondem a todos os métodos do tipo de classe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-138">Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects that correspond to all methods of the <see cref="T:System.Array" /> class type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-139">Uma matriz de objetos que contém todos os métodos do tipo de classe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-139">An array of objects that contains all methods of the <see cref="T:System.Array" /> class type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]&#xA;override this.GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="typedArray.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="7f6cb-140">Uma combinação bit a bit dos valores de enumeração que especifica como a pesquisa de membros é realizada por reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-140">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f6cb-141">Obtém uma matriz de objetos <see cref="T:System.Reflection.PropertyInfo" /> que correspondem a todas as propriedades do tipo de classe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-141">Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects that correspond to all properties of the <see cref="T:System.Array" /> class type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-142">Uma matriz de objetos que contém todas as propriedades do tipo de classe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-142">An array of objects that contains all properties of the <see cref="T:System.Array" /> class type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7f6cb-143">Obtém uma propriedade do tipo de classe <see cref="T:System.Array" /> que tem um nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-143">Gets a property of the <see cref="T:System.Array" /> class type that has a specified name.</span>
          </span>
        </summary>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo&#xA;override this.GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo" Usage="typedArray.GetProperty (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7f6cb-144">O nome da propriedade a ser obtida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-144">The name of the property to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="7f6cb-145">Uma combinação bit a bit dos valores de enumeração que especifica como a pesquisa de membros é realizada por reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-145">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f6cb-146">Obtém uma propriedade do tipo de classe <see cref="T:System.Array" /> que tem o nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-146">Gets a property of the <see cref="T:System.Array" /> class type that has the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-147">Uma propriedade que tem o nome especificado, caso seja encontrado; caso contrário, nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-147">A property that has the specified name, if one is found; otherwise, null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo&#xA;override this.GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="typedArray.GetProperty (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7f6cb-148">O nome da propriedade a ser obtida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-148">The name of the property to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="7f6cb-149">Uma combinação bit a bit dos valores de enumeração que especifica como a pesquisa de membros é realizada por reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-149">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="7f6cb-150">Um objeto que executa a conversão de tipo do tipo de argumento real para o tipo de argumento formal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-150">An object that performs type conversion from actual argument type to formal argument type.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="7f6cb-151">O tipo do valor retornado que a propriedade deve ter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-151">The type of the return value that the property must have.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="7f6cb-152">Os tipos de índice da propriedade que está sendo pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-152">The index types of the property being searched for.</span>
          </span>
          <span data-ttu-id="7f6cb-153">Usados para indexar propriedades, como o indexador para uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-153">Used for index properties, such as the indexer for a class.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="7f6cb-154">Uma matriz de modificadores de parâmetro que permite que a associação funcione com assinaturas de parâmetro nas quais os tipos foram modificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-154">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f6cb-155">Obtém uma propriedade do tipo de classe <see cref="T:System.Array" /> que tem o nome especificado usando os critérios de seleção especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-155">Gets a property of the <see cref="T:System.Array" /> class type that has the specified name by using the specified selection criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-156">Uma propriedade que tem o nome especificado, caso seja encontrado; caso contrário, nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-156">A property that has the specified name, if one is found; otherwise, null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags flags, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo locale, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags flags, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo locale, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags flags, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ locale, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj&#xA;override this.InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="typedArray.InvokeMember (name, flags, binder, target, args, modifiers, locale, namedParameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="flags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="locale" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7f6cb-157">O nome do membro a ser invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-157">The name of the member to invoke.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="7f6cb-158">Uma combinação bit a bit dos valores de enumeração que especifica como a pesquisa de membros é realizada por reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-158">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="7f6cb-159">Um objeto que executa a conversão de tipo do tipo de argumento real para o tipo de argumento formal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-159">An object that performs type conversion from actual argument type to formal argument type.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="7f6cb-160">O objeto no qual invocar o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-160">The object on which to invoke the member.</span>
          </span>
          <span data-ttu-id="7f6cb-161">Isso deve ser o objeto de script atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-161">This must be the current script object.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="7f6cb-162">Esta é uma matriz de objetos que contém o número, a ordem e o tipo dos parâmetros do membro a ser invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-162">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span>
          </span>
          <span data-ttu-id="7f6cb-163">Isso é uma matriz vazia se não há nenhum parâmetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-163">This is an empty array if there are no parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="7f6cb-164">Uma matriz que tem o mesmo tamanho que o parâmetro <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-164">An array that has the same length as the <c>args</c> parameter.</span>
          </span>
          <span data-ttu-id="7f6cb-165">Ela representa os atributos de argumento de membro nos metadados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-165">It represents the invoked member's argument attributes in the metadata.</span>
          </span>
        </param>
        <param name="locale">
          <span data-ttu-id="7f6cb-166">Fornece informações sobre uma cultura ou localidade específica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-166">Provides information about a specific culture or locale.</span>
          </span>
          <span data-ttu-id="7f6cb-167">Usado para formatar números, datas e cadeias de caracteres corretamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-167">Used to format numbers, dates, and strings correctly.</span>
          </span>
        </param>
        <param name="namedParameters">
          <span data-ttu-id="7f6cb-168">Uma matriz de parâmetros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-168">An array of parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f6cb-169">Invoca o membro especificado do tipo de elemento ou do tipo de classe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-169">Invokes the specified member of the element type or the <see cref="T:System.Array" /> class type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-170">O valor retornado da chamada para o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-170">The return value of the call to the member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f6cb-171">Esse método pode usar a associação tardia para invocar o membro no tipo de elemento da matriz.</span><span class="sxs-lookup"><span data-stu-id="7f6cb-171">This method can use late binding to invoke the member on the element type of the array.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="typedArray.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7f6cb-172">Retorna uma cadeia de caracteres que contém o tipo de elemento da matriz com tipo e as informações de classificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-172">Returns a string that contains the element type of the typed array and the rank information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f6cb-173">Uma cadeia de caracteres que contém o tipo de elemento da matriz com tipo e as informações de classificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-173">A string that contains the element type of the typed array and the rank information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.TypedArray.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="Microsoft.JScript.TypedArray.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f6cb-174">Obtém o tipo do objeto <see cref="T:Microsoft.JScript.TypedArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-174">Gets the type of the <see cref="T:Microsoft.JScript.TypedArray" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f6cb-175">O tipo do <see cref="T:Microsoft.JScript.TypedArray" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f6cb-175">The type of the <see cref="T:Microsoft.JScript.TypedArray" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f6cb-176">Essa propriedade obtém o tipo do <xref:Microsoft.JScript.TypedArray> objeto em si, não o tipo de elemento da matriz digitada.</span><span class="sxs-lookup"><span data-stu-id="7f6cb-176">This property gets the type of the <xref:Microsoft.JScript.TypedArray> object itself, not the element type of the typed array.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
  </Members>
</Type>