<Type Name="NumericBinary" FullName="Microsoft.JScript.NumericBinary">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0085df11072a51cf01a8ba7ff4b340acb7390d45" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36730544" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NumericBinary : Microsoft.JScript.BinaryOp" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NumericBinary extends Microsoft.JScript.BinaryOp" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.NumericBinary" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NumericBinary&#xA;Inherits BinaryOp" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumericBinary sealed : Microsoft::JScript::BinaryOp" />
  <TypeSignature Language="F#" Value="type NumericBinary = class&#xA;    inherit BinaryOp" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.BinaryOp</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Executa operações binárias em operandos numéricos. Essa classe pertence à categoria de árvore de sintaxe abstrata.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumericBinary (int operatorTok);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 operatorTok) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.NumericBinary.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (operatorTok As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NumericBinary(int operatorTok);" />
      <MemberSignature Language="F#" Value="new Microsoft.JScript.NumericBinary : int -&gt; Microsoft.JScript.NumericBinary" Usage="new Microsoft.JScript.NumericBinary operatorTok" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="operatorTok" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="operatorTok">Um dos valores de enumeração <see cref="T:Microsoft.JScript.JSToken" />. Especifica a operação a ser executada.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.JScript.NumericBinary" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DoOp">
      <MemberSignature Language="C#" Value="public static object DoOp (object v1, object v2, Microsoft.JScript.JSToken operatorTok);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object DoOp(object v1, object v2, valuetype Microsoft.JScript.JSToken operatorTok) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.NumericBinary.DoOp(System.Object,System.Object,Microsoft.JScript.JSToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DoOp (v1 As Object, v2 As Object, operatorTok As JSToken) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DoOp(System::Object ^ v1, System::Object ^ v2, Microsoft::JScript::JSToken operatorTok);" />
      <MemberSignature Language="F#" Value="static member DoOp : obj * obj * Microsoft.JScript.JSToken -&gt; obj" Usage="Microsoft.JScript.NumericBinary.DoOp (v1, v2, operatorTok)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Object" />
        <Parameter Name="v2" Type="System.Object" />
        <Parameter Name="operatorTok" Type="Microsoft.JScript.JSToken" />
      </Parameters>
      <Docs>
        <param name="v1">O primeiro operando.</param>
        <param name="v2">O segundo operando.</param>
        <param name="operatorTok">Um dos valores de enumeração <see cref="T:Microsoft.JScript.JSToken" />. Especifica a operação a ser executada.</param>
        <summary>Executa a operação binária especificada nos operandos numéricos especificados.</summary>
        <returns>O resultado da operação.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="EvaluateNumericBinary">
      <MemberSignature Language="C#" Value="public object EvaluateNumericBinary (object v1, object v2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object EvaluateNumericBinary(object v1, object v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.NumericBinary.EvaluateNumericBinary(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateNumericBinary (v1 As Object, v2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EvaluateNumericBinary(System::Object ^ v1, System::Object ^ v2);" />
      <MemberSignature Language="F#" Value="member this.EvaluateNumericBinary : obj * obj -&gt; obj" Usage="numericBinary.EvaluateNumericBinary (v1, v2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Object" />
        <Parameter Name="v2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="v1">O primeiro operando.</param>
        <param name="v2">O segundo operando.</param>
        <summary>Executa uma operação binária nos operandos numéricos especificados.</summary>
        <returns>O resultado da operação.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>