<Type Name="Equality" FullName="Microsoft.JScript.Equality">
  <TypeSignature Language="C#" Value="public class Equality : Microsoft.JScript.BinaryOp" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Equality extends Microsoft.JScript.BinaryOp" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.Equality" />
  <TypeSignature Language="VB.NET" Value="Public Class Equality&#xA;Inherits BinaryOp" />
  <TypeSignature Language="C++ CLI" Value="public ref class Equality : Microsoft::JScript::BinaryOp" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.BinaryOp</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b0405-101">Executa operações de comparação.</span><span class="sxs-lookup"><span data-stu-id="b0405-101">Performs comparison operations.</span></span> <span data-ttu-id="b0405-102">Essa classe pertence à categoria de árvore de sintaxe abstrata.</span><span class="sxs-lookup"><span data-stu-id="b0405-102">This class belongs to the abstract syntax tree category.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Equality (int operatorTok);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 operatorTok) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Equality.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (operatorTok As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Equality(int operatorTok);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="operatorTok" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="operatorTok"><span data-ttu-id="b0405-103">Um dos valores de enumeração <see cref="T:Microsoft.JScript.JSToken" />.</span><span class="sxs-lookup"><span data-stu-id="b0405-103">One of the <see cref="T:Microsoft.JScript.JSToken" /> enumeration values.</span></span> <span data-ttu-id="b0405-104">Especifica a comparação a ser realizada.</span><span class="sxs-lookup"><span data-stu-id="b0405-104">Specifies the comparison to perform.</span></span></param>
        <summary><span data-ttu-id="b0405-105">Inicializa uma nova instância da classe <see cref="T:Microsoft.JScript.Equality" />.</span><span class="sxs-lookup"><span data-stu-id="b0405-105">Initializes a new instance of the <see cref="T:Microsoft.JScript.Equality" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="EvaluateEquality">
      <MemberSignature Language="C#" Value="public bool EvaluateEquality (object v1, object v2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EvaluateEquality(object v1, object v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Equality.EvaluateEquality(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateEquality (v1 As Object, v2 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EvaluateEquality(System::Object ^ v1, System::Object ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Object" />
        <Parameter Name="v2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="b0405-106">O primeiro operando.</span><span class="sxs-lookup"><span data-stu-id="b0405-106">The first operand.</span></span></param>
        <param name="v2"><span data-ttu-id="b0405-107">O segundo operando.</span><span class="sxs-lookup"><span data-stu-id="b0405-107">The second operand.</span></span></param>
        <summary><span data-ttu-id="b0405-108">Executa uma operação de comparação.</span><span class="sxs-lookup"><span data-stu-id="b0405-108">Performs a comparison operation.</span></span></summary>
        <returns><span data-ttu-id="b0405-109">O resultado da operação.</span><span class="sxs-lookup"><span data-stu-id="b0405-109">The result of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0405-110">Esse método executa operações de comparação de desigualdade e de igualdade.</span><span class="sxs-lookup"><span data-stu-id="b0405-110">This method performs both equality and inequality comparison operations.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="JScriptEquals">
      <MemberSignature Language="C#" Value="public static bool JScriptEquals (object v1, object v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool JScriptEquals(object v1, object v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Equality.JScriptEquals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function JScriptEquals (v1 As Object, v2 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool JScriptEquals(System::Object ^ v1, System::Object ^ v2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Object" />
        <Parameter Name="v2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="b0405-111">O primeiro operando.</span><span class="sxs-lookup"><span data-stu-id="b0405-111">The first operand.</span></span></param>
        <param name="v2"><span data-ttu-id="b0405-112">O segundo operando.</span><span class="sxs-lookup"><span data-stu-id="b0405-112">The second operand.</span></span></param>
        <summary><span data-ttu-id="b0405-113">Executa uma operação de comparação.</span><span class="sxs-lookup"><span data-stu-id="b0405-113">Performs a comparison operation.</span></span></summary>
        <returns><span data-ttu-id="b0405-114">O resultado da operação.</span><span class="sxs-lookup"><span data-stu-id="b0405-114">The result of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>