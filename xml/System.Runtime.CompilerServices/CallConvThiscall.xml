<Type Name="CallConvThiscall" FullName="System.Runtime.CompilerServices.CallConvThiscall">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79d6aee24b5de1530b5618fccf6707ae83576ace" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36637607" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CallConvThiscall" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvThiscall extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvThiscall" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvThiscall" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvThiscall" />
  <TypeSignature Language="F#" Value="type CallConvThiscall = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7d818-101">Indica que um método deve usar a convenção de chamada <see langword="ThisCall" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7d818-101">Indicates that a method should use the <see langword="ThisCall" /> calling convention.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d818-102">Ao usar o `ThisCall` convenção de chamada, o primeiro parâmetro de uma chamada de método é o `this` ponteiro, que é armazenado no registro ECX.</span><span class="sxs-lookup"><span data-stu-id="7d818-102">When using the `ThisCall` calling convention, the first parameter of a method call is the `this` pointer, which is stored in register ECX.</span></span> <span data-ttu-id="7d818-103">Outros parâmetros de uma chamada de método são enviados por push na pilha.</span><span class="sxs-lookup"><span data-stu-id="7d818-103">Other parameters of a method call are pushed on the stack.</span></span> <span data-ttu-id="7d818-104">Esta convenção de chamada é usada para chamar métodos em classes exportadas de uma DLL não gerenciada.</span><span class="sxs-lookup"><span data-stu-id="7d818-104">This calling convention is used to call methods on classes exported from an unmanaged DLL.</span></span>  
  
 <span data-ttu-id="7d818-105">As classes em <xref:System.Runtime.CompilerServices> são autores de compilador apenas para uso.</span><span class="sxs-lookup"><span data-stu-id="7d818-105">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 <span data-ttu-id="7d818-106">Compiladores emitem modificadores personalizados dentro dos metadados para alterar o maneira como o compilador just-in-time (JIT) manipula valores quando o comportamento padrão não é apropriado.</span><span class="sxs-lookup"><span data-stu-id="7d818-106">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="7d818-107">Quando o compilador JIT encontra um modificador personalizado, ele trata o valor da maneira que especifica o modificador.</span><span class="sxs-lookup"><span data-stu-id="7d818-107">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="7d818-108">Compiladores podem aplicar modificadores personalizados para os métodos, parâmetros e valores de retorno.</span><span class="sxs-lookup"><span data-stu-id="7d818-108">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="7d818-109">O compilador JIT deve responder às modificadores necessárias, mas pode ignorar modificadores opcionais.</span><span class="sxs-lookup"><span data-stu-id="7d818-109">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  <span data-ttu-id="7d818-110">Um compilador de C++ pode emitir um modificador personalizado para descrever como um byte deve ser tratado em casos onde o compilador JIT trata os bytes de uma maneira que não é compatível com C++ por padrão.</span><span class="sxs-lookup"><span data-stu-id="7d818-110">A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in a manner that is not compatible with C++ by default.</span></span>  
  
 <span data-ttu-id="7d818-111">Você pode emitir modificadores personalizados em metadados usando uma das seguintes técnicas:</span><span class="sxs-lookup"><span data-stu-id="7d818-111">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="7d818-112">Usando métodos de <xref:System.Reflection.Emit.TypeBuilder> classe como <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, e <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="7d818-112">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="7d818-113">Gerar um arquivo de instrução do Microsoft intermediate language (MSIL) que contém chamadas para `modopt` e `modreq`e montar o arquivo com o [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="7d818-113">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="7d818-114">Usando a API de reflexão não gerenciada.</span><span class="sxs-lookup"><span data-stu-id="7d818-114">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvThiscall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvThiscall.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvThiscall();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d818-115">Inicializa uma nova instância da classe <see cref="T:System.Runtime.CompilerServices.CallConvThiscall" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d818-115">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallConvThiscall" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d818-116">As classes em <xref:System.Runtime.CompilerServices> são autores de compilador apenas para uso.</span><span class="sxs-lookup"><span data-stu-id="7d818-116">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>