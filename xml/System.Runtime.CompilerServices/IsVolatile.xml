<Type Name="IsVolatile" FullName="System.Runtime.CompilerServices.IsVolatile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37a76c714e637ea2e4143094372ccfe538204aa2" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39754329" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsVolatile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsVolatile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsVolatile" />
  <TypeSignature Language="VB.NET" Value="Public Class IsVolatile" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsVolatile abstract sealed" />
  <TypeSignature Language="F#" Value="type IsVolatile = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a647c-101">Marca um campo como volátil.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a647c-101">Marks a field as volatile.</span>
      </span>
      <span data-ttu-id="a647c-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a647c-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a647c-103">`IsVolatile` é usado somente em modificadores personalizados de assinaturas de método para indicar que o campo, que ele marca é volátil.</span><span class="sxs-lookup"><span data-stu-id="a647c-103">`IsVolatile` is used only in custom modifiers of method signatures to indicate that the field it marks is volatile.</span></span> <span data-ttu-id="a647c-104">Qualquer compilador que importa os metadados com um ou mais campos marcados como volátil deve usar instruções prefixadas com `volatile.` para acessar esses campos.</span><span class="sxs-lookup"><span data-stu-id="a647c-104">Any compiler that imports metadata with one or more fields marked as volatile must use instructions prefixed with `volatile.` to access such fields.</span></span>  
  
 <span data-ttu-id="a647c-105">As classes no <xref:System.Runtime.CompilerServices> são gravadores de compiladores apenas para uso.</span><span class="sxs-lookup"><span data-stu-id="a647c-105">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 <span data-ttu-id="a647c-106">Compiladores emitem modificadores personalizados nos metadados para alterar a maneira como o compilador just-in-time (JIT) lida com valores quando o comportamento padrão não é apropriado.</span><span class="sxs-lookup"><span data-stu-id="a647c-106">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="a647c-107">Quando o compilador JIT encontra um modificador personalizado, ele lida com o valor da maneira que especifica o modificador.</span><span class="sxs-lookup"><span data-stu-id="a647c-107">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="a647c-108">Os compiladores podem aplicar os modificadores personalizados para os métodos, parâmetros e retornam valores.</span><span class="sxs-lookup"><span data-stu-id="a647c-108">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="a647c-109">O compilador JIT deve responder a modificadores obrigatórios, mas pode ignorar modificadores opcionais.</span><span class="sxs-lookup"><span data-stu-id="a647c-109">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  <span data-ttu-id="a647c-110">Um compilador de C++ pode emitir um modificador personalizado para descrever como um byte deve ser tratado em casos onde o compilador JIT trata os bytes de uma maneira que não é compatível com C++ por padrão.</span><span class="sxs-lookup"><span data-stu-id="a647c-110">A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in a manner that is not compatible with C++ by default.</span></span>  
  
 <span data-ttu-id="a647c-111">Você pode emitir modificadores personalizados em metadados usando uma das seguintes técnicas:</span><span class="sxs-lookup"><span data-stu-id="a647c-111">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="a647c-112">Usando os métodos de <xref:System.Reflection.Emit.TypeBuilder> classe, como <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, e <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="a647c-112">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="a647c-113">Gerar um arquivo de instruções do Microsoft intermediate language (MSIL) que contém as chamadas para `modopt` e `modreq`e montando o arquivo com o [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="a647c-113">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="a647c-114">Usando a API de reflexão não gerenciada.</span><span class="sxs-lookup"><span data-stu-id="a647c-114">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>