<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InternalsVisibleToAttribute.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac572f45e174f70fa5053339a1308aae4feae8b8626.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72f45e174f70fa5053339a1308aae4feae8b8626</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Specifies that types that are ordinarily visible only within the current assembly are visible to a specified assembly.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Ordinarily, types and members with <ph id="ph1">`internal`</ph> scope (in C#) and <ph id="ph2">`friend`</ph> scope (in Visual Basic) are visible only in the assembly in which they are defined.</source>
          <target state="translated">Em geral, tipos e membros com <ph id="ph1">`internal`</ph> escopo (em c#) e <ph id="ph2">`friend`</ph> escopo (no Visual Basic) são visíveis somente no assembly no qual eles são definidos.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute makes them also visible to the types in a specified assembly, which is known as a friend assembly.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> atributo torna também visível para os tipos em um conjunto especificado, o que é conhecido como um assembly autorizado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The attribute is applied at the assembly level.</source>
          <target state="translated">O atributo é aplicado no nível de assembly.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>This means that it can be included at the beginning of a source code file, or it can be included in the AssemblyInfo file in a Visual Studio project.</source>
          <target state="translated">Isso significa que pode ser incluída no início de um arquivo de código fonte, ou ele pode ser incluído no arquivo AssemblyInfo em um projeto do Visual Studio.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>You can use the attribute to specify a single friend assembly that can access the internal types and members of the current assembly.</source>
          <target state="translated">Você pode usar o atributo para especificar um assembly friend único que pode acessar os tipos internos e membros do assembly atual.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>You can define multiple friend assemblies in two ways.</source>
          <target state="translated">Você pode definir vários assemblies amigáveis de duas maneiras.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>They can appear as individual assembly-level attributes, as the following example illustrates.</source>
          <target state="translated">Eles podem aparecer como atributos de nível de assembly individuais, como mostra o exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>They can also appear with separate <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> tags but a single <ph id="ph2">`assembly`</ph> keyword, as the following example illustrates.</source>
          <target state="translated">Eles também podem aparecer com separado <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> marcas, mas uma única <ph id="ph2">`assembly`</ph> palavra-chave, como o exemplo a seguir ilustra.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The friend assembly is identified by the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">O assembly friend é identificado pelo <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Both the current assembly and the friend assembly must be unsigned, or both assemblies must be signed with a strong name.</source>
          <target state="translated">O assembly atual e o assembly friend devem ser não assinados ou ambos os assemblies devem ser assinados com um nome forte.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If both assemblies are unsigned, the <ph id="ph1">`assemblyName`</ph> argument consists of the name of the friend assembly, specified without a directory path or file name extension.</source>
          <target state="translated">Se os dois assemblies forem assinados, o <ph id="ph1">`assemblyName`</ph> argumento consiste no nome do assembly friend, especificado sem uma extensão de nome de arquivo ou caminho do diretório.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If both assemblies are signed with a strong name, the argument to the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> constructor must consist of the name of the assembly without its directory path or file name extension, along with the full public key (and not its public key token).</source>
          <target state="translated">Se os dois assemblies assinados com uma forte nome, o argumento para o <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> construtor deve conter o nome do assembly sem seu diretório caminho ou arquivo de extensão de nome, junto com a chave pública completa (e não seu token de chave pública).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>To get the full public key of a strong-named assembly, see the <bpt id="p1">[</bpt>Getting the full public key<ept id="p1">](#Key)</ept> section later in this article.</source>
          <target state="translated">Para obter a chave pública completa de um assembly de nome forte, consulte o <bpt id="p1">[</bpt>obter a chave pública completa<ept id="p1">](#Key)</ept> seção mais adiante neste artigo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>For more information about using <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> with strong-named assemblies, see the <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Para obter mais informações sobre como usar <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> com assemblies de nomes fortes, consulte o <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Do not include values for the <ph id="ph1">&lt;xref:System.Reflection.AssemblyName.CultureInfo%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A&gt;</ph> field in the argument; the Visual Basic, C#, and C++ compilers treat this as a compiler error.</source>
          <target state="translated">Não inclua valores para o <ph id="ph1">&lt;xref:System.Reflection.AssemblyName.CultureInfo%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A&gt;</ph> campo no argumento; os compiladores do Visual Basic, C++ e c# tratam-o como um erro do compilador.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If you use a compiler that does not treat it as an error (such as the <bpt id="p1">[</bpt>IL Assembler (ILAsm.exe)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>) and the assemblies are strong-named, a <ph id="ph1">&lt;xref:System.MethodAccessException&gt;</ph> exception is thrown the first time the specified friend assembly accesses the assembly that contains the <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute.</source>
          <target state="translated">Se você usar um compilador que não tratá-lo como um erro (como o <bpt id="p1">[</bpt>IL Assembler (ILAsm.exe)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>) e os assemblies de nome forte, um <ph id="ph1">&lt;xref:System.MethodAccessException&gt;</ph> exceção será lançada na primeira vez que o assembly friend especificado acessa o assembly que contém o <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> atributo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>For more information about how to use this attribute, see the following topics:</source>
          <target state="translated">Para obter mais informações sobre como usar esse atributo, consulte os tópicos a seguir:</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">[</bpt>Friend Assemblies (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Assemblies amigáveis (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">[</bpt>Friend Assemblies<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Assemblies Amigáveis<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Getting the full public key</source>
          <target state="translated">Obter a chave pública completa</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>You can use the <bpt id="p1">[</bpt>Strong Name Tool (Sn.exe)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept> to retrieve the full public key from a strong-named key (.snk) file.</source>
          <target state="translated">Você pode usar o <bpt id="p1">[</bpt>ferramenta de nome forte (Sn.exe)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept> para recuperar a chave pública completa de um arquivo de chave de nome forte (. snk).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>To do this, you perform the following steps:</source>
          <target state="translated">Para fazer isso, você deve executar as seguintes etapas:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Extract the public key from the strong-named key file to a separate file:</source>
          <target state="translated">Extrai a chave pública de nome forte do arquivo de chave para um arquivo separado:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">**</bpt>Sn -p<ept id="p1">**</ept>  <bpt id="p2">*</bpt>snk_file<ept id="p2">*</ept> <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sn -p<ept id="p1">**</ept>  <bpt id="p2">*</bpt>snk_file<ept id="p2">*</ept> <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Display the full public key to the console:</source>
          <target state="translated">Exiba a chave pública completa para o console:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">**</bpt>Sn -tp<ept id="p1">**</ept>  <bpt id="p2">*</bpt>outfile<ept id="p2">*</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sn -tp<ept id="p1">**</ept>  <bpt id="p2">*</bpt>outfile<ept id="p2">*</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Copy and paste the full public key value into your source code.</source>
          <target state="translated">Copie e cole o valor da chave público completa em seu código-fonte.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Compiling the friend assembly with C#</source>
          <target state="translated">Compilando o assembly friend com c#</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler option.</source>
          <target state="translated">Se você usar o compilador c# para compilar o assembly friend, você deve especificar explicitamente o nome do arquivo de saída (.exe ou. dll) usando o <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> opção de compilador.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</source>
          <target state="translated">Isso é necessário porque o compilador ainda não gerou o nome do assembly que está compilando no momento em que ele está se associando às referências externas.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler option is optional for the Visual Basic compiler, and the corresponding <bpt id="p2">**</bpt>-out<ept id="p2">**</ept> or <bpt id="p3">**</bpt>-o<ept id="p3">**</ept> compiler option should not be used when compiling friend assemblies with the F# compiler.</source>
          <target state="translated">O <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> opção de compilador é opcional para o compilador do Visual Basic e correspondente <bpt id="p2">**</bpt>-out<ept id="p2">**</ept> ou <bpt id="p3">**</bpt>-o<ept id="p3">**</ept> opção de compilador não deve ser usada quando se estiver compilando assemblies amigáveis com o compilador F #.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Compiling the friend assembly with C++</source>
          <target state="translated">Compilando o assembly friend com C++</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>In C++, in order to make the internal members enabled by the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute accessible to a friend assembly, you must use the <ph id="ph2">`as_friend`</ph> attribute in the C++  directive.</source>
          <target state="translated">No C++, para tornar os membros internos habilitados pelo <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> atributo acessível a um assembly friend, você deve usar o <ph id="ph2">`as_friend`</ph> atributo na diretiva de C++.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Friend Assemblies (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Friend Assemblies (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">**</bpt>Signed assemblies<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Assemblies assinados<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute to make an <ph id="ph2">`internal`</ph> method named <ph id="ph3">`AppendDirectorySeparator`</ph> in a signed assembly visible to another signed assembly.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> atributo para fazer uma <ph id="ph2">`internal`</ph> método chamado <ph id="ph3">`AppendDirectorySeparator`</ph> em um assembly assinado visível para outro assembly assinado.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>It defines a <ph id="ph1">`FileUtilities`</ph> class that includes an internal <ph id="ph2">`AppendDirectorySeparator`</ph> method.</source>
          <target state="translated">Define uma <ph id="ph1">`FileUtilities`</ph> classe que inclui interno <ph id="ph2">`AppendDirectorySeparator`</ph> método.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute is applied to the assembly that contains the <ph id="ph2">`FileUtilities`</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> atributo é aplicado ao assembly que contém o <ph id="ph2">`FileUtilities`</ph> classe.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The attribute allows an assembly named <ph id="ph1">`Friend1`</ph> to access this internal member.</source>
          <target state="translated">O atributo permite que um assembly chamado <ph id="ph1">`Friend1`</ph> para acessar esse membro interno.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If the following example is compiled into a strong-named assembly named <ph id="ph1">`Friend1`</ph>, the <ph id="ph2">`Example.Main`</ph> method in <ph id="ph3">`Friend1`</ph> can successfully call the <ph id="ph4">`FileUtilities.AppendDirectorySeparator`</ph> method, although the method is internal to the <ph id="ph5">`Assembly1`</ph> assembly.</source>
          <target state="translated">Se o exemplo a seguir é compilado em um assembly de nome forte chamado <ph id="ph1">`Friend1`</ph>, o <ph id="ph2">`Example.Main`</ph> método <ph id="ph3">`Friend1`</ph> pode chamar com êxito o <ph id="ph4">`FileUtilities.AppendDirectorySeparator`</ph> método, embora o método é interno para o <ph id="ph5">`Assembly1`</ph> assembly.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Note that if you are compiling in C# from the command line, you must use the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</source>
          <target state="translated">Observe que se você estiver compilando em c# na linha de comando, você deve usar o <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> opção de compilador para garantir que o nome do assembly friend está disponível quando o compilador associa a referências externas.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">**</bpt>Unsigned assemblies<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Assemblies não assinados<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute to make an <ph id="ph2">`internal`</ph> member of an unsigned assembly visible to another unsigned assembly.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> atributo para fazer uma <ph id="ph2">`internal`</ph> assembly não assinado de membro de um assembly sem sinal visível para outro.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The attribute ensures that the <ph id="ph1">`internal`</ph> <ph id="ph2">`StringLib.IsFirstLetterUpperCase`</ph> method in an assembly named <ph id="ph3">`UtilityLib`</ph> is visible to the code in an assembly named <ph id="ph4">`Friend2`</ph>.</source>
          <target state="translated">O atributo garante que o <ph id="ph1">`internal`</ph> <ph id="ph2">`StringLib.IsFirstLetterUpperCase`</ph> método em um assembly nomeado <ph id="ph3">`UtilityLib`</ph> é visível ao código em um assembly nomeado <ph id="ph4">`Friend2`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The following is the source code for UtilityLib.dll:</source>
          <target state="translated">Este é o código-fonte para UtilityLib.dll:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The following example provides the source code for the <ph id="ph1">`Friend2`</ph> assembly.</source>
          <target state="translated">O exemplo a seguir fornece o código-fonte para o <ph id="ph1">`Friend2`</ph> assembly.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Note that if you are compiling in C# from the command line, you must use the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</source>
          <target state="translated">Observe que se você estiver compilando em c# na linha de comando, você deve usar o <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> opção de compilador para garantir que o nome do assembly friend está disponível quando o compilador associa a referências externas.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The name of a friend assembly.</source>
          
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /&gt;</ph> class with the name of the specified friend assembly.</source>
          
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> constructor defines a friend assembly, which is an assembly that has access to the internal types and members of the current assembly.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> construtor define um conjunto de amigo, que é um assembly que tem acesso para os tipos internos e membros do assembly atual.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Both the current assembly and the friend assembly must be unsigned, or both must be signed with a strong name.</source>
          <target state="translated">O assembly atual e o assembly friend devem ser não assinados ou ambas devem ser assinadas com um nome forte.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>(For more information about strong-named assemblies, see <bpt id="p1">[</bpt>Creating and Using Strong-Named Assemblies<ept id="p1">](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md)</ept>.) If both are unsigned, the <ph id="ph1">`assemblyName`</ph> argument consists of the name of the friend assembly, specified without a directory path or file extension.</source>
          <target state="translated">(Para obter mais informações sobre assemblies de nomes fortes, consulte <bpt id="p1">[</bpt>Creating and Using Strong-Named Assemblies<ept id="p1">](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md)</ept>.) Se ambos são assinadas, o <ph id="ph1">`assemblyName`</ph> argumento consiste no nome do assembly friend, especificado sem uma extensão de arquivo ou caminho do diretório.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>If both are signed, <ph id="ph1">`assemblyName`</ph> consists of the name of the friend assembly without its directory path or file name extension, along with its full public key (but not its public key token).</source>
          <target state="translated">Se ambos forem assinadas, <ph id="ph1">`assemblyName`</ph> consiste no nome do assembly friend sem seu diretório caminho ou arquivo de extensão de nome, junto com sua chave pública completa (mas não seu token de chave pública).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The other components of a strong name, such as those that provide culture, version, or processor architecture information, cannot be specified in the <ph id="ph1">`assemblyName`</ph> argument.</source>
          <target state="translated">Os outros componentes de um nome forte, como aqueles que fornecem a cultura, versão ou informação de arquitetura de processador, não podem ser especificados o <ph id="ph1">`assemblyName`</ph> argumento.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler option.</source>
          <target state="translated">Se você usar o compilador c# para compilar o assembly friend, você deve especificar explicitamente o nome do arquivo de saída (.exe ou. dll) usando o <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> opção de compilador.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</source>
          <target state="translated">Isso é necessário porque o compilador ainda não gerou o nome do assembly que está compilando no momento em que ele está se associando às referências externas.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler option is optional for the Visual Basic compiler, and the corresponding <bpt id="p2">**</bpt>-out<ept id="p2">**</ept> or <bpt id="p3">**</bpt>-o<ept id="p3">**</ept> compiler option should not be used when compiling friend assemblies with the F# compiler.</source>
          <target state="translated">O <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> opção de compilador é opcional para o compilador do Visual Basic e correspondente <bpt id="p2">**</bpt>-out<ept id="p2">**</ept> ou <bpt id="p3">**</bpt>-o<ept id="p3">**</ept> opção de compilador não deve ser usada quando se estiver compilando assemblies amigáveis com o compilador F #.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>You can use <bpt id="p1">[</bpt>Sn.exe (Strong Name Tool)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept> to retrieve the full public key from a strong-named key (.snk) file.</source>
          <target state="translated">Você pode usar <bpt id="p1">[</bpt>Sn.exe (ferramenta de nome forte)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept> para recuperar a chave pública completa de um arquivo de chave de nome forte (. snk).</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>To do this, you perform the following steps:</source>
          <target state="translated">Para fazer isso, você deve executar as seguintes etapas:</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Extract the public key from the strong-named key file to a separate file:</source>
          <target state="translated">Extrai a chave pública de nome forte do arquivo de chave para um arquivo separado:</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">**</bpt>Sn -p<ept id="p1">**</ept>  <bpt id="p2">*</bpt>snk_file<ept id="p2">*</ept> <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sn -p<ept id="p1">**</ept>  <bpt id="p2">*</bpt>snk_file<ept id="p2">*</ept> <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Display the full public key to the console:</source>
          <target state="translated">Exiba a chave pública completa para o console:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">**</bpt>Sn -tp<ept id="p1">**</ept>  <bpt id="p2">*</bpt>outfile<ept id="p2">*</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sn -tp<ept id="p1">**</ept>  <bpt id="p2">*</bpt>outfile<ept id="p2">*</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Copy and paste the full public key value into your source code.</source>
          <target state="translated">Copie e cole o valor da chave público completa em seu código-fonte.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>For more information about how to use the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute, see the following topics:</source>
          <target state="translated">Para obter mais informações sobre como usar o <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> de atributo, consulte os tópicos a seguir:</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>Friend Assemblies (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Assemblies amigáveis (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>Friend Assemblies<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Assemblies Amigáveis<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">**</bpt>Signed assemblies<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Assemblies assinados<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute to make an <ph id="ph2">`internal`</ph> method named <ph id="ph3">`AppendDirectorySeparator`</ph> in a signed assembly visible to another signed assembly.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> atributo para fazer uma <ph id="ph2">`internal`</ph> método chamado <ph id="ph3">`AppendDirectorySeparator`</ph> em um assembly assinado visível para outro assembly assinado.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>It defines a <ph id="ph1">`FileUtilities`</ph> class that includes an internal <ph id="ph2">`AppendDirectorySeparator`</ph> method.</source>
          <target state="translated">Define uma <ph id="ph1">`FileUtilities`</ph> classe que inclui interno <ph id="ph2">`AppendDirectorySeparator`</ph> método.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute is applied to the assembly that contains the <ph id="ph2">`FileUtilities`</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> atributo é aplicado ao assembly que contém o <ph id="ph2">`FileUtilities`</ph> classe.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The attribute allows an assembly named <ph id="ph1">`Friend1`</ph> to access this internal member.</source>
          <target state="translated">O atributo permite que um assembly chamado <ph id="ph1">`Friend1`</ph> para acessar esse membro interno.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>If the following example is compiled into a strong-named assembly named <ph id="ph1">`Friend1`</ph>, it can successfully call the <ph id="ph2">`FileUtilities.AppendDirectorySeparator`</ph> method, even though the method is internal to the <ph id="ph3">`Assembly1`</ph> assembly.</source>
          <target state="translated">Se o exemplo a seguir é compilado em um assembly de nome forte chamado <ph id="ph1">`Friend1`</ph>, ele pode chamar com êxito o <ph id="ph2">`FileUtilities.AppendDirectorySeparator`</ph> método, mesmo que o método é interno a <ph id="ph3">`Assembly1`</ph> assembly.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Note that if you are compiling in C# from the command line, you must use the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</source>
          <target state="translated">Observe que se você estiver compilando em c# na linha de comando, você deve usar o <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> opção de compilador para garantir que o nome do assembly friend está disponível quando o compilador associa a referências externas.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute to make an <ph id="ph2">`internal`</ph> member of an unsigned assembly visible to another unsigned assembly.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> atributo para fazer uma <ph id="ph2">`internal`</ph> assembly não assinado de membro de um assembly sem sinal visível para outro.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The attribute ensures that the <ph id="ph1">`internal`</ph> <ph id="ph2">`StringLib.IsFirstLetterUpperCase`</ph> method in an assembly named <ph id="ph3">`UtilityLib`</ph> is visible to the code in an assembly named <ph id="ph4">`Friend2`</ph>.</source>
          <target state="translated">O atributo garante que o <ph id="ph1">`internal`</ph> <ph id="ph2">`StringLib.IsFirstLetterUpperCase`</ph> método em um assembly nomeado <ph id="ph3">`UtilityLib`</ph> é visível ao código em um assembly nomeado <ph id="ph4">`Friend2`</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The following is the source code for UtilityLib.dll:</source>
          <target state="translated">Este é o código-fonte para UtilityLib.dll:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">**</bpt>Unsigned assemblies<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Assemblies não assinados<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The following example provides the source code for the <ph id="ph1">`Friend2`</ph> assembly.</source>
          <target state="translated">O exemplo a seguir fornece o código-fonte para o <ph id="ph1">`Friend2`</ph> assembly.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Note that if you are compiling in C# from the command line, you must use the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</source>
          <target state="translated">Observe que se você estiver compilando em c# na linha de comando, você deve usar o <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> opção de compilador para garantir que o nome do assembly friend está disponível quando o compilador associa a referências externas.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible">
          <source>This property is not implemented.</source>
          
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible">
          <source>This property does not return a value.</source>
          <target state="translated">Essa propriedade não retorna um valor.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source>Gets the name of the friend assembly to which all types and type members that are marked with the <ph id="ph1">&lt;see langword="internal" /&gt;</ph> keyword are to be made visible.</source>
          
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source>A string that represents the name of the friend assembly.</source>
          <target state="translated">Uma cadeia de caracteres que representa o nome do assembly friend.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source>For more information about how to use the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute, see the following topics:</source>
          <target state="translated">Para obter mais informações sobre como usar o <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> de atributo, consulte os tópicos a seguir:</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source><bpt id="p1">[</bpt>Friend Assemblies (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Assemblies amigáveis (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source><bpt id="p1">[</bpt>Friend Assemblies<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Assemblies Amigáveis<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>