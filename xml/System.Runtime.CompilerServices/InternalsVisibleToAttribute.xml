<Type Name="InternalsVisibleToAttribute" FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="74b4ad010e7aacda9354d35c92864c58b90a0987" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58703502" /></Metadata><TypeSignature Language="C#" Value="public sealed class InternalsVisibleToAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InternalsVisibleToAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalsVisibleToAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalsVisibleToAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InternalsVisibleToAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2d652-101">Especifica que os tipos que são normalmente visíveis somente dentro do assembly atual são visíveis para um assembly específico.</span><span class="sxs-lookup"><span data-stu-id="2d652-101">Specifies that types that are ordinarily visible only within the current assembly are visible to a specified assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d652-102">Normalmente, tipos e membros com `internal` ou `private protected` escopo (em C#) e `Friend` e `Private Protected` escopo (em Visual Basic) são visíveis somente no assembly no qual eles são definidos.</span><span class="sxs-lookup"><span data-stu-id="2d652-102">Ordinarily, types and members with `internal` or `private protected` scope (in C#) and `Friend` and `Private Protected` scope (in Visual Basic) are visible only in the assembly in which they are defined.</span></span> <span data-ttu-id="2d652-103">O <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo torna-os também visível para os tipos em um assembly especificado, o que é conhecido como um assembly amigável.</span><span class="sxs-lookup"><span data-stu-id="2d652-103">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute makes them also visible to the types in a specified assembly, which is known as a friend assembly.</span></span> <span data-ttu-id="2d652-104">Isso se aplica somente ao `internal` (`Friend` no VB) ou `private protected`(`Private Protected` no VB) apenas, métodos, mas não `private` aqueles.</span><span class="sxs-lookup"><span data-stu-id="2d652-104">This only applies to `internal` (`Friend` in VB) or `private protected`(`Private Protected` in VB) methods only, but not `private` ones.</span></span>
  
 <span data-ttu-id="2d652-105">O atributo é aplicado no nível do assembly.</span><span class="sxs-lookup"><span data-stu-id="2d652-105">The attribute is applied at the assembly level.</span></span> <span data-ttu-id="2d652-106">Isso significa que ele pode ser incluído no início de um arquivo de código-fonte, ou ele pode ser incluído no arquivo AssemblyInfo em um projeto do Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="2d652-106">This means that it can be included at the beginning of a source code file, or it can be included in the AssemblyInfo file in a Visual Studio project.</span></span> <span data-ttu-id="2d652-107">Você pode usar o atributo para especificar um conjunto de amigo único que pode acessar tipos internos e membros do assembly atual.</span><span class="sxs-lookup"><span data-stu-id="2d652-107">You can use the attribute to specify a single friend assembly that can access the internal types and members of the current assembly.</span></span> <span data-ttu-id="2d652-108">Você pode definir vários assemblies de amigo de duas maneiras.</span><span class="sxs-lookup"><span data-stu-id="2d652-108">You can define multiple friend assemblies in two ways.</span></span> <span data-ttu-id="2d652-109">Eles podem aparecer como atributos individuais de nível de assembly, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="2d652-109">They can appear as individual assembly-level attributes, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple1.cs#3)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple1.vb#3)]  
  
 <span data-ttu-id="2d652-110">Eles também podem aparecer com separado <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> marcas, mas uma única `assembly` palavra-chave, como o exemplo a seguir ilustra.</span><span class="sxs-lookup"><span data-stu-id="2d652-110">They can also appear with separate <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> tags but a single `assembly` keyword, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple2.cs#4)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple2.vb#4)]  
  
 <span data-ttu-id="2d652-111">O assembly friend é identificado pelo <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="2d652-111">The friend assembly is identified by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span> <span data-ttu-id="2d652-112">O assembly atual e o assembly amigável devem ser não assinados, ou ambos os assemblies devem ser assinados com um nome forte.</span><span class="sxs-lookup"><span data-stu-id="2d652-112">Both the current assembly and the friend assembly must be unsigned, or both assemblies must be signed with a strong name.</span></span>  
  
 <span data-ttu-id="2d652-113">Se os dois assemblies não são assinados, o `assemblyName` argumento consiste no nome do assembly amigável, especificado sem uma extensão de nome de arquivo ou caminho do diretório.</span><span class="sxs-lookup"><span data-stu-id="2d652-113">If both assemblies are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file name extension.</span></span>  
  
 <span data-ttu-id="2d652-114">Se ambos os assemblies são assinados com uma forte nome, o argumento para o <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> construtor deve conter o nome do assembly sem seu diretório caminho ou arquivo de extensão de nome, junto com a chave pública completa (e não seu token de chave pública).</span><span class="sxs-lookup"><span data-stu-id="2d652-114">If both assemblies are signed with a strong name, the argument to the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor must consist of the name of the assembly without its directory path or file name extension, along with the full public key (and not its public key token).</span></span> <span data-ttu-id="2d652-115">Para obter a chave pública completa de um assembly de nome forte, consulte o [obter a chave pública completa](#Key) seção mais adiante neste artigo.</span><span class="sxs-lookup"><span data-stu-id="2d652-115">To get the full public key of a strong-named assembly, see the [Getting the full public key](#Key) section later in this article.</span></span> <span data-ttu-id="2d652-116">Para obter mais informações sobre como usar <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> com assemblies de nome forte, consulte o <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="2d652-116">For more information about using <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> with strong-named assemblies, see the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="2d652-117">Não inclua valores para o <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, ou <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> campo no argumento; os compiladores do Visual Basic, c# e C++ tratam isso como um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="2d652-117">Do not include values for the <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, or <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> field in the argument; the Visual Basic, C#, and C++ compilers treat this as a compiler error.</span></span> <span data-ttu-id="2d652-118">Se você usar um compilador que não o trata como um erro (como o [IL Assembler (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) e os assemblies têm nome forte, um <xref:System.MethodAccessException> exceção é lançada na primeira vez o assembly amigável especificado acessa o o assembly que contém o <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo.</span><span class="sxs-lookup"><span data-stu-id="2d652-118">If you use a compiler that does not treat it as an error (such as the [IL Assembler (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) and the assemblies are strong-named, a <xref:System.MethodAccessException> exception is thrown the first time the specified friend assembly accesses the assembly that contains the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute.</span></span>  
  
 <span data-ttu-id="2d652-119">Para obter mais informações sobre como usar esse atributo, consulte os tópicos a seguir:</span><span class="sxs-lookup"><span data-stu-id="2d652-119">For more information about how to use this attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="2d652-120">Assemblies amigáveis (C++)</span><span class="sxs-lookup"><span data-stu-id="2d652-120">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="2d652-121">Assemblies Amigáveis</span><span class="sxs-lookup"><span data-stu-id="2d652-121">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
<a name="Key"></a>   
## <a name="getting-the-full-public-key"></a><span data-ttu-id="2d652-122">Obter a chave pública completa</span><span class="sxs-lookup"><span data-stu-id="2d652-122">Getting the full public key</span></span>  
 <span data-ttu-id="2d652-123">Você pode usar o [ferramenta de nome forte (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) para recuperar a chave pública completa de um arquivo de chave de nome forte (. snk).</span><span class="sxs-lookup"><span data-stu-id="2d652-123">You can use the [Strong Name Tool (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="2d652-124">Para fazer isso, você deve executar as seguintes etapas:</span><span class="sxs-lookup"><span data-stu-id="2d652-124">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="2d652-125">Extraia a chave pública do arquivo de chave forte para um arquivo separado:</span><span class="sxs-lookup"><span data-stu-id="2d652-125">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="2d652-126">**Sn -p**  *snk_file* *outfile*</span><span class="sxs-lookup"><span data-stu-id="2d652-126">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="2d652-127">Exiba chave pública completa para o console:</span><span class="sxs-lookup"><span data-stu-id="2d652-127">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="2d652-128">**Sn -tp**  *outfile*</span><span class="sxs-lookup"><span data-stu-id="2d652-128">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="2d652-129">Copie e cole o valor da chave público completa em seu código-fonte.</span><span class="sxs-lookup"><span data-stu-id="2d652-129">Copy and paste the full public key value into your source code.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="2d652-130">Compilando o assembly friend com c#</span><span class="sxs-lookup"><span data-stu-id="2d652-130">Compiling the friend assembly with C#</span></span>  
 <span data-ttu-id="2d652-131">Se você usar o compilador c# para compilar o assembly amigável, você deve especificar explicitamente o nome do arquivo de saída (.exe ou. dll) usando o **/out** opção de compilador.</span><span class="sxs-lookup"><span data-stu-id="2d652-131">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="2d652-132">Isso é necessário porque o compilador ainda não gerou o nome do assembly que está compilando no momento em que ele está se associando às referências externas.</span><span class="sxs-lookup"><span data-stu-id="2d652-132">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="2d652-133">O **/out** opção de compilador é opcional para o compilador do Visual Basic e o correspondente **-out** ou **-o** opção de compilador não deve ser usada durante a compilação de amigo assemblies com o F# compilador.</span><span class="sxs-lookup"><span data-stu-id="2d652-133">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="2d652-134">Compilando o assembly friend com C++</span><span class="sxs-lookup"><span data-stu-id="2d652-134">Compiling the friend assembly with C++</span></span>  
 <span data-ttu-id="2d652-135">No C++, para tornar os membros internos habilitados pela <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo acessível a um assembly amigável, você deve usar o `as_friend` atributo na diretiva do C++.</span><span class="sxs-lookup"><span data-stu-id="2d652-135">In C++, in order to make the internal members enabled by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute accessible to a friend assembly, you must use the `as_friend` attribute in the C++  directive.</span></span> <span data-ttu-id="2d652-136">Para obter mais informações, consulte [Assemblies de amigo (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).</span><span class="sxs-lookup"><span data-stu-id="2d652-136">For more information, see [Friend Assemblies (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d652-137">**Assemblies assinados**</span><span class="sxs-lookup"><span data-stu-id="2d652-137">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="2d652-138">O exemplo a seguir usa o <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributos para tornar uma `internal` método chamado `AppendDirectorySeparator` em um assembly assinado visível a outro assembly assinado.</span><span class="sxs-lookup"><span data-stu-id="2d652-138">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="2d652-139">Ele define uma `FileUtilities` classe que inclui interno `AppendDirectorySeparator` método.</span><span class="sxs-lookup"><span data-stu-id="2d652-139">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="2d652-140">O <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo é aplicado ao assembly que contém o `FileUtilities` classe.</span><span class="sxs-lookup"><span data-stu-id="2d652-140">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="2d652-141">O atributo permite que um assembly denominado `Friend1` para acessar esse membro interno.</span><span class="sxs-lookup"><span data-stu-id="2d652-141">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="2d652-142">Se o exemplo a seguir é compilado em um assembly de nome forte chamado `Friend1`, o `Example.Main` método na `Friend1` possam chamar com êxito o `FileUtilities.AppendDirectorySeparator` método, embora o método é interno para o `Assembly1` assembly.</span><span class="sxs-lookup"><span data-stu-id="2d652-142">If the following example is compiled into a strong-named assembly named `Friend1`, the `Example.Main` method in `Friend1` can successfully call the `FileUtilities.AppendDirectorySeparator` method, although the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="2d652-143">Observe que, se você estiver compilando em c# na linha de comando, você deve usar o **/out** comutador de compilador para garantir que o nome do assembly amigável está disponível quando o compilador se vincula às referências externas.</span><span class="sxs-lookup"><span data-stu-id="2d652-143">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="2d652-144">**Assemblies não assinados**</span><span class="sxs-lookup"><span data-stu-id="2d652-144">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="2d652-145">O exemplo a seguir usa o <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributos para tornar um `internal` assembly não assinado de membro de um assembly sem sinal visível para outro.</span><span class="sxs-lookup"><span data-stu-id="2d652-145">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="2d652-146">O atributo garante que o `internal` `StringLib.IsFirstLetterUpperCase` método em um assembly denominado `UtilityLib` é visível para o código em um assembly chamado `Friend2`.</span><span class="sxs-lookup"><span data-stu-id="2d652-146">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="2d652-147">Este é o código-fonte para UtilityLib.dll:</span><span class="sxs-lookup"><span data-stu-id="2d652-147">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="2d652-148">O exemplo a seguir fornece o código-fonte para o `Friend2` assembly.</span><span class="sxs-lookup"><span data-stu-id="2d652-148">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="2d652-149">Observe que, se você estiver compilando em c# na linha de comando, você deve usar o **/out** comutador de compilador para garantir que o nome do assembly amigável está disponível quando o compilador se vincula às referências externas.</span><span class="sxs-lookup"><span data-stu-id="2d652-149">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalsVisibleToAttribute (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalsVisibleToAttribute(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.InternalsVisibleToAttribute : string -&gt; System.Runtime.CompilerServices.InternalsVisibleToAttribute" Usage="new System.Runtime.CompilerServices.InternalsVisibleToAttribute assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="2d652-150">O nome de um assembly amigável.</span><span class="sxs-lookup"><span data-stu-id="2d652-150">The name of a friend assembly.</span></span></param>
        <summary><span data-ttu-id="2d652-151">Inicializa uma nova instância da classe <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> com o nome do assembly amigável especificado.</span><span class="sxs-lookup"><span data-stu-id="2d652-151">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> class with the name of the specified friend assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d652-152">O <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> construtor define um assembly amigável, que é um assembly que tem acesso para interno e privado protegido tipos e membros do assembly atual.</span><span class="sxs-lookup"><span data-stu-id="2d652-152">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor defines a friend assembly, which is an assembly that has access to the internal and private protected types and members of the current assembly.</span></span>  
  
 <span data-ttu-id="2d652-153">O assembly atual e o assembly amigável devem ser sem sinal, ou ambos devem ser assinadas com um nome forte.</span><span class="sxs-lookup"><span data-stu-id="2d652-153">Both the current assembly and the friend assembly must be unsigned, or both must be signed with a strong name.</span></span> <span data-ttu-id="2d652-154">(Para obter mais informações sobre assemblies de nome forte, consulte [criando e usando Assemblies nomes fortes](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).) Se ambos não são assinadas, o `assemblyName` argumento consiste no nome do assembly amigável, especificado sem uma extensão de arquivo ou caminho do diretório.</span><span class="sxs-lookup"><span data-stu-id="2d652-154">(For more information about strong-named assemblies, see [Creating and Using Strong-Named Assemblies](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).) If both are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file extension.</span></span> <span data-ttu-id="2d652-155">Se ambos estiverem assinadas, `assemblyName` consiste no nome do assembly friend sem seu diretório caminho ou arquivo de extensão de nome, junto com sua chave pública completa (mas não seu token de chave pública).</span><span class="sxs-lookup"><span data-stu-id="2d652-155">If both are signed, `assemblyName` consists of the name of the friend assembly without its directory path or file name extension, along with its full public key (but not its public key token).</span></span> <span data-ttu-id="2d652-156">Os outros componentes de um nome forte, como aquelas que fornecem a cultura, versão ou informações de arquitetura de processador, não podem ser especificados o `assemblyName` argumento.</span><span class="sxs-lookup"><span data-stu-id="2d652-156">The other components of a strong name, such as those that provide culture, version, or processor architecture information, cannot be specified in the `assemblyName` argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d652-157">Se você usar o compilador c# para compilar o assembly amigável, você deve especificar explicitamente o nome do arquivo de saída (.exe ou. dll) usando o **/out** opção de compilador.</span><span class="sxs-lookup"><span data-stu-id="2d652-157">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="2d652-158">Isso é necessário porque o compilador ainda não gerou o nome do assembly que está compilando no momento em que ele está se associando às referências externas.</span><span class="sxs-lookup"><span data-stu-id="2d652-158">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="2d652-159">O **/out** opção de compilador é opcional para o compilador do Visual Basic e o correspondente **-out** ou **-o** opção de compilador não deve ser usada durante a compilação de amigo assemblies com o F# compilador.</span><span class="sxs-lookup"><span data-stu-id="2d652-159">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
 <span data-ttu-id="2d652-160">Você pode usar [Sn.exe (ferramenta de nome forte)](~/docs/framework/tools/sn-exe-strong-name-tool.md) para recuperar a chave pública completa de um arquivo de chave de nome forte (. snk).</span><span class="sxs-lookup"><span data-stu-id="2d652-160">You can use [Sn.exe (Strong Name Tool)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="2d652-161">Para fazer isso, você deve executar as seguintes etapas:</span><span class="sxs-lookup"><span data-stu-id="2d652-161">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="2d652-162">Extraia a chave pública do arquivo de chave forte para um arquivo separado:</span><span class="sxs-lookup"><span data-stu-id="2d652-162">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="2d652-163">**Sn -p**  *snk_file* *outfile*</span><span class="sxs-lookup"><span data-stu-id="2d652-163">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="2d652-164">Exiba chave pública completa para o console:</span><span class="sxs-lookup"><span data-stu-id="2d652-164">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="2d652-165">**Sn -tp**  *outfile*</span><span class="sxs-lookup"><span data-stu-id="2d652-165">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="2d652-166">Copie e cole o valor da chave público completa em seu código-fonte.</span><span class="sxs-lookup"><span data-stu-id="2d652-166">Copy and paste the full public key value into your source code.</span></span>  
  
 <span data-ttu-id="2d652-167">Para obter mais informações sobre como usar o <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo, consulte os tópicos a seguir:</span><span class="sxs-lookup"><span data-stu-id="2d652-167">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="2d652-168">Assemblies amigáveis (C++)</span><span class="sxs-lookup"><span data-stu-id="2d652-168">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="2d652-169">Assemblies Amigáveis</span><span class="sxs-lookup"><span data-stu-id="2d652-169">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
   
  
## Examples  
 <span data-ttu-id="2d652-170">**Assemblies assinados**</span><span class="sxs-lookup"><span data-stu-id="2d652-170">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="2d652-171">O exemplo a seguir usa o <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributos para tornar uma `internal` método chamado `AppendDirectorySeparator` em um assembly assinado visível a outro assembly assinado.</span><span class="sxs-lookup"><span data-stu-id="2d652-171">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="2d652-172">Ele define uma `FileUtilities` classe que inclui interno `AppendDirectorySeparator` método.</span><span class="sxs-lookup"><span data-stu-id="2d652-172">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="2d652-173">O <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo é aplicado ao assembly que contém o `FileUtilities` classe.</span><span class="sxs-lookup"><span data-stu-id="2d652-173">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="2d652-174">O atributo permite que um assembly denominado `Friend1` para acessar esse membro interno.</span><span class="sxs-lookup"><span data-stu-id="2d652-174">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="2d652-175">Se o exemplo a seguir é compilado em um assembly de nome forte chamado `Friend1`, ele pode chamar com êxito o `FileUtilities.AppendDirectorySeparator` método, mesmo que o método é interno ao `Assembly1` assembly.</span><span class="sxs-lookup"><span data-stu-id="2d652-175">If the following example is compiled into a strong-named assembly named `Friend1`, it can successfully call the `FileUtilities.AppendDirectorySeparator` method, even though the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="2d652-176">Observe que, se você estiver compilando em c# na linha de comando, você deve usar o **/out** comutador de compilador para garantir que o nome do assembly amigável está disponível quando o compilador se vincula às referências externas.</span><span class="sxs-lookup"><span data-stu-id="2d652-176">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="2d652-177">O exemplo a seguir usa o <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributos para tornar um `internal` assembly não assinado de membro de um assembly sem sinal visível para outro.</span><span class="sxs-lookup"><span data-stu-id="2d652-177">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="2d652-178">O atributo garante que o `internal` `StringLib.IsFirstLetterUpperCase` método em um assembly denominado `UtilityLib` é visível para o código em um assembly chamado `Friend2`.</span><span class="sxs-lookup"><span data-stu-id="2d652-178">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="2d652-179">Este é o código-fonte para UtilityLib.dll:</span><span class="sxs-lookup"><span data-stu-id="2d652-179">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="2d652-180">**Assemblies não assinados**</span><span class="sxs-lookup"><span data-stu-id="2d652-180">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="2d652-181">O exemplo a seguir fornece o código-fonte para o `Friend2` assembly.</span><span class="sxs-lookup"><span data-stu-id="2d652-181">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="2d652-182">Observe que, se você estiver compilando em c# na linha de comando, você deve usar o **/out** comutador de compilador para garantir que o nome do assembly amigável está disponível quando o compilador se vincula às referências externas.</span><span class="sxs-lookup"><span data-stu-id="2d652-182">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllInternalsVisible">
      <MemberSignature Language="C#" Value="public bool AllInternalsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllInternalsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property AllInternalsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllInternalsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllInternalsVisible : bool with get, set" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d652-183">Esta propriedade não é implementada.</span><span class="sxs-lookup"><span data-stu-id="2d652-183">This property is not implemented.</span></span></summary>
        <value><span data-ttu-id="2d652-184">Essa propriedade não retorna um valor.</span><span class="sxs-lookup"><span data-stu-id="2d652-184">This property does not return a value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d652-185">Obtém o nome do assembly amigável para que todos os tipos e membros de tipo que são marcados com a palavra-chave <see langword="internal" /> tornem-se visíveis.</span><span class="sxs-lookup"><span data-stu-id="2d652-185">Gets the name of the friend assembly to which all types and type members that are marked with the <see langword="internal" /> keyword are to be made visible.</span></span></summary>
        <value><span data-ttu-id="2d652-186">Uma cadeia de caracteres que representa o nome do assembly amigável.</span><span class="sxs-lookup"><span data-stu-id="2d652-186">A string that represents the name of the friend assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d652-187">Para obter mais informações sobre como usar o <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo, consulte os tópicos a seguir:</span><span class="sxs-lookup"><span data-stu-id="2d652-187">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="2d652-188">Assemblies amigáveis (C++)</span><span class="sxs-lookup"><span data-stu-id="2d652-188">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="2d652-189">Assemblies Amigáveis</span><span class="sxs-lookup"><span data-stu-id="2d652-189">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>