<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46abe19aea8376a990307ff0ed9a404e52a57119" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36637477" /></Metadata><TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback = delegate of 'Key -&gt; 'Value" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">A chave que pertence ao valor a ser criado.</param>
    <summary>Representa um método que cria um valor não padrão a ser adicionado como parte de um par chave/valor a um objeto <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</summary>
    <returns>Uma instância de um tipo de referência que representa o valor a ser anexado à chave especificada.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegado encapsula um método de retorno de chamada invocado pelo <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> método quando a chave passada para o método não for encontrado no <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> objeto. O <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> método passa ao método de retorno de chamada a chave que representa um objeto gerenciado ao qual um valor da propriedade deve ser dinamicamente conectados. O método é responsável por retornar o valor da propriedade para seu chamador, que, por sua vez, adiciona o par chave/valor para a tabela.  
  
 O <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> método é usado para retornar uma instância de um tipo de referência que pode ser associada à chave especificada. Ele permite que essa instância a ser inicializado usando os valores não padrão. Se a chave não for encontrada na tabela, o <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> método adiciona um par chave/valor no qual o valor é inicializado usando valores padrão.  
  
   
  
## Examples  
 O exemplo a seguir define uma `MainClass` classe e um `MainInfo` classe. `MainInfo` Fornece informações sobre o `MainClass` instância. Ele também define um estático (`Shared` no Visual Basic) `CreateAttachedValue` método que pode ser atribuído ao <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegado e passada para o <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> método. O exemplo chama o <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> método para adicionar um `MainClass` objeto e correspondente `MainInfo` do objeto para um <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabela. O exemplo também ilustra chamadas para o <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> e <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> métodos para adicionar pares chave/valor para a tabela e uma chamada para o <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> método para recuperar o valor que pertence a uma chave existente.  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>