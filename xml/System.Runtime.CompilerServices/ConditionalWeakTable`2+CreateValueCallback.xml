<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key"><span data-ttu-id="953fa-101">A chave que pertence ao valor a ser criado.</span><span class="sxs-lookup"><span data-stu-id="953fa-101">The key that belongs to the value to create.</span></span></param>
    <summary><span data-ttu-id="953fa-102">Representa um método que cria um valor não padrão a ser adicionado como parte de um par chave/valor a um objeto <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</span><span class="sxs-lookup"><span data-stu-id="953fa-102">Represents a method that creates a non-default value to add as part of a key/value pair to a <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> object.</span></span></summary>
    <returns><span data-ttu-id="953fa-103">Uma instância de um tipo de referência que representa o valor a ser anexado à chave especificada.</span><span class="sxs-lookup"><span data-stu-id="953fa-103">An instance of a reference type that represents the value to attach to the specified key.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-104">O <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegado encapsula um método de retorno de chamada é invocado pelo <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> método quando a chave passada para o método não é encontrado no <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> objeto.</span><span class="sxs-lookup"><span data-stu-id="953fa-104">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate encapsulates a callback method that is invoked by the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> method when the key passed to the method is not found in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object.</span></span> <span data-ttu-id="953fa-105">O <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> método passa o método de retorno de chamada a chave que representa um objeto gerenciado no qual um valor de propriedade será anexada dinamicamente.</span><span class="sxs-lookup"><span data-stu-id="953fa-105">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method passes the callback method the key that represents a managed object to which a property value is to be dynamically attached.</span></span> <span data-ttu-id="953fa-106">O método é responsável por retornar o valor da propriedade ao chamador, que, por sua vez, adiciona o par chave/valor para a tabela.</span><span class="sxs-lookup"><span data-stu-id="953fa-106">The method is responsible for returning the property value to its caller, which, in turn, adds the key/value pair to the table.</span></span>  
  
 <span data-ttu-id="953fa-107">O <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> método é usado para retornar uma instância de um tipo de referência que pode ser anexado à chave especificada.</span><span class="sxs-lookup"><span data-stu-id="953fa-107">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> method is used to return an instance of a reference type that can be attached to the specified key.</span></span> <span data-ttu-id="953fa-108">Ele permite que essa instância a ser inicializado usando valores não padrão.</span><span class="sxs-lookup"><span data-stu-id="953fa-108">It enables that instance to be initialized using non-default values.</span></span> <span data-ttu-id="953fa-109">Se a chave não for encontrada na tabela, o <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> método adiciona um par chave/valor no qual o valor é iniciado usando valores padrão.</span><span class="sxs-lookup"><span data-stu-id="953fa-109">If the key is not found in the table, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> method adds a key/value pair in which the value is initialized using default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="953fa-110">O exemplo a seguir define uma `MainClass` classe e um `MainInfo` classe.</span><span class="sxs-lookup"><span data-stu-id="953fa-110">The following example defines a `MainClass` class and a `MainInfo` class.</span></span> <span data-ttu-id="953fa-111">`MainInfo` Fornece informações sobre o `MainClass` instância.</span><span class="sxs-lookup"><span data-stu-id="953fa-111">`MainInfo` provides information about the `MainClass` instance.</span></span> <span data-ttu-id="953fa-112">Também define um static (`Shared` no Visual Basic) `CreateAttachedValue` método que pode ser atribuído ao <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegar e passados para o <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> método.</span><span class="sxs-lookup"><span data-stu-id="953fa-112">It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method.</span></span> <span data-ttu-id="953fa-113">O exemplo chama o <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> método para adicionar um `MainClass` objeto e correspondente `MainInfo` o objeto para um <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabela.</span><span class="sxs-lookup"><span data-stu-id="953fa-113">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its corresponding `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="953fa-114">O exemplo também ilustra chamadas para o <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> e <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> métodos para adicionar pares chave/valor para a tabela e uma chamada para o <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> método para recuperar o valor que pertence a uma chave existente.</span><span class="sxs-lookup"><span data-stu-id="953fa-114">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and a call to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value that belongs to an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>