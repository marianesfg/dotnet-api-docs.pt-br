<Type Name="IsCopyConstructed" FullName="System.Runtime.CompilerServices.IsCopyConstructed">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38905f8c9832a171a91648224aa150f1b8b76c31" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48737243" /></Metadata><TypeSignature Language="C#" Value="public static class IsCopyConstructed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsCopyConstructed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsCopyConstructed" />
  <TypeSignature Language="VB.NET" Value="Public Class IsCopyConstructed" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsCopyConstructed abstract sealed" />
  <TypeSignature Language="F#" Value="type IsCopyConstructed = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5fa62-101">Indica que qualquer cópia de valores desse tipo deve usar o construtor de cópia fornecido pelo tipo.</span><span class="sxs-lookup"><span data-stu-id="5fa62-101">Indicates that any copying of values of this type must use the copy constructor provided by the type.</span></span>  <span data-ttu-id="5fa62-102">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="5fa62-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fa62-103">Qualquer tipo modificado pela <xref:System.Runtime.CompilerServices.IsCopyConstructed> classe deve implementar um método chamado `MarshalCopy` que chama o construtor de cópia nativo.</span><span class="sxs-lookup"><span data-stu-id="5fa62-103">Any type modified by the <xref:System.Runtime.CompilerServices.IsCopyConstructed> class must implement a method named `MarshalCopy` that calls the native copy constructor.</span></span>  
  
 <span data-ttu-id="5fa62-104">Qualquer tipo de C++ nativo que é emitido em metadados com construtores de cópia precisa ter os métodos chamados pelo empacotamento ao copiar valores além do limite de empacotamento.</span><span class="sxs-lookup"><span data-stu-id="5fa62-104">Any native C++ type that is emitted into metadata with copy constructors needs to have those methods called by the marshaler when copying values across the marshaling boundary.</span></span>  <span data-ttu-id="5fa62-105">O compilador do C++ da Microsoft modifica todos os tipos de C++ nativos em parâmetros de método e retornar tipos que têm esse modificador para disparar esse comportamento no código de marshaling.</span><span class="sxs-lookup"><span data-stu-id="5fa62-105">The Microsoft C++ compiler modifies all native C++ types in method parameters and return types that have this modifier to trigger this behavior in the marshaling code.</span></span>  
  
 <span data-ttu-id="5fa62-106">Compiladores emitem modificadores personalizados nos metadados para alterar a maneira como o compilador just-in-time (JIT) lida com valores quando o comportamento padrão não é apropriado.</span><span class="sxs-lookup"><span data-stu-id="5fa62-106">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="5fa62-107">Quando o compilador JIT encontra um modificador personalizado, ele lida com o valor da maneira que especifica o modificador.</span><span class="sxs-lookup"><span data-stu-id="5fa62-107">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="5fa62-108">Os compiladores podem aplicar os modificadores personalizados para os métodos, parâmetros e retornam valores.</span><span class="sxs-lookup"><span data-stu-id="5fa62-108">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="5fa62-109">O compilador JIT deve responder a modificadores obrigatórios, mas pode ignorar modificadores opcionais.</span><span class="sxs-lookup"><span data-stu-id="5fa62-109">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="5fa62-110">Você pode emitir modificadores personalizados em metadados usando uma das seguintes técnicas:</span><span class="sxs-lookup"><span data-stu-id="5fa62-110">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="5fa62-111">Usando os métodos de <xref:System.Reflection.Emit.TypeBuilder> classe, como <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, e <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="5fa62-111">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="5fa62-112">Gerar um arquivo de instruções do Microsoft intermediate language (MSIL) que contém as chamadas para `modopt` e `modreq`e montando o arquivo com o [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="5fa62-112">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="5fa62-113">Usando a API de reflexão não gerenciada.</span><span class="sxs-lookup"><span data-stu-id="5fa62-113">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>