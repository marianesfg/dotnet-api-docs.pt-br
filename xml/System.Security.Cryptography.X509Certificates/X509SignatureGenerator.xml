<Type Name="X509SignatureGenerator" FullName="System.Security.Cryptography.X509Certificates.X509SignatureGenerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="53abf21b2933618e694dbf722ea76bfdd64f88dc" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36530591" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class X509SignatureGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit X509SignatureGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509SignatureGenerator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class X509SignatureGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509SignatureGenerator abstract" />
  <TypeSignature Language="F#" Value="type X509SignatureGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ffe87-101">Classe base para criar assinaturas codificadas conforme necessário para certificados X.509.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ffe87-101">Base class for building encoded signatures as needed for X.509 certificates.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509SignatureGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509SignatureGenerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509SignatureGenerator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ffe87-102">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.X509Certificates.X509SignatureGenerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-102">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SignatureGenerator" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildPublicKey">
      <MemberSignature Language="C#" Value="protected abstract System.Security.Cryptography.X509Certificates.PublicKey BuildPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Cryptography.X509Certificates.PublicKey BuildPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509SignatureGenerator.BuildPublicKey" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function BuildPublicKey () As PublicKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Security::Cryptography::X509Certificates::PublicKey ^ BuildPublicKey();" />
      <MemberSignature Language="F#" Value="abstract member BuildPublicKey : unit -&gt; System.Security.Cryptography.X509Certificates.PublicKey" Usage="x509SignatureGenerator.BuildPublicKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.PublicKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ffe87-103">Quando substituído em uma classe derivada, gera a chave pública do certificado que tenha <see cref="T:System.Security.Cryptography.Oid" />corretamente codificado, os parâmetros da chave pública e os valores da chave pública.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-103">When overridden in a derived class, produces the certificate's public key that has the correctly encoded <see cref="T:System.Security.Cryptography.Oid" />, public key parameters and public key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ffe87-104">A chave pública do certificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-104">The certificate's public key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForECDsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509SignatureGenerator CreateForECDsa (System.Security.Cryptography.ECDsa key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.X509Certificates.X509SignatureGenerator CreateForECDsa(class System.Security.Cryptography.ECDsa key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509SignatureGenerator.CreateForECDsa(System.Security.Cryptography.ECDsa)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateForECDsa (key As ECDsa) As X509SignatureGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509SignatureGenerator ^ CreateForECDsa(System::Security::Cryptography::ECDsa ^ key);" />
      <MemberSignature Language="F#" Value="static member CreateForECDsa : System.Security.Cryptography.ECDsa -&gt; System.Security.Cryptography.X509Certificates.X509SignatureGenerator" Usage="System.Security.Cryptography.X509Certificates.X509SignatureGenerator.CreateForECDsa key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509SignatureGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.ECDsa" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ffe87-105">A chave privada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-105">The private key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ffe87-106">Cria um objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509SignatureGenerator" /> para assinaturas ECDSA usando a chave privada especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-106">Creates an <see cref="T:System.Security.Cryptography.X509Certificates.X509SignatureGenerator" /> object for ECDSA signatures using the specified private key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ffe87-107">Um objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509SignatureGenerator" /> para assinaturas ECDSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-107">An <see cref="T:System.Security.Cryptography.X509Certificates.X509SignatureGenerator" /> object for ECDSA signatures.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ffe87-108">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-108">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateForRSA">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509SignatureGenerator CreateForRSA (System.Security.Cryptography.RSA key, System.Security.Cryptography.RSASignaturePadding signaturePadding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.X509Certificates.X509SignatureGenerator CreateForRSA(class System.Security.Cryptography.RSA key, class System.Security.Cryptography.RSASignaturePadding signaturePadding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509SignatureGenerator.CreateForRSA(System.Security.Cryptography.RSA,System.Security.Cryptography.RSASignaturePadding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateForRSA (key As RSA, signaturePadding As RSASignaturePadding) As X509SignatureGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509SignatureGenerator ^ CreateForRSA(System::Security::Cryptography::RSA ^ key, System::Security::Cryptography::RSASignaturePadding ^ signaturePadding);" />
      <MemberSignature Language="F#" Value="static member CreateForRSA : System.Security.Cryptography.RSA * System.Security.Cryptography.RSASignaturePadding -&gt; System.Security.Cryptography.X509Certificates.X509SignatureGenerator" Usage="System.Security.Cryptography.X509Certificates.X509SignatureGenerator.CreateForRSA (key, signaturePadding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509SignatureGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.RSA" />
        <Parameter Name="signaturePadding" Type="System.Security.Cryptography.RSASignaturePadding" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ffe87-109">A chave privada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-109">The private key.</span>
          </span>
        </param>
        <param name="signaturePadding">
          <span data-ttu-id="ffe87-110">O modo de preenchimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-110">The padding mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ffe87-111">Cria um objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509SignatureGenerator" /> para assinaturas RSA usando a chave privada especificada e o modo de preenchimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-111">Creates an <see cref="T:System.Security.Cryptography.X509Certificates.X509SignatureGenerator" /> object for RSA signatures using the specified private key and padding mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ffe87-112">Um objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509SignatureGenerator" /> para assinaturas RSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-112">An <see cref="T:System.Security.Cryptography.X509Certificates.X509SignatureGenerator" /> object for RSA signatures.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ffe87-113">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-113">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ffe87-114">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-114">-or-</span>
          </span>
          <span data-ttu-id="ffe87-115">
            <paramref name="signaturePadding" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-115">
              <paramref name="signaturePadding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ffe87-116">O modo de preenchimento especificado não é válido para este algoritmo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-116">The specified padding mode is not valid for this algorithm.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureAlgorithmIdentifier">
      <MemberSignature Language="C#" Value="public abstract byte[] GetSignatureAlgorithmIdentifier (System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetSignatureAlgorithmIdentifier(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509SignatureGenerator.GetSignatureAlgorithmIdentifier(System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSignatureAlgorithmIdentifier (hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ GetSignatureAlgorithmIdentifier(System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member GetSignatureAlgorithmIdentifier : System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="x509SignatureGenerator.GetSignatureAlgorithmIdentifier hashAlgorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithm">
          <span data-ttu-id="ffe87-117">O algoritmo de hash a ser usado para codificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-117">The hash algorithm to use for encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ffe87-118">Quando substituído em uma classe derivada, codifica o identificador de algoritmo de X.509 para essa assinatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-118">When overridden in a derived class, encodes the X.509 algorithm identifier for this signature.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ffe87-119">O valor codificado para o identificador de algoritmo de X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-119">The encoded value for the X.509 algorithm identifier.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.PublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509SignatureGenerator.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As PublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::PublicKey ^ PublicKey { System::Security::Cryptography::X509Certificates::PublicKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.X509Certificates.PublicKey" Usage="System.Security.Cryptography.X509Certificates.X509SignatureGenerator.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.PublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ffe87-120">Obtém a chave pública associada à chave privada com a qual as assinaturas estão sendo geradas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-120">Gets the public key associated with the private key with which signatures are being generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ffe87-121">A chave pública associada à chave privada com a qual as assinaturas estão sendo geradas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-121">The public key associated with the private key with which signatures are being generated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe87-122">Se a chave pública é nula, ele cria uma chave pública ao chamar o <xref:System.Security.Cryptography.X509Certificates.X509SignatureGenerator.BuildPublicKey> método.</span><span class="sxs-lookup"><span data-stu-id="ffe87-122">If the public key is null, it creates a public key by calling the <xref:System.Security.Cryptography.X509Certificates.X509SignatureGenerator.BuildPublicKey> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public abstract byte[] SignData (byte[] data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignData(unsigned int8[] data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509SignatureGenerator.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SignData (data As Byte(), hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member SignData : byte[] * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="x509SignatureGenerator.SignData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="ffe87-123">Os dados de entrada para os quais gerar a assinatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-123">The input data for which to produce the signature.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="ffe87-124">O algoritmo de hash a ser usado para gerar a assinatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-124">The hash algorithm to use to produce the signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ffe87-125">Quando substituído em uma classe derivada, gera uma assinatura para os dados especificados, usando o algoritmo de hash especificado e codifica os resultados apropriadamente para valores de assinatura X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-125">When overridden in a derived class, produces a signature for the specified data using the specified hash algorithm and encodes the results appropiately for X.509 signature values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ffe87-126">A assinatura X.509 para os dados especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ffe87-126">The X.509 signature for the specified data.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>