<Type Name="AnnotationDocumentPaginator" FullName="System.Windows.Annotations.AnnotationDocumentPaginator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8dd5af9824e57d78659f361dae88c312c749a19c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36573276" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnnotationDocumentPaginator extends System.Windows.Documents.DocumentPaginator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Annotations.AnnotationDocumentPaginator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnnotationDocumentPaginator&#xA;Inherits DocumentPaginator" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnnotationDocumentPaginator sealed : System::Windows::Documents::DocumentPaginator" />
  <TypeSignature Language="F#" Value="type AnnotationDocumentPaginator = class&#xA;    inherit DocumentPaginator" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.DocumentPaginator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece um <see cref="T:System.Windows.Documents.DocumentPaginator" /> para imprimir um documento junto com suas anotações associadas.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Annotations.AnnotationDocumentPaginator> classe encapsula o <xref:System.Windows.Documents.DocumentPaginator> especificado para o <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> construtor para adicionar as anotações do usuário para as páginas para impressão.  
  
   
  
## Examples  
 O exemplo a seguir mostra o uso da <xref:System.Windows.Annotations.AnnotationDocumentPaginator> classe.  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/Window1.xaml.cs#docviewannxpsprint)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/window1.xaml.vb#docviewannxpsprint)]  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#docviewannxpsdocpaginator)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#docviewannxpsdocpaginator)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Annotations.AnnotationDocumentPaginator> classe encapsula o <xref:System.Windows.Documents.DocumentPaginator> especificado para o <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> construtor para adicionar as anotações do usuário para as páginas para impressão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.IO.Stream annotationStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.IO.Stream annotationStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalPaginator As DocumentPaginator, annotationStore As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnotationDocumentPaginator(System::Windows::Documents::DocumentPaginator ^ originalPaginator, System::IO::Stream ^ annotationStore);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator * System.IO.Stream -&gt; System.Windows.Annotations.AnnotationDocumentPaginator" Usage="new System.Windows.Annotations.AnnotationDocumentPaginator (originalPaginator, annotationStore)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="originalPaginator">O documento ao qual adicionar as anotações impressas.</param>
        <param name="annotationStore">O fluxo de armazenamento de anotação do qual recuperar as anotações.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> com base em um <see cref="T:System.Windows.Documents.DocumentPaginator" /> especificado e no armazenamento de anotação <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão Este construtor define a direção do fluxo de texto <xref:System.Windows.FlowDirection.LeftToRight>.  Se necessário você pode usar uma da alternativa <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> sobrecargas de construtor para definir o texto <xref:System.Windows.FlowDirection> para uma configuração diferente.  
  
 O <xref:System.Windows.Annotations.AnnotationDocumentPaginator> classe encapsula o <xref:System.Windows.Documents.DocumentPaginator> especificado para o <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> construtor para adicionar as anotações do usuário para as páginas para impressão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.Windows.Annotations.Storage.AnnotationStore annotationStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.Windows.Annotations.Storage.AnnotationStore annotationStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnotationDocumentPaginator(System::Windows::Documents::DocumentPaginator ^ originalPaginator, System::Windows::Annotations::Storage::AnnotationStore ^ annotationStore);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator * System.Windows.Annotations.Storage.AnnotationStore -&gt; System.Windows.Annotations.AnnotationDocumentPaginator" Usage="new System.Windows.Annotations.AnnotationDocumentPaginator (originalPaginator, annotationStore)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.Windows.Annotations.Storage.AnnotationStore" />
      </Parameters>
      <Docs>
        <param name="originalPaginator">O documento ao qual adicionar as anotações impressas.</param>
        <param name="annotationStore">O repositório do qual recuperar as anotações.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> com base no <see cref="T:System.Windows.Documents.DocumentPaginator" /> e no <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão Este construtor define a direção do fluxo de texto <xref:System.Windows.FlowDirection.LeftToRight>.  Se necessário você pode usar uma da alternativa <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> sobrecargas de construtor para definir o texto <xref:System.Windows.FlowDirection> para uma configuração diferente.  
  
 O <xref:System.Windows.Annotations.AnnotationDocumentPaginator> classe encapsula o <xref:System.Windows.Documents.DocumentPaginator> especificado para o <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> construtor para adicionar as anotações do usuário para as páginas para impressão.  
  
   
  
## Examples  
 O exemplo a seguir mostra o uso do <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> construtor.  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/Window1.xaml.cs#docviewannxpsprint)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/window1.xaml.vb#docviewannxpsprint)]  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#docviewannxpsdocpaginator)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#docviewannxpsdocpaginator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.IO.Stream annotationStore, System.Windows.FlowDirection flowDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.IO.Stream annotationStore, valuetype System.Windows.FlowDirection flowDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream,System.Windows.FlowDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnotationDocumentPaginator(System::Windows::Documents::DocumentPaginator ^ originalPaginator, System::IO::Stream ^ annotationStore, System::Windows::FlowDirection flowDirection);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator * System.IO.Stream * System.Windows.FlowDirection -&gt; System.Windows.Annotations.AnnotationDocumentPaginator" Usage="new System.Windows.Annotations.AnnotationDocumentPaginator (originalPaginator, annotationStore, flowDirection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.IO.Stream" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
      </Parameters>
      <Docs>
        <param name="originalPaginator">O documento ao qual adicionar as anotações impressas.</param>
        <param name="annotationStore">O fluxo de armazenamento de anotação do qual recuperar as anotações.</param>
        <param name="flowDirection">A direção do fluxo de texto, <see cref="F:System.Windows.FlowDirection.LeftToRight" /> ou <see cref="F:System.Windows.FlowDirection.RightToLeft" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> com base em um <see cref="T:System.Windows.Documents.DocumentPaginator" /> especificado, no armazenamento de anotação <see cref="T:System.IO.Stream" /> e no texto <see cref="T:System.Windows.FlowDirection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Annotations.AnnotationDocumentPaginator> classe encapsula o <xref:System.Windows.Documents.DocumentPaginator> especificado para o <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> construtor para adicionar as anotações do usuário para as páginas para impressão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.Windows.Annotations.Storage.AnnotationStore annotationStore, System.Windows.FlowDirection flowDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.Windows.Annotations.Storage.AnnotationStore annotationStore, valuetype System.Windows.FlowDirection flowDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore,System.Windows.FlowDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnotationDocumentPaginator(System::Windows::Documents::DocumentPaginator ^ originalPaginator, System::Windows::Annotations::Storage::AnnotationStore ^ annotationStore, System::Windows::FlowDirection flowDirection);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator * System.Windows.Annotations.Storage.AnnotationStore * System.Windows.FlowDirection -&gt; System.Windows.Annotations.AnnotationDocumentPaginator" Usage="new System.Windows.Annotations.AnnotationDocumentPaginator (originalPaginator, annotationStore, flowDirection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.Windows.Annotations.Storage.AnnotationStore" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
      </Parameters>
      <Docs>
        <param name="originalPaginator">O documento ao qual adicionar as anotações impressas.</param>
        <param name="annotationStore">O repositório do qual recuperar as anotações.</param>
        <param name="flowDirection">A direção do fluxo de texto, <see cref="F:System.Windows.FlowDirection.LeftToRight" /> ou <see cref="F:System.Windows.FlowDirection.RightToLeft" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> com base em um <see cref="T:System.Windows.Documents.DocumentPaginator" /> especificado, em <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> e no texto <see cref="T:System.Windows.FlowDirection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Annotations.AnnotationDocumentPaginator> classe encapsula o <xref:System.Windows.Documents.DocumentPaginator> especificado para o <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> construtor para adicionar as anotações do usuário para as páginas para impressão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public override void CancelAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CancelAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CancelAsync (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CancelAsync(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="override this.CancelAsync : obj -&gt; unit" Usage="annotationDocumentPaginator.CancelAsync userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">O identificador exclusivo definido pelo aplicativo passado na chamada para iniciar a operação assíncrona.</param>
        <summary>Cancela todas as operações assíncronas iniciadas com um determinado objeto <paramref name="userState" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)" />
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ComputePageCount">
      <MemberSignature Language="C#" Value="public override void ComputePageCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ComputePageCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ComputePageCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ComputePageCount();" />
      <MemberSignature Language="F#" Value="override this.ComputePageCount : unit -&gt; unit" Usage="annotationDocumentPaginator.ComputePageCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Força uma paginação do conteúdo, atualiza <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> com o novo total e define <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> como <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Imediatamente após <xref:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount%2A> retorna, <xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A> será `true` e <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> propriedade refletirá o número total de páginas.  
  
 O número de páginas pode ser alterado se o conteúdo da anotação é modificado ou <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> é alterado.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ComputePageCountAsync">
      <MemberSignature Language="C#" Value="public override void ComputePageCountAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ComputePageCountAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ComputePageCountAsync (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ComputePageCountAsync(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="override this.ComputePageCountAsync : obj -&gt; unit" Usage="annotationDocumentPaginator.ComputePageCountAsync userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">Um objeto definido pelo aplicativo para identificar a operação assíncrona.</param>
        <summary>Inicia uma paginação assíncrona do conteúdo, atualiza <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> com o novo total e define <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> como <see langword="true" /> quando ele for concluído.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `userState` parâmetro destina-se ao uso com <xref:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync%2A> método se o aplicativo deseja cancelar a operação assíncrona antes da conclusão.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)" />
        <altmember cref="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted" />
        <altmember cref="M:System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount" />
      </Docs>
    </Member>
    <Member MemberName="GetPage">
      <MemberSignature Language="C#" Value="public override System.Windows.Documents.DocumentPage GetPage (int pageNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Documents.DocumentPage GetPage(int32 pageNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPage(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPage (pageNumber As Integer) As DocumentPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Documents::DocumentPage ^ GetPage(int pageNumber);" />
      <MemberSignature Language="F#" Value="override this.GetPage : int -&gt; System.Windows.Documents.DocumentPage" Usage="annotationDocumentPaginator.GetPage pageNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.DocumentPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pageNumber">O número da página com base em zero do <see cref="T:System.Windows.Documents.DocumentPage" /> a retornar.</param>
        <summary>Retorna um <see cref="T:System.Windows.Documents.DocumentPage" /> junto com anotações de usuário associadas para um número de página especificado.</summary>
        <returns>O <see cref="T:System.Windows.Documents.DocumentPage" /> para o <paramref name="pageNumber" /> especificado; ou <see cref="F:System.Windows.Documents.DocumentPage.Missing" />, se o <paramref name="pageNumber" /> especificado não existir.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetPageAsync">
      <MemberSignature Language="C#" Value="public override void GetPageAsync (int pageNumber, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetPageAsync(int32 pageNumber, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetPageAsync (pageNumber As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetPageAsync(int pageNumber, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="override this.GetPageAsync : int * obj -&gt; unit" Usage="annotationDocumentPaginator.GetPageAsync (pageNumber, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pageNumber">O número da página com base em zero do <see cref="T:System.Windows.Documents.DocumentPage" /> a recuperar.</param>
        <param name="userState">Um objeto definido pelo aplicativo usado para identificar a operação assíncrona.</param>
        <summary>Retorna um <see cref="T:System.Windows.Documents.DocumentPage" /> de maneira assíncrona junto com anotações de usuário associadas para um número de página especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `userState` parâmetro destina-se ao uso com <xref:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync%2A> método se o aplicativo deseja cancelar a operação assíncrona antes da conclusão.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)" />
        <altmember cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" />
        <altmember cref="M:System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPage(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsPageCountValid">
      <MemberSignature Language="C#" Value="public override bool IsPageCountValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPageCountValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsPageCountValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPageCountValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPageCountValid : bool" Usage="System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> é o número total de páginas.</summary>
        <value>
          <see langword="true" /> Se a paginação estiver concluída e <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> representa o total de número de páginas; caso contrário, <see langword="false" /> se a paginação está em processo e <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> representa o número de páginas atualmente formatada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A> pode alternar de `true` para `false` e <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> recalculadas se o conteúdo é alterado ou <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> dispara repaginação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public override int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica o número de páginas atualmente formatadas.</summary>
        <value>Se <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> é <see langword="true" />, o número total de páginas de anotação; caso contrário, se <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> é <see langword="false" />, o número de páginas atualmente formatada (paginação no processo).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A> pode ser alterada de `true` para `false` e <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> recalculadas se o conteúdo é alterado ou <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> dispara repaginação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public override System.Windows.Size PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PageSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Size PageSize { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.PageSize : System.Windows.Size with get, set" Usage="System.Windows.Annotations.AnnotationDocumentPaginator.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a largura e a altura sugeridas de cada página.</summary>
        <value>O sugerido largura e altura para formatação de páginas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> Obtém ou define o *sugerido* tamanho para a formatação de páginas.  Use o <xref:System.Windows.Documents.DocumentPage.Size%2A> propriedade para obter o tamanho real da página (se for necessário o tamanho real pode ser cortado do sugerido <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public override System.Windows.Documents.IDocumentPaginatorSource Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.IDocumentPaginatorSource Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Source As IDocumentPaginatorSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Documents::IDocumentPaginatorSource ^ Source { System::Windows::Documents::IDocumentPaginatorSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.Windows.Documents.IDocumentPaginatorSource" Usage="System.Windows.Annotations.AnnotationDocumentPaginator.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.IDocumentPaginatorSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o documento de origem que está sendo paginado.</summary>
        <value>O documento de origem que está sendo paginado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>